<?xml version="1.0" encoding="UTF-8" standalone="no"?><jmeterTestPlan jmeter="2.13 r1665067" properties="2.8" version="1.2"><hashTree><TestPlan enabled="true" guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan"><stringProp name="TestPlan.comments"/><boolProp name="TestPlan.functional_mode">false</boolProp><boolProp name="TestPlan.serialize_threadgroups">false</boolProp><elementProp elementType="Arguments" enabled="true" guiclass="ArgumentsPanel" name="TestPlan.user_defined_variables" testclass="Arguments" testname="User Defined Variables"><collectionProp name="Arguments.arguments"/></elementProp><stringProp name="TestPlan.user_define_classpath"/></TestPlan><hashTree><ThreadGroup enabled="true" guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="CNG_TP34_Background_View_Claim_Summary"><stringProp name="ThreadGroup.on_sample_error">continue</stringProp><elementProp elementType="LoopController" enabled="true" guiclass="LoopControlPanel" name="ThreadGroup.main_controller" testclass="LoopController" testname="Loop Controller"><boolProp name="LoopController.continue_forever">false</boolProp><stringProp name="LoopController.loops">1</stringProp></elementProp><stringProp name="ThreadGroup.num_threads">1</stringProp><stringProp name="ThreadGroup.ramp_time">1</stringProp><longProp name="ThreadGroup.ramp_time">1455260938000</longProp><longProp name="ThreadGroup.start_time">1455260938000</longProp><boolProp name="ThreadGroup.scheduler">false</boolProp><stringProp name="ThreadGroup.duration"/><stringProp name="ThreadGroup.delay"/></ThreadGroup><hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-INIT"><stringProp name="TestPlan.comments">This section contains the INIT part of Loadrunner</stringProp></GenericController><hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-vuser_init"><stringProp name="TestPlan.comments">This section contains the vuser_init part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP34_A_Launch_Browser"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"/></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${pServer}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">Get</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">Accept-Language</stringProp><stringProp name="Header.value">en-US</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="21338998">Please log in using your Enterprise ID and password</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP34_B_Login"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PMClaimCenterLogin.fcc"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="USER"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">USER</stringProp><stringProp name="Argument.value">${pUsername}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PASSWORD"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PASSWORD</stringProp><stringProp name="Argument.value">${pPassword}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="target"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">target</stringProp><stringProp name="Argument.value">http://${pServer}/cc/ClaimCenter.do</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="smauthreason"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">smauthreason</stringProp><stringProp name="Argument.value">0</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${pServer}/LMAuth/PMClaimCenterLogin.fcc?TYPE=${TYPE}&amp;REALMOID=${REALMOID}&amp;GUID=&amp;SMAUTHREASON=0&amp;METHOD=GET&amp;SMAGENTNAME=${cAgentName}&amp;TARGET=-SM-http%3a%2f%2fperf--pmclaimcenter--internal%2elibertyec%2ecom%2fcc%2fClaimCenter%2edo</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">Accept-Language</stringProp><stringProp name="Header.value">en-US</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="55643292">GENERAL_MSG_CAT_SSL_ERROR</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><BeanShellSampler enabled="true" guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="OutPut Message"><stringProp name="TestPlan.comments">"Browser successfully launched" | "Error launching browser" | </stringProp><stringProp name="BeanShellSampler.query">log.info(""+"Browser successfully launched");log.info(""+"Error launching browser");</stringProp><stringProp name="BeanShellSampler.filename"/><stringProp name="BeanShellSampler.parameters"/><boolProp name="BeanShellSampler.resetInterpreter"/></BeanShellSampler><hashTree/><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP34_C_Activities_Click_Search"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_2"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=""><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name"/><stringProp name="Argument.value">${pClaimNumber}&amp;QuickJump=&amp;Desktop%3AMenuLinks_toggle=&amp;DesktopActivities%3ADesktopActivitiesScreen%3ADesktopActivitiesLV%3ADesktopActivitiesFilter=AndFilter%2FMy%20activities%20today&amp;%3Atblinks=${TBLINKS_URL2}%3D&amp;%3Atabs=${TABS_URL2}&amp;infoBar=${INFOBAR_URL2}&amp;Desktop%3ADesktopMenuActions=${CLAIMMENUACTIONS_URL2}&amp;Desktop%3AMenuLinks=${MENULINKS_URL2}&amp;csrfToken=&amp;eventSource=TabBar%3AClaimTab%3AClaimTab_FindClaim_Button_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${pServer}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">Accept-Language</stringProp><stringProp name="Header.value">en-US</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="70614875">GENERAL_MSG_CAT_SSL_ERROR</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP34_D_Click_Policy"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_6"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${CLAIMMENUACTIONS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${MENULINKS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">Claim:MenuLinks:Claim_ClaimPolicyGroup:ClaimPolicyGroup_ClaimPolicyGeneral_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ClaimHistory:ClaimHistoryScreen:HistoryLV:HistoryFilter"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ClaimHistory:ClaimHistoryScreen:HistoryLV:HistoryFilter</stringProp><stringProp name="Argument.value">CoreFilters.AllFilter/All</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${TBLINKS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${TABS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${INFOBAR_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${pServer}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">Accept-Language</stringProp><stringProp name="Header.value">en-US</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="27614206">GENERAL_MSG_CAT_SSL_ERROR</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP34_F_Click_PlanOfAction"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_9"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${MENULINKS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${TBLINKS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${TABS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${INFOBAR_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${CLAIMMENUACTIONS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">Claim:MenuLinks:Claim_ClaimPlanOfActionGroup:ClaimPlanOfActionGroup_ClaimEvaluations_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${pServer}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">Accept-Language</stringProp><stringProp name="Header.value">en-US</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="76076735">GENERAL_MSG_CAT_SSL_ERROR</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP34_G_Click_Litigation"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_8"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="ClaimDocuments:Claim_DocumentsScreen:ClaimDocumentSearchDV:Addressee"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ClaimDocuments:Claim_DocumentsScreen:ClaimDocumentSearchDV:Addressee</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ClaimDocuments:Claim_DocumentsScreen:ClaimDocumentSearchDV:Author"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ClaimDocuments:Claim_DocumentsScreen:ClaimDocumentSearchDV:Author</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ClaimDocuments:Claim_DocumentsScreen:ClaimDocumentSearchDV:RelatedTo"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ClaimDocuments:Claim_DocumentsScreen:ClaimDocumentSearchDV:RelatedTo</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ClaimDocuments:Claim_DocumentsScreen:ClaimDocumentSearchDV:Category"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ClaimDocuments:Claim_DocumentsScreen:ClaimDocumentSearchDV:Category</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ClaimDocuments:Claim_DocumentsScreen:ClaimDocumentSearchDV:Subcategory"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ClaimDocuments:Claim_DocumentsScreen:ClaimDocumentSearchDV:Subcategory</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ClaimDocuments:Claim_DocumentsScreen:ClaimDocumentSearchDV:DCN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ClaimDocuments:Claim_DocumentsScreen:ClaimDocumentSearchDV:DCN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${CLAIMMENUACTIONS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${INFOBAR_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${TABS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${TBLINKS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">Claim:MenuLinks:Claim_ClaimMatters_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${MENULINKS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ClaimDocuments:Claim_DocumentsScreen:ClaimDocumentSearchDV:SearchDate:SearchDateChosenOption"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ClaimDocuments:Claim_DocumentsScreen:ClaimDocumentSearchDV:SearchDate:SearchDateChosenOption</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${pServer}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">Accept-Language</stringProp><stringProp name="Header.value">en-US</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="49973832">GENERAL_MSG_CAT_SSL_ERROR</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP34_H_Click_History"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_5"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${MENULINKS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${TBLINKS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${TABS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${INFOBAR_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${CLAIMMENUACTIONS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">Claim:MenuLinks:Claim_ClaimHistory_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${pServer}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">Accept-Language</stringProp><stringProp name="Header.value">en-US</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="90070073">GENERAL_MSG_CAT_SSL_ERROR</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP34_090_Click_Documents"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_7"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${MENULINKS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${TBLINKS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${TABS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${INFOBAR_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${CLAIMMENUACTIONS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">Claim:MenuLinks:Claim_LM_ClaimDocumentsGroup:LM_ClaimDocumentsGroup_ClaimDocuments_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${pServer}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">Accept-Language</stringProp><stringProp name="Header.value">en-US</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="68563052">GENERAL_MSG_CAT_SSL_ERROR</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP34_I_Logout"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_10"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${MENULINKS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${TBLINKS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${TABS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${INFOBAR_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${CLAIMMENUACTIONS_URL2}=</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">TabBar:LogoutTabBarLink</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">TabBar:LogoutTabBarLink_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${pServer}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">Accept-Language</stringProp><stringProp name="Header.value">en-US</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="16218036">GENERAL_MSG_CAT_SSL_ERROR</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/><CookieManager enabled="true" guiclass="CookiePanel" testclass="CookieManager" testname="CookieManager"><collectionProp name="CookieManager.cookies"><elementProp elementType="Cookie" name=" DOMAIN" testname=" DOMAIN"><stringProp name="Cookie.value">{pServer}</stringProp><stringProp name="Cookie.domain"/><stringProp name="Cookie.path"/><boolProp name="Cookie.secure">false</boolProp><longProp name="Cookie.expires">0</longProp><boolProp name="Cookie.path_specified">false</boolProp><boolProp name="Cookie.domain_specified">false</boolProp></elementProp></collectionProp><boolProp name="CookieManager.clearEachIteration">false</boolProp></CookieManager><hashTree/></hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PMClaimCenterLogout.fcc"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"/></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${pServer}/LMAuth/PMClaimCenterLogout.fcc</stringProp><stringProp name="HTTPSampler.method">Get</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">Accept-Language</stringProp><stringProp name="Header.value">en-US</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="46242000">You have successfully logged out of Navigator</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree></hashTree></hashTree></hashTree><UserParameters enabled="true" guiclass="UserParametersGui" testclass="UserParameters" testname="User Defined Parameters"><boolProp name="UserParameters.per_iteration">false</boolProp><collectionProp name="UserParameters.names"/><collectionProp name="UserParameters.thread_values"><collectionProp name="3404717.0181204067"/></collectionProp><stringProp name="TestPlan.comments"/></UserParameters><hashTree/><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Pacing"><stringProp name="ConstantTimer.delay">60000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 60s x 1000</stringProp></ConstantTimer><hashTree/><CookieManager enabled="true" guiclass="CookiePanel" testclass="CookieManager" testname="CookieManager"><collectionProp name="CookieManager.cookies"/><boolProp name="CookieManager.clearEachIteration">false</boolProp></CookieManager><hashTree/><CacheManager enabled="true" guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager"><boolProp name="clearEachIteration">false</boolProp><boolProp name="useExpires">false</boolProp></CacheManager><hashTree/><CSVDataSet enabled="true" guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config"><stringProp name="delimiter">,</stringProp><stringProp name="fileEncoding"/><stringProp name="filename">nNumbers.csv</stringProp><boolProp name="quotedData">false</boolProp><boolProp name="recycle">false</boolProp><stringProp name="shareMode.all">shareMode</stringProp><boolProp name="stopThread">false</boolProp><stringProp name="variableNames"/></CSVDataSet><hashTree/><CSVDataSet enabled="true" guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config"><stringProp name="delimiter">,</stringProp><stringProp name="fileEncoding"/><stringProp name="filename">TP34.csv</stringProp><boolProp name="quotedData">false</boolProp><boolProp name="recycle">false</boolProp><stringProp name="shareMode.all">shareMode</stringProp><boolProp name="stopThread">false</boolProp><stringProp name="variableNames"/></CSVDataSet><hashTree/><ResultCollector enabled="true" guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report"><boolProp name="ResultCollector.error_logging">false</boolProp><objProp><name>saveConfig</name><value class="SampleSaveConfiguration"><time>true</time><latency>true</latency><timestamp>true</timestamp><success>true</success><label>true</label><code>true</code><message>true</message><threadName>true</threadName><dataType>true</dataType><assertions>true</assertions><subresults>true</subresults><bytes>true</bytes><threadCounts>true</threadCounts><encoding>false</encoding><responseData>false</responseData><samplerData>false</samplerData><xml>false</xml><fieldNames>false</fieldNames><responseHeaders>false</responseHeaders><requestHeaders>false</requestHeaders><responseDataOnError>false</responseDataOnError><saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage><assertionsResultsToSave>0</assertionsResultsToSave></value></objProp><stringProp name="filename">SummReport_CNG_TP34_Background_View_Claim_Summary.csv</stringProp></ResultCollector><hashTree/></hashTree></hashTree></hashTree></jmeterTestPlan>