<?xml version="1.0" encoding="UTF-8" standalone="no"?><jmeterTestPlan jmeter="2.13 r1665067" properties="2.8" version="1.2"><hashTree><TestPlan enabled="true" guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan"><stringProp name="TestPlan.comments"/><boolProp name="TestPlan.functional_mode">false</boolProp><boolProp name="TestPlan.serialize_threadgroups">false</boolProp><elementProp elementType="Arguments" enabled="true" guiclass="ArgumentsPanel" name="TestPlan.user_defined_variables" testclass="Arguments" testname="User Defined Variables"><collectionProp name="Arguments.arguments"/></elementProp><stringProp name="TestPlan.user_define_classpath"/></TestPlan><hashTree><ThreadGroup enabled="true" guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="CNG_TP12_FINANCIALS_CHECK_CREATION_PROPERTY"><stringProp name="ThreadGroup.on_sample_error">continue</stringProp><elementProp elementType="LoopController" enabled="true" guiclass="LoopControlPanel" name="ThreadGroup.main_controller" testclass="LoopController" testname="Loop Controller"><boolProp name="LoopController.continue_forever">false</boolProp><stringProp name="LoopController.loops">1</stringProp></elementProp><stringProp name="ThreadGroup.num_threads">1</stringProp><stringProp name="ThreadGroup.ramp_time">1</stringProp><longProp name="ThreadGroup.ramp_time">1455260938000</longProp><longProp name="ThreadGroup.start_time">1455260938000</longProp><boolProp name="ThreadGroup.scheduler">false</boolProp><stringProp name="ThreadGroup.duration"/><stringProp name="ThreadGroup.delay"/></ThreadGroup><hashTree><LoopController enabled="true" guiclass="LoopControlPanel" testclass="LoopController" testname="RUN x ( 1 )"><boolProp name="LoopController.continue_forever">false</boolProp><stringProp name="LoopController.loops">1</stringProp></LoopController><hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-LOGIN"><stringProp name="TestPlan.comments">This section contains the LOGIN part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_A_Launch_Browser"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"/></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">Get</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="50074546">Please log in using your Enterprise ID and password</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/><RegexExtractor enabled="true" guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cSMAGENTNAME"><stringProp name="TestPlan.comments">"ParamName=cSMAGENTNAME"|"RegExp=SMAGENTNAME=(.*?)&amp;TARGET"|SEARCH_FILTERS,"Scope=Headers"|"IgnoreRedirections=No"|"RequestUrl=*/ClaimCenter.do*"|</stringProp><stringProp name="RegexExtractor.useHeaders">false</stringProp><stringProp name="RegexExtractor.refname">cSMAGENTNAME</stringProp><stringProp name="RegexExtractor.regex">SMAGENTNAME=(.*?)&amp;TARGET</stringProp><stringProp name="RegexExtractor.template">$1$</stringProp><stringProp name="RegexExtractor.default">null</stringProp><stringProp name="RegexExtractor.match_number">1</stringProp></RegexExtractor><hashTree/><RegexExtractor enabled="true" guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cTYPE"><stringProp name="TestPlan.comments">"ParamName=cTYPE"|"RegExp=TYPE=(.*?)&amp;REALMOID"|SEARCH_FILTERS,"Scope=Headers"|"IgnoreRedirections=No"|"RequestUrl=*/ClaimCenter.do*"|</stringProp><stringProp name="RegexExtractor.useHeaders">false</stringProp><stringProp name="RegexExtractor.refname">cTYPE</stringProp><stringProp name="RegexExtractor.regex">TYPE=(.*?)&amp;REALMOID</stringProp><stringProp name="RegexExtractor.template">$1$</stringProp><stringProp name="RegexExtractor.default">null</stringProp><stringProp name="RegexExtractor.match_number">1</stringProp></RegexExtractor><hashTree/><RegexExtractor enabled="true" guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cREALMOID"><stringProp name="TestPlan.comments">"ParamName=cREALMOID"|"RegExp=REALMOID=(.*?)&amp;GUID"|SEARCH_FILTERS,"Scope=Headers"|"IgnoreRedirections=No"|"RequestUrl=*/ClaimCenter.do*"|</stringProp><stringProp name="RegexExtractor.useHeaders">false</stringProp><stringProp name="RegexExtractor.refname">cREALMOID</stringProp><stringProp name="RegexExtractor.regex">REALMOID=(.*?)&amp;GUID</stringProp><stringProp name="RegexExtractor.template">$1$</stringProp><stringProp name="RegexExtractor.default">null</stringProp><stringProp name="RegexExtractor.match_number">1</stringProp></RegexExtractor><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_B_Login"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PMClaimCenterLogin.fcc"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="USER"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">USER</stringProp><stringProp name="Argument.value">${USERNAME}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PASSWORD"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PASSWORD</stringProp><stringProp name="Argument.value">${PASSWORD}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="target"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">target</stringProp><stringProp name="Argument.value">http://${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="smauthreason"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">smauthreason</stringProp><stringProp name="Argument.value">0</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/LMAuth/PMClaimCenterLogin.fcc?TYPE=${cTYPE}&amp;REALMOID=${cREALMOID}&amp;GUID=&amp;SMAUTHREASON=0&amp;METHOD=GET&amp;SMAGENTNAME=${cSMAGENTNAME}&amp;TARGET=-SM-http%3a%2f%2fperf--pmclaimcenter--internal%2elibertyec%2ecom%2fcc%2fClaimCenter%2edo</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="69110681">Internal Server Error</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-GOTOCLAIMSUMMARY"><stringProp name="TestPlan.comments">This section contains the GOTOCLAIMSUMMARY part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_C_Go_To_Claim_Summary"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_2"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=""><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name"/><stringProp name="Argument.value">${CLAIMNUMBER}&amp;QuickJump=&amp;Desktop%3AMenuLinks_toggle=&amp;DesktopActivities%3ADesktopActivitiesScreen%3ADesktopActivitiesLV%3ADesktopActivitiesFilter=AndFilter%2FMy%20activities%20today&amp;%3Atblinks=${cTBLINKS_001_URL2}&amp;%3Atabs=${cTABS_002_URL2}&amp;infoBar=${cINFOBAR_001_URL2}&amp;Desktop%3ADesktopMenuActions=${cDESKTOPMENUACTIONS_001_URL2}&amp;Desktop%3AMenuLinks=${cDESKTOPMENULINKS_001_URL2}&amp;csrfToken=&amp;eventSource=TabBar%3AClaimTab%3AClaimTab_FindClaim_Button_act&amp;objFocusId=TabBar%3AClaimTab%3AClaimTab_FindClaim</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="61019872">Insufficient Permission</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-FINANCIALS"><stringProp name="TestPlan.comments">This section contains the FINANCIALS part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_D_Summary_Click_Financials"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_3"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${cMENULINKS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">Claim:MenuLinks:Claim_ClaimFinancialsGroup:ClaimFinancialsGroup_ClaimFinancialsSummary_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_E_Financials_Click_Legacy"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_4"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ClaimFinancialsSummary:ClaimFinancialsSummaryScreen:FinancialsSummaryRangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ClaimFinancialsSummary:ClaimFinancialsSummaryScreen:FinancialsSummaryRangeInput</stringProp><stringProp name="Argument.value">Claimant</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ClaimFinancialsSummary:ClaimFinancialsSummaryScreen:secondfilter"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ClaimFinancialsSummary:ClaimFinancialsSummaryScreen:secondfilter</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">ClaimFinancialsSummary:ClaimFinancialsSummaryScreen:FinancialsSummaryRangeInput</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">Claim:MenuLinks:Claim_ClaimFinancialsGroup:ClaimFinancialsGroup_ClaimFinancialsLegacy_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${cMENULINKS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="76136323">There are no ACES Numbers associated with this claim.</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_F_Financials_Return_To_Summary"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_5"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${cMENULINKS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">Claim:MenuLinks:Claim_ClaimFinancialsGroup:ClaimFinancialsGroup_ClaimFinancialsSummary_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="77994609">Summary</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_G_Financials_Click_Remaining_Reserves"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_6"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ClaimFinancialsSummary:ClaimFinancialsSummaryScreen:FinancialsSummaryRangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ClaimFinancialsSummary:ClaimFinancialsSummaryScreen:FinancialsSummaryRangeInput</stringProp><stringProp name="Argument.value">Claimant</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ClaimFinancialsSummary:ClaimFinancialsSummaryScreen:secondfilter"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ClaimFinancialsSummary:ClaimFinancialsSummaryScreen:secondfilter</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">ClaimFinancialsSummary:ClaimFinancialsSummaryScreen:FinancialsSummaryPanelSet:FinancialsSummaryLV:2:RemainingReservesDetail</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">ClaimFinancialsSummary:ClaimFinancialsSummaryScreen:FinancialsSummaryPanelSet:FinancialsSummaryLV:2:RemainingReservesDetail_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${cMENULINKS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="55546831">Financials Transactions</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_H_Financials_Click_Amount"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_7"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${cMENULINKS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ClaimFinancialsTransactions:ClaimFinancialsTransactionsScreen:TransactionsLVRangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ClaimFinancialsTransactions:ClaimFinancialsTransactionsScreen:TransactionsLVRangeInput</stringProp><stringProp name="Argument.value">Custom</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">ClaimFinancialsTransactions:ClaimFinancialsTransactionsScreen:TransactionsLV:0:Amount</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">ClaimFinancialsTransactions:ClaimFinancialsTransactionsScreen:TransactionsLV:0:Amount_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="67876597">Reserve Details</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_I_Reserve_Details_Click_Edit"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_8"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${cMENULINKS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">ClaimFinancialsTransactionsDetail:ClaimFinancialsTransactionsDetailScreen:TransactionDetailToolbarButtonSet:TransactionDetailToolbarButtons_EditButton</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">ClaimFinancialsTransactionsDetail:ClaimFinancialsTransactionsDetailScreen:TransactionDetailToolbarButtonSet:TransactionDetailToolbarButtons_EditButton_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="9338787">Set Reserves</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-RESERVE"><stringProp name="TestPlan.comments">This section contains the RESERVE part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_J_Set_Reserve_Amount"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_9"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="renderViewRootOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">renderViewRootOnly</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ajaxRequestInfo"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ajaxRequestInfo</stringProp><stringProp name="Argument.value">[${\"viewRootId\":\"NewReserveSet:NewReserveSetScreen:ReservesSummaryDV:EditableReservesLV:NewAmountFooter\</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_10"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">NewReserveSet:NewReserveSetScreen:ReservesSummaryDV:EditableReservesLV:0:NewAmount</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="NewAmount"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">NewAmount</stringProp><stringProp name="Argument.value">10000.00</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="NewReserveSet:NewReserveSetScreen:ReservesSummaryDV:EditableReservesLV:0:NewAmount"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">NewReserveSet:NewReserveSetScreen:ReservesSummaryDV:EditableReservesLV:0:NewAmount</stringProp><stringProp name="Argument.value">10000.00</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${cMENULINKS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_K_Reserve_Save"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_11"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${cMENULINKS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">NewReserveSet:NewReserveSetScreen:Update</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">NewReserveSet:NewReserveSetScreen:Update_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="1903635">Financials</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_L_Reserve_Claim_Summary"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_12"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${cMENULINKS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ClaimFinancialsTransactions:ClaimFinancialsTransactionsScreen:TransactionsLVRangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ClaimFinancialsTransactions:ClaimFinancialsTransactionsScreen:TransactionsLVRangeInput</stringProp><stringProp name="Argument.value">Reserves</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">Claim:MenuLinks:Claim_ClaimSummaryGroup:ClaimSummaryGroup_ClaimSummary_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="77624413">Summary</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><BeanShellSampler enabled="true" guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="OutPut Message"><stringProp name="TestPlan.comments">"Reserve not saved as expected for Claimnumber: %s", lr_eval_string("{CLAIMNUMBER}") | </stringProp><stringProp name="BeanShellSampler.query">log.info(""+"Reserve not saved as expected for Claimnumber: ${CLAIMNUMBER}");</stringProp><stringProp name="BeanShellSampler.filename"/><stringProp name="BeanShellSampler.parameters"/><boolProp name="BeanShellSampler.resetInterpreter"/></BeanShellSampler><hashTree/><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-MANUALCHECK"><stringProp name="TestPlan.comments">This section contains the MANUALCHECK part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_M_Manual_Check_Select_Reserve"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_13"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="renderViewRootOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">renderViewRootOnly</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ajaxRequestInfo"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ajaxRequestInfo</stringProp><stringProp name="Argument.value">[${\"viewRootId\":\"Claim:ClaimMenuActions\</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_14"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${cMENULINKS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">Claim:ClaimMenuActions:ClaimMenuActions_NewTransaction:ClaimMenuActions_NewTransaction_Check</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">checksumInvalidated</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">Claim:ClaimMenuActions:ClaimMenuActions_NewTransaction:ClaimMenuActions_NewTransaction_Check_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="25968551">Reserve Line : Payments cannot be created against unverified coverage</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_N_Manual_Check_Select_Reserve_Line"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_15"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:0</stringProp><stringProp name="Argument.value">${cMANUALCREATECHECKWIZARD}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:Transaction_ReserveLine"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:Transaction_ReserveLine</stringProp><stringProp name="Argument.value">${cRESERVELINE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:Transaction_ReserveLine</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:Transaction_ReserveLine</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_O_Select_Payment_Category"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_16"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:PaymentCategoryNonPII"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:PaymentCategoryNonPII</stringProp><stringProp name="Argument.value">ACV</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:NVV_Financials_NewPaymentDetail_Transaction_Amount"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:NVV_Financials_NewPaymentDetail_Transaction_Amount</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:PaymentCategoryNonPII</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:PaymentCategoryNonPII</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:0</stringProp><stringProp name="Argument.value">${cMANUALCREATECHECKWIZARD}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_P_Manual_Check_Apply_Deductable"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_17"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:PaymentCategoryNonPII"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:PaymentCategoryNonPII</stringProp><stringProp name="Argument.value">ACV</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:NVV_Financials_NewPaymentDetail_Transaction_Amount"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:NVV_Financials_NewPaymentDetail_Transaction_Amount</stringProp><stringProp name="Argument.value">10</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:Deductions:EditableDeductibleLineItemsLV_tb:ApplyDeductibleToolbarButton</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:Deductions:EditableDeductibleLineItemsLV_tb:ApplyDeductibleToolbarButton_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:0</stringProp><stringProp name="Argument.value">${cMANUALCREATECHECKWIZARD}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_Q_Manual_Check_Change_Deductable_Amount"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_18"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="renderViewRootOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">renderViewRootOnly</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ajaxRequestInfo"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ajaxRequestInfo</stringProp><stringProp name="Argument.value">[${\"viewRootId\":\"ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:Deductions:EditableDeductibleLineItemsLV:ReflectedAmountFooter\</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_19"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:Deductions:EditableDeductibleLineItemsLV:0:ReflectedAmount"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:Deductions:EditableDeductibleLineItemsLV:0:ReflectedAmount</stringProp><stringProp name="Argument.value">-5.00</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:PaymentCategoryNonPII"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:PaymentCategoryNonPII</stringProp><stringProp name="Argument.value">ACV</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:NVV_Financials_NewPaymentDetail_Transaction_Amount"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:NVV_Financials_NewPaymentDetail_Transaction_Amount</stringProp><stringProp name="Argument.value">10.00</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ReflectedAmount"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ReflectedAmount</stringProp><stringProp name="Argument.value">-5.00</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:Deductions:EditableDeductibleLineItemsLV:0:_Checkbox"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:Deductions:EditableDeductibleLineItemsLV:0:_Checkbox</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:0</stringProp><stringProp name="Argument.value">${cMANUALCREATECHECKWIZARD}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:Deductions:EditableDeductibleLineItemsLV:0:ReflectedAmount</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_R_Manual_Check_Edit_Deductable_Reason"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_20"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:PaymentCategoryNonPII"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:PaymentCategoryNonPII</stringProp><stringProp name="Argument.value">ACV</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:NVV_Financials_NewPaymentDetail_Transaction_Amount"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:NVV_Financials_NewPaymentDetail_Transaction_Amount</stringProp><stringProp name="Argument.value">10.00</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:EditableDeductibleLineItemsInputSet:grp_InputGroup:EditDeductibleReason"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:EditableDeductibleLineItemsInputSet:grp_InputGroup:EditDeductibleReason</stringProp><stringProp name="Argument.value">DRR</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:EditableDeductibleLineItemsInputSet:grp_InputGroup:EditDeductibleReason</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:0</stringProp><stringProp name="Argument.value">${cMANUALCREATECHECKWIZARD}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:EditableDeductibleLineItemsInputSet:grp_InputGroup:EditDeductibleReason</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_S_Manual_Check_Next"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_21"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:PaymentCategoryNonPII"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:PaymentCategoryNonPII</stringProp><stringProp name="Argument.value">ACV</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:NVV_Financials_NewPaymentDetail_Transaction_Amount"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:NVV_Financials_NewPaymentDetail_Transaction_Amount</stringProp><stringProp name="Argument.value">10.00</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:EditableDeductibleLineItemsInputSet:grp_InputGroup:EditDeductibleReason"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPaymentsScreen:NewCheckPaymentPanelSet:NewPaymentDetailDV:EditableDeductibleLineItemsInputSet:grp_InputGroup:EditDeductibleReason</stringProp><stringProp name="Argument.value">DRR</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">ManualCreateCheckWizard:Next</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">ManualCreateCheckWizard:Next_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:0</stringProp><stringProp name="Argument.value">${cMANUALCREATECHECKWIZARD}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="54520596">Enter payee information</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-PAYEEDETAILS"><stringProp name="TestPlan.comments">This section contains the PAYEEDETAILS part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_T_Payee_Details_Select_Payee_Type"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_22"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:0</stringProp><stringProp name="Argument.value">${cMANUALCREATECHECKWIZARD_001_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:PayeeTypes"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:PayeeTypes</stringProp><stringProp name="Argument.value">insured</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:PayeeTypes</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:PayeeTypes</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_U_Payee_Details_Enter_Check_Number"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_23"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="renderViewRootOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">renderViewRootOnly</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ajaxRequestInfo"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ajaxRequestInfo</stringProp><stringProp name="Argument.value">[${\"viewRootId\":\"ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:Check_CheckNumber\</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_V_Payee_Details_Enter_Check_Digit"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_24"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="renderViewRootOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">renderViewRootOnly</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ajaxRequestInfo"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ajaxRequestInfo</stringProp><stringProp name="Argument.value">[${\"viewRootId\":\"ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:Check_CheckNumber\</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_W_Payee_Details_Next"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_25"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:CheckNumber"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:CheckNumber</stringProp><stringProp name="Argument.value">${CHECKNUMBER}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:Check_CheckNumber"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:Check_CheckNumber</stringProp><stringProp name="Argument.value">${CHECKNUMBER}${CHECKDIGIT}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:PayeeTypes"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:PayeeTypes</stringProp><stringProp name="Argument.value">insured</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:CheckPayToHidden"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:CheckPayToHidden</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:FirstPayeePrimaryAddress"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:FirstPayeePrimaryAddress</stringProp><stringProp name="Argument.value">${cFIRSTPAYEEPRIMARYADDRESS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:Check_IssueDate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:Check_IssueDate</stringProp><stringProp name="Argument.value">${TODAYSDATE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">ManualCreateCheckWizard:Next</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:LM_DisbursementNumber"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:LM_DisbursementNumber</stringProp><stringProp name="Argument.value">${CHECKNUMBER}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">ManualCreateCheckWizard:Next_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:0</stringProp><stringProp name="Argument.value">${cMANUALCREATECHECKWIZARD_001_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:CheckDigit"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckPayeesScreen:NewManualCheckPayeeDV:CheckDigit</stringProp><stringProp name="Argument.value">${CHECKDIGIT}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-FINISHMANUALCHECK"><stringProp name="TestPlan.comments">This section contains the FINISHMANUALCHECK part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_X_Payee_Details_Finish"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_26"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckInstructionsScreen:ManualCheckPaymentInstructionsDV:EditableCheckDisbursementDetailsInputSet:PaymentType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckInstructionsScreen:ManualCheckPaymentInstructionsDV:EditableCheckDisbursementDetailsInputSet:PaymentType</stringProp><stringProp name="Argument.value">partial</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:ManualCheckWizard_CheckInstructionsScreen:ManualCheckPaymentInstructionsDV:EditableCheckDisbursementDetailsInputSet:CheckOfficeInputSet:CheckIssuer"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:ManualCheckWizard_CheckInstructionsScreen:ManualCheckPaymentInstructionsDV:EditableCheckDisbursementDetailsInputSet:CheckOfficeInputSet:CheckIssuer</stringProp><stringProp name="Argument.value">${cCHECKISSUER}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">ManualCreateCheckWizard:Finish</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">ManualCreateCheckWizard:Finish_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ManualCreateCheckWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ManualCreateCheckWizard:0</stringProp><stringProp name="Argument.value">${cMANUALCREATECHECKWIZARD_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="51566954">exceeds the available reserves. Do you still want to continue</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_Y_Payee_Details_Return_To_Desktop"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_27"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${cMENULINKS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ClaimFinancialsChecks:ClaimFinancialsChecksScreen:exposures"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ClaimFinancialsChecks:ClaimFinancialsChecksScreen:exposures</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_001}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_002}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">TabBar:DesktopTab</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">TabBar:DesktopTab_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="65218037">Activities</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-VERIFY"><stringProp name="TestPlan.comments">This section contains the VERIFY part of Loadrunner</stringProp></GenericController><hashTree><LoopController enabled="true" guiclass="LoopControlPanel" testclass="LoopController" testname="-WHILE1"><boolProp name="LoopController.continue_forever">false</boolProp><stringProp name="LoopController.loops">1</stringProp></LoopController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_5"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"/></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">Get</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-LOGOUT"><stringProp name="TestPlan.comments">This section contains the LOGOUT part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP12_Z_Logout"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_28"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=""><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name"/><stringProp name="Argument.value">&amp;QuickJump=&amp;Desktop%3AMenuLinks_toggle=&amp;DesktopActivities%3ADesktopActivitiesScreen%3ADesktopActivitiesLV%3ADesktopActivitiesFilter=AndFilter%2FMy%20activities%20today&amp;%3Atblinks=${cTBLINKS_001_URL2}&amp;%3Atabs=${cTABS_002_URL2}&amp;Desktop%3ADesktopMenuActions=${cDESKTOPMENUACTIONS_001_URL2}&amp;Desktop%3AMenuLinks=${cDESKTOPMENULINKS_001_URL2}&amp;csrfToken=&amp;eventSource=TabBar%3ALogoutTabBarLink_act&amp;objFocusId=TabBar%3ALogoutTabBarLink</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PMClaimCenterLogout.fcc"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"/></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${URL1}/LMAuth/PMClaimCenterLogout.fcc</stringProp><stringProp name="HTTPSampler.method">Get</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree></hashTree></hashTree></hashTree><UserParameters enabled="true" guiclass="UserParametersGui" testclass="UserParameters" testname="User Defined Parameters"><boolProp name="UserParameters.per_iteration">false</boolProp><collectionProp name="UserParameters.names"/><collectionProp name="UserParameters.thread_values"><collectionProp name="8.858205895418313E7"/></collectionProp><stringProp name="TestPlan.comments"/></UserParameters><hashTree/><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Pacing"><stringProp name="ConstantTimer.delay">60000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 60s x 1000</stringProp></ConstantTimer><hashTree/><CookieManager enabled="true" guiclass="CookiePanel" testclass="CookieManager" testname="CookieManager"><collectionProp name="CookieManager.cookies"/><boolProp name="CookieManager.clearEachIteration">false</boolProp></CookieManager><hashTree/><CacheManager enabled="true" guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager"><boolProp name="clearEachIteration">false</boolProp><boolProp name="useExpires">false</boolProp></CacheManager><hashTree/><CSVDataSet enabled="true" guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config"><stringProp name="delimiter">,</stringProp><stringProp name="fileEncoding"/><stringProp name="filename">SERVER.csv</stringProp><boolProp name="quotedData">false</boolProp><boolProp name="recycle">false</boolProp><stringProp name="shareMode.all">shareMode</stringProp><boolProp name="stopThread">false</boolProp><stringProp name="variableNames"/></CSVDataSet><hashTree/><ResultCollector enabled="true" guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report"><boolProp name="ResultCollector.error_logging">false</boolProp><objProp><name>saveConfig</name><value class="SampleSaveConfiguration"><time>true</time><latency>true</latency><timestamp>true</timestamp><success>true</success><label>true</label><code>true</code><message>true</message><threadName>true</threadName><dataType>true</dataType><assertions>true</assertions><subresults>true</subresults><bytes>true</bytes><threadCounts>true</threadCounts><encoding>false</encoding><responseData>false</responseData><samplerData>false</samplerData><xml>false</xml><fieldNames>false</fieldNames><responseHeaders>false</responseHeaders><requestHeaders>false</requestHeaders><responseDataOnError>false</responseDataOnError><saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage><assertionsResultsToSave>0</assertionsResultsToSave></value></objProp><stringProp name="filename">SummReport_CNG_TP12_FINANCIALS_CHECK_CREATION_PROPERTY.csv</stringProp></ResultCollector><hashTree/></hashTree></hashTree></hashTree></jmeterTestPlan>