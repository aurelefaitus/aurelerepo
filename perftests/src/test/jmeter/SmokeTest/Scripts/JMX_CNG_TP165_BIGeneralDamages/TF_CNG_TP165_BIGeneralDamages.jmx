<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="TF_CNG_TP165_BIGeneralDamages" enabled="true"/>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="TP165 CSV Data Set Config" enabled="true">
          <stringProp name="filename">${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP165_BIGeneralDamages${PATH_SEP}TP165.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">CLAIMNUMBER,EXPOSURENUMBER</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <stringProp name="TestPlan.comments">CLAIMNUMBER,EXPOSURENUMBER</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Pacing" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${CNG_TP165_BIGeneralDamages_Pacing}</stringProp>
        </TestAction>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CNG_TP165_BIGeneralDamages" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:mes=&quot;http://www.mitchell.com/outbound/message&quot;&gt;&#xd;
&lt;soapenv:Body&gt;&#xd;
&lt;mes:data&gt;&#xd;
&lt;mes:add-injury-generals&gt;&#xd;
&lt;mes:message-id&gt;1&lt;/mes:message-id&gt;&#xd;
&lt;mes:message-timestamp&gt;1&lt;/mes:message-timestamp&gt;&#xd;
&lt;mes:loss-reference&gt;&#xd;
&lt;mes:loss-code&gt;${CLAIMNUMBER}&lt;/mes:loss-code&gt;&#xd;
&lt;/mes:loss-reference&gt;&#xd;
&lt;mes:claim-reference&gt;&#xd;
&lt;mes:claim-code&gt;${EXPOSURENUMBER}&lt;/mes:claim-code&gt;&#xd;
&lt;/mes:claim-reference&gt;&#xd;
&lt;mes:recommended-ps-inscope-low&gt;1&lt;/mes:recommended-ps-inscope-low&gt;&#xd;
&lt;mes:recommended-ps-inscope-high&gt;10&lt;/mes:recommended-ps-inscope-high&gt;&#xd;
&lt;mes:total-evaluated-ps-low&gt;10&lt;/mes:total-evaluated-ps-low&gt;&#xd;
&lt;mes:total-evaluated-ps-high&gt;100&lt;/mes:total-evaluated-ps-high&gt;&#xd;
&lt;/mes:add-injury-generals&gt;&#xd;
&lt;/mes:data&gt;&#xd;
&lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">9023</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_IMIG}:9023/BIGeneralDamages/webservices/Inbound</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">${GV_HOSTNAME_IMIG}=vxpif-pclslp02.lmig.com and port number 9023</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="XML_ResponseStatus Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">XML_ResponseStatus</stringProp>
            <stringProp name="RegexExtractor.regex">outbound/message&quot;&gt;(.*?)&lt;/updatePricingInfoResponse</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP Reponse 200 but unsucessful response,Status Description=${XML_ResponseStatus},${CLAIMNUMBER}" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1276390550">Success&lt;/updatePricingInfoResponse</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Think Time" enabled="true">
          <stringProp name="ConstantTimer.delay">${CNG_TP165_BIGeneralDamages_ThinkTime}</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
