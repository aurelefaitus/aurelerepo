<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="TF_CNG_TP93_eService_Find_Exposures" enabled="true"/>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TP93_010_eService_Find_Exposures" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Pacing" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${CNG_TP93_eService_Find_Exposures_Pacing}</stringProp>
          </TestAction>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="eService_Find_Exposures" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:cla=&quot;http://pm.lmig.com/cl/ClaimsLibrary/ClaimStatusAPI&quot;&gt;   &lt;soap:Header/&gt;   &lt;soap:Body&gt;      &lt;cla:findExposuresByExposureNumber&gt;         &lt;ExposureRequest&gt;            &lt;RequestId&gt;?&lt;/RequestId&gt;            &lt;Requestor&gt;eService&lt;/Requestor&gt;            &lt;UserID&gt;?&lt;/UserID&gt;            &lt;ClaimNumber&gt;${CLAIM_NUMBER}&lt;/ClaimNumber&gt;            &lt;!--Zero or more repetitions:--&gt;            &lt;ExposureNumber&gt;                  &lt;ExposureNumber&gt;0001&lt;/ExposureNumber&gt;            &lt;/ExposureNumber&gt;            &lt;ExposureNumber&gt;                  &lt;ExposureNumber&gt;0002&lt;/ExposureNumber&gt;            &lt;/ExposureNumber&gt;            &lt;ExposureNumber&gt;                  &lt;ExposureNumber&gt;0003&lt;/ExposureNumber&gt;            &lt;/ExposureNumber&gt;            &lt;ExposureNumber&gt;                  &lt;ExposureNumber&gt;0004&lt;/ExposureNumber&gt;            &lt;/ExposureNumber&gt;            &lt;ExposureNumber&gt;                  &lt;ExposureNumber&gt;0005&lt;/ExposureNumber&gt;            &lt;/ExposureNumber&gt;            &lt;ExposureNumber&gt;                  &lt;ExposureNumber&gt;0006&lt;/ExposureNumber&gt;            &lt;/ExposureNumber&gt;            &lt;ExposureNumber&gt;                  &lt;ExposureNumber&gt;0007&lt;/ExposureNumber&gt;            &lt;/ExposureNumber&gt;            &lt;ExposureNumber&gt;                  &lt;ExposureNumber&gt;0008&lt;/ExposureNumber&gt;            &lt;/ExposureNumber&gt;            &lt;ExposureNumber&gt;                  &lt;ExposureNumber&gt;0009&lt;/ExposureNumber&gt;            &lt;/ExposureNumber&gt;            &lt;ExposureNumber&gt;                  &lt;ExposureNumber&gt;0010&lt;/ExposureNumber&gt;            &lt;/ExposureNumber&gt;         &lt;/ExposureRequest&gt;      &lt;/cla:findExposuresByExposureNumber&gt;   &lt;/soap:Body&gt;&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_CLAIMS}/ClaimsMediationModuleWeb/sca/ClaimStatusAPIExport1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">https://${GV_HOSTNAME_CLAIMS}/ClaimsMediationModuleWeb/sca/ClaimStatusAPIExport1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/soap+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="XML_ResponseStatus" enabled="true">
              <stringProp name="TestPlan.comments">&quot;XML_ResponseStatus&quot;|&quot;LB=ResponseStatus&gt;&quot;|&quot;RB=&lt;/ResponseStatus&gt;&quot;|&quot;Search=Body&quot;|&quot;IgnoreRedirections=Yes&quot;|&quot;NotFound=Warning&quot;|</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">XML_ResponseStatus</stringProp>
              <stringProp name="RegexExtractor.regex">ResponseStatus&gt;(.*?)&lt;/ResponseStatus&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="XML_ResponseStatusDescription" enabled="true">
              <stringProp name="TestPlan.comments">&quot;XML_ResponseStatusDescription&quot;|&quot;LB=Description&gt;&quot;|&quot;RB=&lt;/Description&gt;&quot;|&quot;Search=Body&quot;|&quot;IgnoreRedirections=Yes&quot;|&quot;NotFound=Warning&quot;|</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">XML_ResponseStatusDescription</stringProp>
              <stringProp name="RegexExtractor.regex">Description&gt;(.*?)&lt;/Description&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="ResponseCode Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">lr_error_message(&quot;HTTP Reponse not 200 exiting iteration, respose =%s&quot;, lr_eval_string(&quot;{XML_ResponseStatus}&quot;));</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="SuccessResponse Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1867169789">success</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">lr_output_message(&quot;HTTP Reponse 200 but unsucessful response. Status Description = %s&quot;,lr_eval_string(&quot;{XML_ResponseStatusDescription}&quot;));</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Think Time" enabled="true">
          <stringProp name="ConstantTimer.delay">${CNG_TP93_eService_Find_Exposures_ThinkTime}</stringProp>
          <stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 60s x 1000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="CookieManager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">true</boolProp>
          <boolProp name="useExpires">false</boolProp>
        </CacheManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="TP93 CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP93_eService_Find_Exposures${PATH_SEP}TP93.csv</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode.all">shareMode</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="SERVER CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP93_eService_Find_Exposures${PATH_SEP}SERVER.csv</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode.all">shareMode</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
