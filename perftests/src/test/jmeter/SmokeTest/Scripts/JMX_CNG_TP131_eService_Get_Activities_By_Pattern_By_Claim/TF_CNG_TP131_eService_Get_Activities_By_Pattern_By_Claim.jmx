<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="TF_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim" enabled="true"/>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">true</boolProp>
          <boolProp name="useExpires">false</boolProp>
        </CacheManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SOAPAction</stringProp>
              <stringProp name="Header.value">https://${GV_HOSTNAME_ACTIVITY}/ActivityMediationModuleWeb/sca/ActivityServiceExport</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SSL_VERSION</stringProp>
              <stringProp name="Header.value">TLS</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">content-type</stringProp>
              <stringProp name="Header.value">application/soap+xml</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="TP131 - CSV Data Set Config" enabled="true">
          <stringProp name="filename">${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">CLAIMNUMBER</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <stringProp name="TestPlan.comments">CLAIMNUMBER</stringProp>
        </CSVDataSet>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime" enabled="true">
          <stringProp name="ConstantTimer.delay">${CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim_ThinkTime}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="PacingTime" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim_Pacing}</stringProp>
        </TestAction>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="RANDOMNUMBER" enabled="true">
          <stringProp name="variableName">RANDOMNUMBER</stringProp>
          <stringProp name="outputFormat">0</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="maximumValue">100</stringProp>
          <stringProp name="randomSeed"></stringProp>
          <boolProp name="perThread">true</boolProp>
        </RandomVariableConfig>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="65">A</stringProp>
            <stringProp name="3377907">next</stringProp>
            <stringProp name="66">B</stringProp>
            <stringProp name="3377907">next</stringProp>
            <stringProp name="67">C</stringProp>
            <stringProp name="3377907">next</stringProp>
            <stringProp name="68">D</stringProp>
            <stringProp name="3377907">next</stringProp>
            <stringProp name="69">E</stringProp>
            <stringProp name="3377907">next</stringProp>
            <stringProp name="70">F</stringProp>
            <stringProp name="3377907">next</stringProp>
            <stringProp name="71">G</stringProp>
            <stringProp name="3377907">next</stringProp>
            <stringProp name="72">H</stringProp>
            <stringProp name="3377907">next</stringProp>
            <stringProp name="73">I</stringProp>
            <stringProp name="3377907">next</stringProp>
            <stringProp name="74">J</stringProp>
            <stringProp name="3377907">next</stringProp>
            <stringProp name="75">K</stringProp>
            <stringProp name="3377907">next</stringProp>
            <stringProp name="76">L</stringProp>
            <stringProp name="3377907">next</stringProp>
            <stringProp name="77">M</stringProp>
            <stringProp name="3377907">next</stringProp>
            <stringProp name="78">N</stringProp>
            <stringProp name="3377907">next</stringProp>
            <stringProp name="79">O</stringProp>
            <stringProp name="3377907">next</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-278951353">
              <stringProp name="-1487703326">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,0)}</stringProp>
              <stringProp name="1428125097">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,next)}</stringProp>
              <stringProp name="-1487703326">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,0)}</stringProp>
              <stringProp name="1428125097">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,next)}</stringProp>
              <stringProp name="-1487703326">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,0)}</stringProp>
              <stringProp name="1428125097">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,next)}</stringProp>
              <stringProp name="-1487703326">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,0)}</stringProp>
              <stringProp name="1428125097">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,next)}</stringProp>
              <stringProp name="-1487703326">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,0)}</stringProp>
              <stringProp name="1428125097">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,next)}</stringProp>
              <stringProp name="-1487703326">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,0)}</stringProp>
              <stringProp name="1428125097">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,next)}</stringProp>
              <stringProp name="-1487703326">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,0)}</stringProp>
              <stringProp name="1428125097">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,next)}</stringProp>
              <stringProp name="-1487703326">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,0)}</stringProp>
              <stringProp name="1428125097">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,next)}</stringProp>
              <stringProp name="-1487703326">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,0)}</stringProp>
              <stringProp name="1428125097">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,next)}</stringProp>
              <stringProp name="-1487703326">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,0)}</stringProp>
              <stringProp name="1428125097">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,next)}</stringProp>
              <stringProp name="-1487703326">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,0)}</stringProp>
              <stringProp name="1428125097">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,next)}</stringProp>
              <stringProp name="-1487703326">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,0)}</stringProp>
              <stringProp name="1428125097">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,next)}</stringProp>
              <stringProp name="-1487703326">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,0)}</stringProp>
              <stringProp name="1428125097">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,next)}</stringProp>
              <stringProp name="-1487703326">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,0)}</stringProp>
              <stringProp name="1428125097">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,next)}</stringProp>
              <stringProp name="-1487703326">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,0)}</stringProp>
              <stringProp name="1428125097">${__CSVRead(${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP131_eService_Get_Activities_By_Pattern_By_Claim${PATH_SEP}TP131.csv,next)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If TP131_010_eService_Get_Activities_By_Pattern_By_Claim - &quot;${RANDOMNUMBER}&quot;&lt;=90" enabled="true">
          <stringProp name="IfController.condition">&quot;${RANDOMNUMBER}&quot;&lt;=90</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP131_010_eService_Get_Activities_By_Pattern_By_Claim" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:iac=&quot;http://pm.lmig.com/cl/ActivityMediationLibrary/iActivityServices&quot;&gt;&#xd;
			   &lt;soap:Header/&gt;&#xd;
			   &lt;soap:Body&gt;&#xd;
			      &lt;iac:getActivitiesByPatternByClaim&gt;&#xd;
			         &lt;GetActivitiesByPatternByClaimRequest&gt;&#xd;
			          &lt;RequestId&gt;?&lt;/RequestId&gt;&#xd;
			          &lt;Requestor&gt;eService&lt;/Requestor&gt;&#xd;
			          &lt;UserID&gt;?&lt;/UserID&gt;&#xd;
			          &lt;ClaimNumbers&gt;${A}&lt;/ClaimNumbers&gt;&#xd;
			          &lt;ClaimNumbers&gt;${B}&lt;/ClaimNumbers&gt;&#xd;
			        &lt;Patterns&gt;639&lt;/Patterns&gt;&#xd;
			  &lt;/GetActivitiesByPatternByClaimRequest&gt;&#xd;
		&lt;/iac:getActivitiesByPatternByClaim&gt;&#xd;
	&lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_ACTIVITY}/ActivityMediationModuleWeb/sca/ActivityServiceExport</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP131_010_eService_Get_Activities_By_Pattern_By_Claim failed - HTTP 200 not received" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="XML_ErrorMessage" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">XML_ErrorMessage</stringProp>
              <stringProp name="RegexExtractor.regex">Description&gt;(.*?)&lt;/Description&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP131_010_eService_Get_Activities_By_Pattern_By_Claim failed - Error Desc - ${XML_ErrorMessage}" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="208995750">&lt;Status&gt;success&lt;/Status&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If TP131_010_eService_Get_Activities_By_Pattern_By_Claim - &quot;${RANDOMNUMBER}&quot;&lt;=90" enabled="true">
          <stringProp name="IfController.condition">&quot;${RANDOMNUMBER}&quot;&gt;90</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP131_010_eService_Get_Activities_By_Pattern_By_Claim" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:iac=&quot;http://pm.lmig.com/cl/ActivityMediationLibrary/iActivityServices&quot;&gt;&#xd;
			   &lt;soap:Header/&gt;&#xd;
			   &lt;soap:Body&gt;&#xd;
			      &lt;iac:getActivitiesByPatternByClaim&gt;&#xd;
			         &lt;GetActivitiesByPatternByClaimRequest&gt;&#xd;
			          &lt;RequestId&gt;?&lt;/RequestId&gt;&#xd;
			          &lt;Requestor&gt;eService&lt;/Requestor&gt;&#xd;
			          &lt;UserID&gt;?&lt;/UserID&gt;&#xd;
			          &lt;ClaimNumbers&gt;${A}&lt;/ClaimNumbers&gt;&#xd;
			          &lt;ClaimNumbers&gt;${B}&lt;/ClaimNumbers&gt;&#xd;
   			          &lt;ClaimNumbers&gt;${C}&lt;/ClaimNumbers&gt;&#xd;
   			     	&lt;ClaimNumbers&gt;${D}&lt;/ClaimNumbers&gt;&#xd;
   			     	&lt;ClaimNumbers&gt;${E}&lt;/ClaimNumbers&gt;&#xd;
   			     	&lt;ClaimNumbers&gt;${F}&lt;/ClaimNumbers&gt;&#xd;
   			     	&lt;ClaimNumbers&gt;${G}&lt;/ClaimNumbers&gt;&#xd;
   			     	&lt;ClaimNumbers&gt;${H}&lt;/ClaimNumbers&gt;&#xd;
   			     	&lt;ClaimNumbers&gt;${I}&lt;/ClaimNumbers&gt;&#xd;
   			     	&lt;ClaimNumbers&gt;${J}&lt;/ClaimNumbers&gt;&#xd;
   			     	&lt;ClaimNumbers&gt;${K}&lt;/ClaimNumbers&gt;&#xd;
   			     	&lt;ClaimNumbers&gt;${L}&lt;/ClaimNumbers&gt;&#xd;
   			     	&lt;ClaimNumbers&gt;${M}&lt;/ClaimNumbers&gt;&#xd;
   			     	&lt;ClaimNumbers&gt;${N}&lt;/ClaimNumbers&gt;&#xd;
   			     	&lt;ClaimNumbers&gt;${O}&lt;/ClaimNumbers&gt;&#xd;
			        &lt;Patterns&gt;639&lt;/Patterns&gt;&#xd;
			  &lt;/GetActivitiesByPatternByClaimRequest&gt;&#xd;
		&lt;/iac:getActivitiesByPatternByClaim&gt;&#xd;
	&lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_ACTIVITY}/ActivityMediationModuleWeb/sca/ActivityServiceExport</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP131_010_eService_Get_Activities_By_Pattern_By_Claim failed - HTTP 200 not received" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="XML_ErrorMessage" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">XML_ErrorMessage</stringProp>
              <stringProp name="RegexExtractor.regex">Description&gt;(.*?)&lt;/Description&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP131_010_eService_Get_Activities_By_Pattern_By_Claim failed - Error Code - Error Desc - ${XML_ErrorMessage}" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="208995750">&lt;Status&gt;success&lt;/Status&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
