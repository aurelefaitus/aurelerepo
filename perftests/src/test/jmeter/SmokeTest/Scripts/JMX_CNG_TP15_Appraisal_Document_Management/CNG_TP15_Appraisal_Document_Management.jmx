<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="TF_CNG_TP15_Appraisal_Document_Management" enabled="true"/>
      <hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime" enabled="true">
          <stringProp name="ConstantTimer.delay">${CNG_TP15_Appraisal_Document_Management_ThinkTime}</stringProp>
          <stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 60s x 1000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="CookieManager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">true</boolProp>
          <boolProp name="useExpires">false</boolProp>
        </CacheManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="nNumbers CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP15_Appraisal_Document_Management${PATH_SEP}nNumbers.csv</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode.all">shareMode</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">USERNAME,PASSWORD</stringProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <stringProp name="TestPlan.comments">USERNAME,PASSWORD</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="SERVER CSV Data Set Config" enabled="false">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP15_Appraisal_Document_Management${PATH_SEP}SERVER.csv</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode.all">shareMode</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">SERVER</stringProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <stringProp name="TestPlan.comments">SERVER</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP15_A_Launch_Browser" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_NAVIGATOR}/cc/ClaimCenter.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-683626894">Please log in using your Enterprise ID and password</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cSMAGENTNAME" enabled="true">
              <stringProp name="TestPlan.comments">&quot;ParamName=cSMAGENTNAME&quot;|&quot;RegExp=SMAGENTNAME=(.*?)&amp;TARGET&quot;|SEARCH_FILTERS,&quot;Scope=Headers&quot;|&quot;IgnoreRedirections=No&quot;|&quot;RequestUrl=*/ClaimCenter.do*&quot;|</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">cSMAGENTNAME</stringProp>
              <stringProp name="RegexExtractor.regex">SMAGENTNAME=(.*?)&amp;amp;TARGET</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cTYPE" enabled="true">
              <stringProp name="TestPlan.comments">&quot;ParamName=cTYPE&quot;|&quot;RegExp=TYPE=(.*?)&amp;REALMOID&quot;|SEARCH_FILTERS,&quot;Scope=Headers&quot;|&quot;IgnoreRedirections=No&quot;|&quot;RequestUrl=*/ClaimCenter.do*&quot;|</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">cTYPE</stringProp>
              <stringProp name="RegexExtractor.regex">TYPE=(.*?)&amp;amp;REALMOID</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cREALMOID" enabled="true">
              <stringProp name="TestPlan.comments">&quot;ParamName=cREALMOID&quot;|&quot;RegExp=REALMOID=(.*?)&amp;GUID&quot;|SEARCH_FILTERS,&quot;Scope=Headers&quot;|&quot;IgnoreRedirections=No&quot;|&quot;RequestUrl=*/ClaimCenter.do*&quot;|</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">cREALMOID</stringProp>
              <stringProp name="RegexExtractor.regex">REALMOID=(.*?)&amp;amp;GUID</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP15_B_Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PMClaimCenterLogin.fcc" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="USER" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">USER</stringProp>
                  <stringProp name="Argument.value">${USERNAME}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="PASSWORD" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">PASSWORD</stringProp>
                  <stringProp name="Argument.value">${PASSWORD}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="target" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">target</stringProp>
                  <stringProp name="Argument.value">http://${GV_HOSTNAME_NAVIGATOR}/cc/ClaimCenter.do</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="smauthreason" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">smauthreason</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_NAVIGATOR}/LMAuth/PMClaimCenterLogin.fcc?TYPE=${cTYPE}&amp;REALMOID=${cREALMOID}&amp;GUID=&amp;SMAUTHREASON=0&amp;METHOD=GET&amp;SMAGENTNAME=${cSMAGENTNAME}&amp;TARGET=-SM-http%3a%2f%2fperf--pmclaimcenter--internal%2elibertyec%2ecom%2fcc%2fClaimCenter%2edo</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="CNG_TP15_B_Login - Unsuccessful nNumber: ${USERNAME}" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-252897267">Activities</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cTBLINKS_001 Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">cTBLINKS_001</stringProp>
              <stringProp name="RegexExtractor.regex">nuitem&quot;,&quot;shortcut&quot;:&quot;Z&quot;}],&quot;defaultType&quot;:&quot;gmenuitem&quot;},&quot;noaction&quot;:1,&quot;xtype&quot;:&quot;gbutton&quot;,&quot;iconCls&quot;:&quot;g-preferences-icon&quot;}],&quot;checksum&quot;:&quot;(.*?)&quot;},</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cTABS_002 Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">cTABS_002</stringProp>
              <stringProp name="RegexExtractor.regex">\{&quot;id&quot;:&quot;TabBar:VacationTab&quot;,&quot;text&quot;:&quot;Vacation&quot;,&quot;menu&quot;:\{&quot;defaultType&quot;:&quot;gmenuitem&quot;},&quot;xtype&quot;:&quot;gbutton&quot;,&quot;disabled&quot;:true}],&quot;checksum&quot;:&quot;(.*?)&quot;}},\{</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cINFOBAR_002 Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">cINFOBAR_002</stringProp>
              <stringProp name="RegexExtractor.regex">ktopActivitiesScreen:0&quot;,&quot;text&quot;:&quot;Activities&quot;,&quot;cls&quot;:&quot;x-panel-header-text&quot;,&quot;xtype&quot;:&quot;box&quot;}]}]},&quot;infoBar&quot;:\{&quot;hidden&quot;:true,&quot;checksum&quot;:&quot;(.*?)&quot;},</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cDESKTOPMENUACTIONS_001 Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">cDESKTOPMENUACTIONS_001</stringProp>
              <stringProp name="RegexExtractor.regex">Report&quot;,&quot;eventId&quot;:&quot;Desktop:MenuLinks:Desktop_MarketingReport&quot;}],&quot;xtype&quot;:&quot;accordionpanel&quot;,&quot;checksum&quot;:&quot;(.*?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cDESKTOPMENULINKS_001 Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">cDESKTOPMENULINKS_001</stringProp>
              <stringProp name="RegexExtractor.regex">Report&quot;,&quot;eventId&quot;:&quot;Desktop:MenuLinks:Desktop_MarketingReport&quot;}],&quot;xtype&quot;:&quot;accordionpanel&quot;,&quot;checksum&quot;:&quot;(.*?)&quot;,&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor CNG_TP15_B_Login" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">aa29db4a-3c42-4a10-9b0e-689135a8626e</stringProp>
              <stringProp name="script">vars.put(&quot;cTBLINKS_001_URL2&quot;,java.net.URLEncoder.encode(vars.get(&quot;cTBLINKS_001&quot;), &quot;UTF-8&quot;));
vars.put(&quot;cTABS_002_URL2&quot;,java.net.URLEncoder.encode(vars.get(&quot;cTABS_002&quot;), &quot;UTF-8&quot;));
vars.put(&quot;cINFOBAR_002_URL2&quot;,java.net.URLEncoder.encode(vars.get(&quot;cINFOBAR_002&quot;), &quot;UTF-8&quot;));
vars.put(&quot;cDESKTOPMENUACTIONS_001_URL2&quot;,java.net.URLEncoder.encode(vars.get(&quot;cDESKTOPMENUACTIONS_001&quot;), &quot;UTF-8&quot;));
vars.put(&quot;cDESKTOPMENULINKS_001_URL2&quot;,java.net.URLEncoder.encode(vars.get(&quot;cDESKTOPMENULINKS_001&quot;), &quot;UTF-8&quot;));
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop ForEver" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${CNG_TP15_Appraisal_Document_Management_Pacing}</stringProp>
          </TestAction>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="TP15 CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP15_Appraisal_Document_Management${PATH_SEP}TP15.csv</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode.all">shareMode</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">CLAIMNUMBER</stringProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <stringProp name="TestPlan.comments">CLAIMNUMBER</stringProp>
          </CSVDataSet>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP15_C_Search_Claims_Search_Claim_Number" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_2" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">TabBar%3AClaimTab%3AClaimTab_FindClaim=${CLAIMNUMBER}&amp;QuickJump=&amp;Desktop%3AMenuLinks_toggle=&amp;DesktopActivities%3ADesktopActivitiesScreen%3ADesktopActivitiesLV%3ADesktopActivitiesFilter=AndFilter%2FMy%20activities%20today&amp;%3Atblinks=${cTBLINKS_001_URL2}&amp;%3Atabs=${cTABS_002_URL2}&amp;infoBar=${cINFOBAR_002_URL2}&amp;Desktop%3ADesktopMenuActions=${cDESKTOPMENUACTIONS_001_URL2}&amp;Desktop%3AMenuLinks=${cDESKTOPMENULINKS_001_URL2}&amp;csrfToken=&amp;eventSource=TabBar%3AClaimTab%3AClaimTab_FindClaim_Button_act&amp;objFocusId=TabBar%3AClaimTab%3AClaimTab_FindClaim</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_NAVIGATOR}/cc/ClaimCenter.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="CNG_TP15_C_Search_Claims_Search_Claim_Number - No claims found: ${CLAIMNUMBER}" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-738603761">${CLAIMNUMBER}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cMENULINKS_001 Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">cMENULINKS_001</stringProp>
                <stringProp name="RegexExtractor.regex">],&quot;xtype&quot;:&quot;accordionpanel&quot;,&quot;checksum&quot;:&quot;(.*?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">null</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cCLAIMMENUACTIONS_001 Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">cCLAIMMENUACTIONS_001</stringProp>
                <stringProp name="RegexExtractor.regex">actions&quot;,&quot;menu&quot;:\{&quot;numEntriesPerColumn&quot;:3,&quot;flattened&quot;:true,&quot;defaultType&quot;:&quot;gmenuitem&quot;},&quot;xtype&quot;:&quot;gbutton&quot;,&quot;noaction&quot;:1,&quot;checksum&quot;:&quot;(.*?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">null</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cTABS_001 Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">cTABS_001</stringProp>
                <stringProp name="RegexExtractor.regex">\{&quot;id&quot;:&quot;TabBar:VacationTab&quot;,&quot;text&quot;:&quot;Vacation&quot;,&quot;menu&quot;:\{&quot;defaultType&quot;:&quot;gmenuitem&quot;},&quot;xtype&quot;:&quot;gbutton&quot;,&quot;disabled&quot;:true}],&quot;checksum&quot;:&quot;(.*?)&quot;}},\{</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">null</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cINFOBAR_001 Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">cINFOBAR_001</stringProp>
                <stringProp name="RegexExtractor.regex">\\/span&gt;&quot;,&quot;cls&quot;:&quot;infobar_elem&quot;,&quot;noaction&quot;:1,&quot;disabled&quot;:true}],&quot;checksum&quot;:&quot;(.*?)&quot;},</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">null</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ClaimNumber Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ClaimNumber</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;text&quot;:&quot;Claim ((.*?))&quot;,&quot;cls&quot;:&quot;x-btn-def</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">null</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responsecode Extractor" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">code</stringProp>
                <stringProp name="RegexExtractor.refname">responsecode</stringProp>
                <stringProp name="RegexExtractor.regex">(\d+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">0</stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">//log.info(&quot;the value is : &quot;+vars.get(&quot;doLogin&quot;));

/*log.info(&quot;The value of cMENULINKS_001&quot;+vars.get(&quot;cMENULINKS_001&quot;));
log.info(&quot;The value of cCLAIMMENUACTIONS_001&quot;+vars.get(&quot;cCLAIMMENUACTIONS_001&quot;));
log.info(&quot;The value of cTABS_001&quot;+vars.get(&quot;cTABS_001&quot;));
log.info(&quot;The value of cINFOBAR_001&quot;+vars.get(&quot;cINFOBAR_001&quot;));
log.info(&quot;The value of cTBLINKS_001&quot;+vars.get(&quot;cTBLINKS_001&quot;));*/
//String encoded = java.net.URLEncoder.encode(vars.get(&quot;cTBLINKS_001&quot;), &quot;UTF-8&quot;);

//log.info(&quot;The value of cTBLINKS_001&quot;+vars.get(&quot;cTBLINKS_001_URL2&quot;));

int rescode=Integer.parseInt(vars.get(&quot;responsecode&quot;));
String stats= vars.get(&quot;ClaimNumber&quot;);
//String stats1= vars.get(&quot;Qualification_Message&quot;);
if (rescode &gt;= 200 &amp;&amp; rescode &lt; 399)
{	//error if no results found
	if (stats.equals(&quot;null&quot;))
	{	
		//  search did not return any results
		log.error(&quot;Transaction Name :CNG_TP15_C_Search_Claims_Search_Claim_Number##&quot;+&quot;Request XML:&quot;+prev.getSamplerData()+&quot;##&quot;+&quot;HTTP Response Code:&quot;+vars.get(&quot;responsecode&quot;)+&quot;##&quot;+&quot;Response From Server : &quot;+prev.getResponseDataAsString());
		prev.setSuccessful(false);
		//ctx.setRestartNextLoop(true);
		vars.put(&quot;doLogin&quot;,&quot;2&quot;);
	}
	else 
	{
		// search successfull
		prev.setSuccessful(true);
	}
}
else
{
// Unexpected result  from server
	log.error(&quot;Transaction Name :CNG_TP15_C_Search_Claims_Search_Claim_Number##&quot;+&quot;Request XML:&quot;+prev.getSamplerData()+&quot;##&quot;+&quot;HTTP Response Code:&quot;+vars.get(&quot;responsecode&quot;)+&quot;##&quot;+&quot;Response From Server : &quot;+prev.getResponseDataAsString());
	prev.setSuccessful(false);
	//ctx.setRestartNextLoop(true);
	vars.put(&quot;doLogin&quot;,&quot;2&quot;);
}
//log.info(&quot;the value is : &quot;+vars.get(&quot;doLogin&quot;));
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor CNG_TP15_C_Search_Claims_Search_Claim_Number" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">aa29db4a-3c42-4a10-9b0e-689135a8626e</stringProp>
                <stringProp name="script">vars.put(&quot;cCLAIMMENUACTIONS_001_URL2&quot;,java.net.URLEncoder.encode(vars.get(&quot;cCLAIMMENUACTIONS_001&quot;), &quot;UTF-8&quot;));
vars.put(&quot;cTABS_001_URL2&quot;,java.net.URLEncoder.encode(vars.get(&quot;cTABS_001&quot;), &quot;UTF-8&quot;));
vars.put(&quot;cINFOBAR_001_URL2&quot;,java.net.URLEncoder.encode(vars.get(&quot;cINFOBAR_001&quot;), &quot;UTF-8&quot;));</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP15_D_Search_View_Documents" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_3" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="TabBar:ClaimTab:ClaimTab_FindClaim" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="QuickJump" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">QuickJump</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Claim:MenuLinks_toggle" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name=":tblinks" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">:tblinks</stringProp>
                    <stringProp name="Argument.value">${cTBLINKS_001}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name=":tabs" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">:tabs</stringProp>
                    <stringProp name="Argument.value">${cTABS_001}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="infoBar" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">infoBar</stringProp>
                    <stringProp name="Argument.value">${cINFOBAR_001}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Claim:ClaimMenuActions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp>
                    <stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Claim:MenuLinks" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Claim:MenuLinks</stringProp>
                    <stringProp name="Argument.value">${cMENULINKS_001}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="csrfToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">csrfToken</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="eventSource" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">eventSource</stringProp>
                    <stringProp name="Argument.value">Claim:MenuLinks:Claim_LM_ClaimDocumentsGroup:LM_ClaimDocumentsGroup_ClaimDocuments_act</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_NAVIGATOR}/cc/ClaimCenter.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cEXPOSUREID Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">cEXPOSUREID</stringProp>
                <stringProp name="RegexExtractor.regex">],\[&quot;(.*?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">null</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-RelatedTo" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">RelatedTo</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;&quot;,&quot;fieldLabel&quot;:&quot;(.*?) To&quot;},\{&quot;id&quot;:&quot;ClaimD</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">nill</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Unsuccessful nNumber ${USERNAME}, View Documents,${CLAIMNUMBER}" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1801722364">ClaimDocuments</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ResponseOk Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ResponseOk</stringProp>
                <stringProp name="RegexExtractor.regex">ClaimDocuments(.*?)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">null</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">
int rescode=Integer.parseInt(vars.get(&quot;responsecode&quot;));
String stats= vars.get(&quot;RelatedTo&quot;);
vars.put(&quot;cEXPOSUREID_URL2&quot;,java.net.URLEncoder.encode(vars.get(&quot;cEXPOSUREID&quot;), &quot;UTF-8&quot;));
//String stats1= vars.get(&quot;Qualification_Message&quot;);
if (rescode &gt;= 200 &amp;&amp; rescode &lt; 399)
{	//error if no results found
	if (stats.equals(&quot;null&quot;))
	{	
		//  search did not return any results
		log.error(&quot;Transaction Name :CNG_TP15_D_Search_View_Documents##&quot;+&quot;Request XML:&quot;+prev.getSamplerData()+&quot;##&quot;+&quot;HTTP Response Code:&quot;+vars.get(&quot;responsecode&quot;)+&quot;##&quot;+&quot;Response From Server : &quot;+prev.getResponseDataAsString());
		prev.setSuccessful(false);
		//ctx.setRestartNextLoop(true);
		vars.put(&quot;doLogin&quot;,&quot;2&quot;);
	}
	else 
	{
		// search successfull
		prev.setSuccessful(true);
	}
}
else
{
// Unexpected result  from server
	log.error(&quot;Transaction Name :CNG_TP15_D_Search_View_Documents##&quot;+&quot;Request XML:&quot;+prev.getSamplerData()+&quot;##&quot;+&quot;HTTP Response Code:&quot;+vars.get(&quot;responsecode&quot;)+&quot;##&quot;+&quot;Response From Server : &quot;+prev.getResponseDataAsString());
	prev.setSuccessful(false);
	//ctx.setRestartNextLoop(true);
	vars.put(&quot;doLogin&quot;,&quot;2&quot;);
}
//log.info(&quot;the value is : &quot;+vars.get(&quot;doLogin&quot;));
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="OutPut Message" enabled="false">
              <stringProp name="TestPlan.comments">&quot;Claims display as expected: %s&quot;, (lr_eval_string(&quot;{CLAIMNUMBER}&quot;)) | </stringProp>
              <stringProp name="BeanShellSampler.query">log.info(&quot;&quot;+&quot;Claims display as expected: ${CLAIMNUMBER}&quot;);
log.info(&quot;The correctaion cEXPOSUREID  &quot;+ vars.get(&quot;cEXPOSUREID&quot;));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Validate Response" enabled="true">
            <stringProp name="IfController.condition">&quot;${ResponseOk}&quot; == &quot;null&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP15_ZI_Logout" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_26" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">TabBar%3AClaimTab%3AClaimTab_FindClaim=&amp;QuickJump=&amp;Desktop%3AMenuLinks_toggle=&amp;DesktopActivities%3ADesktopActivitiesScreen%3ADesktopActivitiesLV%3ADesktopActivitiesFilter=AndFilter%2FMy%20activities%20today&amp;%3Atblinks=${cTBLINKS_001_URL2}&amp;%3Atabs=${cTABS_002_URL2}&amp;Desktop%3ADesktopMenuActions=${cDESKTOPMENUACTIONS_001_URL2}&amp;Desktop%3AMenuLinks=${cDESKTOPMENULINKS_001_URL2}&amp;csrfToken=&amp;eventSource=TabBar%3ALogoutTabBarLink_act&amp;objFocusId=TabBar%3ALogoutTabBarLink</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_NAVIGATOR}/cc/ClaimCenter.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
                <boolProp name="HTTPSampler.image_parser">true</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PMClaimCenterLogout.fcc" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_NAVIGATOR}/LMAuth/PMClaimCenterLogout.fcc</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
                <boolProp name="HTTPSampler.image_parser">true</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-Logout" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">Logout</stringProp>
                  <stringProp name="RegexExtractor.regex">ck&quot; HREF=&quot;/cc/claimcenter.do&quot; &gt;Log (.*?) In&lt;/A&gt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">null</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script"></stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-responsecode" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">code</stringProp>
                  <stringProp name="RegexExtractor.refname">responsecode</stringProp>
                  <stringProp name="RegexExtractor.regex">(\d+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">0</stringProp>
                  <stringProp name="RegexExtractor.match_number"></stringProp>
                </RegexExtractor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">log.info(&quot;The doLogin Value before Logout &quot;+vars.get(&quot;doLogin&quot;));
int rescode=Integer.parseInt(vars.get(&quot;responsecode&quot;));
String stats= vars.get(&quot;Logout&quot;);
//String stats1= vars.get(&quot;Qualification_Message&quot;);
vars.put(&quot;doLogin&quot;,&quot;0&quot;);
if (rescode &gt;= 200 &amp;&amp; rescode &lt; 399)
{	//error if no results found
	if (stats.equals(&quot;null&quot;))
	{	
		//  search did not return any results
		log.error(&quot;Transaction Name :CNG_TP15_ZI_Logout##&quot;+&quot;Request XML:&quot;+prev.getSamplerData()+&quot;##&quot;+&quot;HTTP Response Code:&quot;+vars.get(&quot;responsecode&quot;)+&quot;##&quot;+&quot;Response From Server : &quot;+prev.getResponseDataAsString());
		prev.setSuccessful(false);
		ctx.setRestartNextLoop(true);
		//vars.put(&quot;doLogin&quot;,&quot;1&quot;);
		
	}
	else 
	{
		// search successfull
		prev.setSuccessful(true);
	}
}
else
{
// Unexpected result  from server
	log.error(&quot;Transaction Name :CNG_TP15_ZI_Logout##&quot;+&quot;Request XML:&quot;+prev.getSamplerData()+&quot;##&quot;+&quot;HTTP Response Code:&quot;+vars.get(&quot;responsecode&quot;)+&quot;##&quot;+&quot;Response From Server : &quot;+prev.getResponseDataAsString());
	prev.setSuccessful(false);
	ctx.setRestartNextLoop(true);
}
//log.info(&quot;the value is : &quot;+vars.get(&quot;doLogin&quot;));
</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 0" enabled="true">
                <stringProp name="TestPlan.comments">This transaction will wait for 0 seconds</stringProp>
              </GenericController>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime" enabled="true">
                  <stringProp name="ConstantTimer.delay">0</stringProp>
                  <stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 0s x 1000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
              <intProp name="ActionProcessor.action">3</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration"></stringProp>
            </TestAction>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP15_E_Get_Documents" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateDocument" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_MICROSERVICE}/GetDocData/getDocumentsByClaimNumber/${CLAIMNUMBER}?requestingApplication=ClaimsNavigator</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name"></stringProp>
                    <stringProp name="Header.value">https://${GV_HOSTNAME_MICROSERVICE}/DocumentListUI/</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="90495130">objectID</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP15_E_Document_Click_Upload" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_4" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="TabBar:ClaimTab:ClaimTab_FindClaim" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="QuickJump" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">QuickJump</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Claim:MenuLinks_toggle" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name=":tblinks" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">:tblinks</stringProp>
                    <stringProp name="Argument.value">${{cTBLINKS_001}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name=":tabs" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">:tabs</stringProp>
                    <stringProp name="Argument.value">${cTABS_001}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="infoBar" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">infoBar</stringProp>
                    <stringProp name="Argument.value">${cINFOBAR_001}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Claim:ClaimMenuActions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp>
                    <stringProp name="Argument.value">${cCLAIMMENUACTIONS_001}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Claim:MenuLinks" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Claim:MenuLinks</stringProp>
                    <stringProp name="Argument.value">${cMENULINKS_001}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="csrfToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">csrfToken</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="eventSource" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">eventSource</stringProp>
                    <stringProp name="Argument.value">Claim:MenuLinks:Claim_LM_ClaimDocumentsGroup:LM_ClaimDocumentsGroup_ClaimDocumentsAttach_act</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_NAVIGATOR}/cc/ClaimCenter.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://perf-pmclaimcenter-internal.libertyec.com/cc/ClaimCenter.do</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">No-Cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3; Tablet PC 2.0)</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="CNG_TP15_E_Document_Click_Upload - Unsuccessful nNumber: ${USERNAME} and Claimnumber: ${CLAIMNUMBER}" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1414760289">ClaimDocumentsAttach</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ResponseOk Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ResponseOk</stringProp>
                <stringProp name="RegexExtractor.regex">ClaimDocumentsAttach(.*?)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">null</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Validate Response" enabled="true">
            <stringProp name="IfController.condition">&quot;${ResponseOk}&quot; == &quot;null&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP15_ZI_Logout" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_26" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">TabBar%3AClaimTab%3AClaimTab_FindClaim=&amp;QuickJump=&amp;Desktop%3AMenuLinks_toggle=&amp;DesktopActivities%3ADesktopActivitiesScreen%3ADesktopActivitiesLV%3ADesktopActivitiesFilter=AndFilter%2FMy%20activities%20today&amp;%3Atblinks=${cTBLINKS_001_URL2}&amp;%3Atabs=${cTABS_002_URL2}&amp;Desktop%3ADesktopMenuActions=${cDESKTOPMENUACTIONS_001_URL2}&amp;Desktop%3AMenuLinks=${cDESKTOPMENULINKS_001_URL2}&amp;csrfToken=&amp;eventSource=TabBar%3ALogoutTabBarLink_act&amp;objFocusId=TabBar%3ALogoutTabBarLink</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_NAVIGATOR}/cc/ClaimCenter.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
                <boolProp name="HTTPSampler.image_parser">true</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PMClaimCenterLogout.fcc" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_NAVIGATOR}/LMAuth/PMClaimCenterLogout.fcc</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
                <boolProp name="HTTPSampler.image_parser">true</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-Logout" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">Logout</stringProp>
                  <stringProp name="RegexExtractor.regex">ck&quot; HREF=&quot;/cc/claimcenter.do&quot; &gt;Log (.*?) In&lt;/A&gt;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">null</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script"></stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-responsecode" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">code</stringProp>
                  <stringProp name="RegexExtractor.refname">responsecode</stringProp>
                  <stringProp name="RegexExtractor.regex">(\d+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">0</stringProp>
                  <stringProp name="RegexExtractor.match_number"></stringProp>
                </RegexExtractor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">log.info(&quot;The doLogin Value before Logout &quot;+vars.get(&quot;doLogin&quot;));
int rescode=Integer.parseInt(vars.get(&quot;responsecode&quot;));
String stats= vars.get(&quot;Logout&quot;);
//String stats1= vars.get(&quot;Qualification_Message&quot;);
vars.put(&quot;doLogin&quot;,&quot;0&quot;);
if (rescode &gt;= 200 &amp;&amp; rescode &lt; 399)
{	//error if no results found
	if (stats.equals(&quot;null&quot;))
	{	
		//  search did not return any results
		log.error(&quot;Transaction Name :CNG_TP15_ZI_Logout##&quot;+&quot;Request XML:&quot;+prev.getSamplerData()+&quot;##&quot;+&quot;HTTP Response Code:&quot;+vars.get(&quot;responsecode&quot;)+&quot;##&quot;+&quot;Response From Server : &quot;+prev.getResponseDataAsString());
		prev.setSuccessful(false);
		ctx.setRestartNextLoop(true);
		//vars.put(&quot;doLogin&quot;,&quot;1&quot;);
		
	}
	else 
	{
		// search successfull
		prev.setSuccessful(true);
	}
}
else
{
// Unexpected result  from server
	log.error(&quot;Transaction Name :CNG_TP15_ZI_Logout##&quot;+&quot;Request XML:&quot;+prev.getSamplerData()+&quot;##&quot;+&quot;HTTP Response Code:&quot;+vars.get(&quot;responsecode&quot;)+&quot;##&quot;+&quot;Response From Server : &quot;+prev.getResponseDataAsString());
	prev.setSuccessful(false);
	ctx.setRestartNextLoop(true);
}
//log.info(&quot;the value is : &quot;+vars.get(&quot;doLogin&quot;));
</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 0" enabled="true">
                <stringProp name="TestPlan.comments">This transaction will wait for 0 seconds</stringProp>
              </GenericController>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime" enabled="true">
                  <stringProp name="ConstantTimer.delay">0</stringProp>
                  <stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 0s x 1000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
              <intProp name="ActionProcessor.action">3</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration"></stringProp>
            </TestAction>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP15_F_Upload_One_Documen" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;documentStream&quot;:&quot;&quot;,&quot;claimNumber&quot;:&quot;${CLAIMNUMBER}&quot;,&quot;exposureNumber&quot;:&quot;01&quot;,&quot;typeDescription&quot;:&quot;Claim Summary Report&quot;,&quot;documentDescription&quot;:&quot;TP15&quot;,&quot;uploadedFileName&quot;:&quot;football.jpg&quot;,&quot;name&quot;:&quot;football.jpg&quot;,&quot;uploadedBy&quot;:&quot;${NAME}&quot;,&quot;lm_NotificationRequiredInd&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_MICROSERVICE}/DocUpload/uploadDocument</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://perf-microserviceapps.libertyec.com/DocumentUploadUI/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">No-Cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3; Tablet PC 2.0)</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP15_G_Upload_Five_Documents" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;documentStream&quot;:&quot;&quot;,&quot;claimNumber&quot;:&quot;${CLAIMNUMBER}&quot;,&quot;exposureNumber&quot;:&quot;01&quot;,&quot;typeDescription&quot;:&quot;Claim Summary Report&quot;,&quot;documentDescription&quot;:&quot;TP15&quot;,&quot;uploadedFileName&quot;:&quot;football.jpg&quot;,&quot;name&quot;:&quot;football.jpg&quot;,&quot;uploadedBy&quot;:&quot;${NAME}&quot;,&quot;lm_NotificationRequiredInd&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_MICROSERVICE}/DocUpload/uploadDocument</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://perf-microserviceapps.libertyec.com/DocumentUploadUI/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">No-Cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3; Tablet PC 2.0)</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;documentStream&quot;:&quot;&quot;,&quot;claimNumber&quot;:&quot;${CLAIMNUMBER}&quot;,&quot;exposureNumber&quot;:&quot;01&quot;,&quot;typeDescription&quot;:&quot;Claim Summary Report&quot;,&quot;documentDescription&quot;:&quot;TP15&quot;,&quot;uploadedFileName&quot;:&quot;football.jpg&quot;,&quot;name&quot;:&quot;football.jpg&quot;,&quot;uploadedBy&quot;:&quot;${NAME}&quot;,&quot;lm_NotificationRequiredInd&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_MICROSERVICE}/DocUpload/uploadDocument</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://perf-microserviceapps.libertyec.com/DocumentUploadUI/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">No-Cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3; Tablet PC 2.0)</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;documentStream&quot;:&quot;&quot;,&quot;claimNumber&quot;:&quot;${CLAIMNUMBER}&quot;,&quot;exposureNumber&quot;:&quot;01&quot;,&quot;typeDescription&quot;:&quot;Claim Summary Report&quot;,&quot;documentDescription&quot;:&quot;TP15&quot;,&quot;uploadedFileName&quot;:&quot;football.jpg&quot;,&quot;name&quot;:&quot;football.jpg&quot;,&quot;uploadedBy&quot;:&quot;${NAME}&quot;,&quot;lm_NotificationRequiredInd&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_MICROSERVICE}/DocUpload/uploadDocument</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://perf-microserviceapps.libertyec.com/DocumentUploadUI/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">No-Cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3; Tablet PC 2.0)</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;documentStream&quot;:&quot;&quot;,&quot;claimNumber&quot;:&quot;${CLAIMNUMBER}&quot;,&quot;exposureNumber&quot;:&quot;01&quot;,&quot;typeDescription&quot;:&quot;Claim Summary Report&quot;,&quot;documentDescription&quot;:&quot;TP15&quot;,&quot;uploadedFileName&quot;:&quot;football.jpg&quot;,&quot;name&quot;:&quot;football.jpg&quot;,&quot;uploadedBy&quot;:&quot;${NAME}&quot;,&quot;lm_NotificationRequiredInd&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_MICROSERVICE}/DocUpload/uploadDocument</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://perf-microserviceapps.libertyec.com/DocumentUploadUI/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">No-Cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3; Tablet PC 2.0)</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;documentStream&quot;:&quot;&quot;,&quot;claimNumber&quot;:&quot;${CLAIMNUMBER}&quot;,&quot;exposureNumber&quot;:&quot;01&quot;,&quot;typeDescription&quot;:&quot;Claim Summary Report&quot;,&quot;documentDescription&quot;:&quot;TP15&quot;,&quot;uploadedFileName&quot;:&quot;football.jpg&quot;,&quot;name&quot;:&quot;football.jpg&quot;,&quot;uploadedBy&quot;:&quot;${NAME}&quot;,&quot;lm_NotificationRequiredInd&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_MICROSERVICE}/DocUpload/uploadDocument</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://perf-microserviceapps.libertyec.com/DocumentUploadUI/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">No-Cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3; Tablet PC 2.0)</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP15_H_Upload_Ten_Documents" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;documentStream&quot;:&quot;&quot;,&quot;claimNumber&quot;:&quot;${CLAIMNUMBER}&quot;,&quot;exposureNumber&quot;:&quot;01&quot;,&quot;typeDescription&quot;:&quot;Claim Summary Report&quot;,&quot;documentDescription&quot;:&quot;TP15&quot;,&quot;uploadedFileName&quot;:&quot;football.jpg&quot;,&quot;name&quot;:&quot;football.jpg&quot;,&quot;uploadedBy&quot;:&quot;${NAME}&quot;,&quot;lm_NotificationRequiredInd&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_MICROSERVICE}/DocUpload/uploadDocument</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://perf-microserviceapps.libertyec.com/DocumentUploadUI/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">No-Cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3; Tablet PC 2.0)</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;documentStream&quot;:&quot;&quot;,&quot;claimNumber&quot;:&quot;${CLAIMNUMBER}&quot;,&quot;exposureNumber&quot;:&quot;01&quot;,&quot;typeDescription&quot;:&quot;Claim Summary Report&quot;,&quot;documentDescription&quot;:&quot;TP15&quot;,&quot;uploadedFileName&quot;:&quot;football.jpg&quot;,&quot;name&quot;:&quot;football.jpg&quot;,&quot;uploadedBy&quot;:&quot;${NAME}&quot;,&quot;lm_NotificationRequiredInd&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_MICROSERVICE}/DocUpload/uploadDocument</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://perf-microserviceapps.libertyec.com/DocumentUploadUI/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">No-Cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3; Tablet PC 2.0)</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;documentStream&quot;:&quot;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&quot;,&quot;claimNumber&quot;:&quot;${CLAIMNUMBER}&quot;,&quot;exposureNumber&quot;:&quot;01&quot;,&quot;typeDescription&quot;:&quot;Claim Summary Report&quot;,&quot;documentDescription&quot;:&quot;TP15&quot;,&quot;uploadedFileName&quot;:&quot;football.jpg&quot;,&quot;name&quot;:&quot;football.jpg&quot;,&quot;uploadedBy&quot;:&quot;${NAME}&quot;,&quot;lm_NotificationRequiredInd&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_MICROSERVICE}/DocUpload/uploadDocument</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://perf-microserviceapps.libertyec.com/DocumentUploadUI/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">No-Cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3; Tablet PC 2.0)</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;documentStream&quot;:&quot;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&quot;,&quot;claimNumber&quot;:&quot;${CLAIMNUMBER}&quot;,&quot;exposureNumber&quot;:&quot;01&quot;,&quot;typeDescription&quot;:&quot;Claim Summary Report&quot;,&quot;documentDescription&quot;:&quot;TP15&quot;,&quot;uploadedFileName&quot;:&quot;football.jpg&quot;,&quot;name&quot;:&quot;football.jpg&quot;,&quot;uploadedBy&quot;:&quot;${NAME}&quot;,&quot;lm_NotificationRequiredInd&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_MICROSERVICE}/DocUpload/uploadDocument</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://perf-microserviceapps.libertyec.com/DocumentUploadUI/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">No-Cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3; Tablet PC 2.0)</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;documentStream&quot;:&quot;&quot;,&quot;claimNumber&quot;:&quot;${CLAIMNUMBER}&quot;,&quot;exposureNumber&quot;:&quot;01&quot;,&quot;typeDescription&quot;:&quot;Claim Summary Report&quot;,&quot;documentDescription&quot;:&quot;TP15&quot;,&quot;uploadedFileName&quot;:&quot;football.jpg&quot;,&quot;name&quot;:&quot;football.jpg&quot;,&quot;uploadedBy&quot;:&quot;${NAME}&quot;,&quot;lm_NotificationRequiredInd&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_MICROSERVICE}/DocUpload/uploadDocument</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://perf-microserviceapps.libertyec.com/DocumentUploadUI/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">No-Cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3; Tablet PC 2.0)</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;documentStream&quot;:&quot;&quot;,&quot;claimNumber&quot;:&quot;${CLAIMNUMBER}&quot;,&quot;exposureNumber&quot;:&quot;01&quot;,&quot;typeDescription&quot;:&quot;Claim Summary Report&quot;,&quot;documentDescription&quot;:&quot;TP15&quot;,&quot;uploadedFileName&quot;:&quot;football.jpg&quot;,&quot;name&quot;:&quot;football.jpg&quot;,&quot;uploadedBy&quot;:&quot;${NAME}&quot;,&quot;lm_NotificationRequiredInd&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_MICROSERVICE}/DocUpload/uploadDocument</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://perf-microserviceapps.libertyec.com/DocumentUploadUI/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">No-Cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3; Tablet PC 2.0)</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;documentStream&quot;:&quot;&quot;,&quot;claimNumber&quot;:&quot;${CLAIMNUMBER}&quot;,&quot;exposureNumber&quot;:&quot;01&quot;,&quot;typeDescription&quot;:&quot;Claim Summary Report&quot;,&quot;documentDescription&quot;:&quot;TP15&quot;,&quot;uploadedFileName&quot;:&quot;football.jpg&quot;,&quot;name&quot;:&quot;football.jpg&quot;,&quot;uploadedBy&quot;:&quot;${NAME}&quot;,&quot;lm_NotificationRequiredInd&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_MICROSERVICE}/DocUpload/uploadDocument</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://perf-microserviceapps.libertyec.com/DocumentUploadUI/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">No-Cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3; Tablet PC 2.0)</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;documentStream&quot;:&quot;&quot;,&quot;claimNumber&quot;:&quot;${CLAIMNUMBER}&quot;,&quot;exposureNumber&quot;:&quot;01&quot;,&quot;typeDescription&quot;:&quot;Claim Summary Report&quot;,&quot;documentDescription&quot;:&quot;TP15&quot;,&quot;uploadedFileName&quot;:&quot;football.jpg&quot;,&quot;name&quot;:&quot;football.jpg&quot;,&quot;uploadedBy&quot;:&quot;${NAME}&quot;,&quot;lm_NotificationRequiredInd&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_MICROSERVICE}/DocUpload/uploadDocument</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://perf-microserviceapps.libertyec.com/DocumentUploadUI/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">No-Cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3; Tablet PC 2.0)</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;documentStream&quot;:&quot;&quot;,&quot;claimNumber&quot;:&quot;${CLAIMNUMBER}&quot;,&quot;exposureNumber&quot;:&quot;01&quot;,&quot;typeDescription&quot;:&quot;Claim Summary Report&quot;,&quot;documentDescription&quot;:&quot;TP15&quot;,&quot;uploadedFileName&quot;:&quot;football.jpg&quot;,&quot;name&quot;:&quot;football.jpg&quot;,&quot;uploadedBy&quot;:&quot;${NAME}&quot;,&quot;lm_NotificationRequiredInd&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_MICROSERVICE}/DocUpload/uploadDocument</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://perf-microserviceapps.libertyec.com/DocumentUploadUI/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">No-Cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3; Tablet PC 2.0)</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;documentStream&quot;:&quot;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&quot;,&quot;claimNumber&quot;:&quot;${CLAIMNUMBER}&quot;,&quot;exposureNumber&quot;:&quot;01&quot;,&quot;typeDescription&quot;:&quot;Claim Summary Report&quot;,&quot;documentDescription&quot;:&quot;TP15&quot;,&quot;uploadedFileName&quot;:&quot;football.jpg&quot;,&quot;name&quot;:&quot;football.jpg&quot;,&quot;uploadedBy&quot;:&quot;${NAME}&quot;,&quot;lm_NotificationRequiredInd&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_MICROSERVICE}/DocUpload/uploadDocument</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://perf-microserviceapps.libertyec.com/DocumentUploadUI/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">No-Cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3; Tablet PC 2.0)</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP15_ZI_Logout" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_26" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">TabBar%3AClaimTab%3AClaimTab_FindClaim=&amp;QuickJump=&amp;Desktop%3AMenuLinks_toggle=&amp;DesktopActivities%3ADesktopActivitiesScreen%3ADesktopActivitiesLV%3ADesktopActivitiesFilter=AndFilter%2FMy%20activities%20today&amp;%3Atblinks=${cTBLINKS_001_URL2}&amp;%3Atabs=${cTABS_002_URL2}&amp;Desktop%3ADesktopMenuActions=${cDESKTOPMENUACTIONS_001_URL2}&amp;Desktop%3AMenuLinks=${cDESKTOPMENULINKS_001_URL2}&amp;csrfToken=&amp;eventSource=TabBar%3ALogoutTabBarLink_act&amp;objFocusId=TabBar%3ALogoutTabBarLink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_NAVIGATOR}/cc/ClaimCenter.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PMClaimCenterLogout.fcc" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_NAVIGATOR}/LMAuth/PMClaimCenterLogout.fcc</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-Logout" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Logout</stringProp>
              <stringProp name="RegexExtractor.regex">ck&quot; HREF=&quot;/cc/claimcenter.do&quot; &gt;Log (.*?) In&lt;/A&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script"></stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-responsecode" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">code</stringProp>
              <stringProp name="RegexExtractor.refname">responsecode</stringProp>
              <stringProp name="RegexExtractor.regex">(\d+)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">0</stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">log.info(&quot;The doLogin Value before Logout &quot;+vars.get(&quot;doLogin&quot;));
int rescode=Integer.parseInt(vars.get(&quot;responsecode&quot;));
String stats= vars.get(&quot;Logout&quot;);
//String stats1= vars.get(&quot;Qualification_Message&quot;);
vars.put(&quot;doLogin&quot;,&quot;0&quot;);
if (rescode &gt;= 200 &amp;&amp; rescode &lt; 399)
{	//error if no results found
	if (stats.equals(&quot;null&quot;))
	{	
		//  search did not return any results
		log.error(&quot;Transaction Name :CNG_TP15_ZI_Logout##&quot;+&quot;Request XML:&quot;+prev.getSamplerData()+&quot;##&quot;+&quot;HTTP Response Code:&quot;+vars.get(&quot;responsecode&quot;)+&quot;##&quot;+&quot;Response From Server : &quot;+prev.getResponseDataAsString());
		prev.setSuccessful(false);
		ctx.setRestartNextLoop(true);
		//vars.put(&quot;doLogin&quot;,&quot;1&quot;);
		
	}
	else 
	{
		// search successfull
		prev.setSuccessful(true);
	}
}
else
{
// Unexpected result  from server
	log.error(&quot;Transaction Name :CNG_TP15_ZI_Logout##&quot;+&quot;Request XML:&quot;+prev.getSamplerData()+&quot;##&quot;+&quot;HTTP Response Code:&quot;+vars.get(&quot;responsecode&quot;)+&quot;##&quot;+&quot;Response From Server : &quot;+prev.getResponseDataAsString());
	prev.setSuccessful(false);
	ctx.setRestartNextLoop(true);
}
//log.info(&quot;the value is : &quot;+vars.get(&quot;doLogin&quot;));
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 0" enabled="true">
            <stringProp name="TestPlan.comments">This transaction will wait for 0 seconds</stringProp>
          </GenericController>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime" enabled="true">
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 0s x 1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="true">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="-2135475220">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|woff)[\?;].*</stringProp>
          <stringProp name="1409425616">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|woff)</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">4</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">true</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.domains">127.0.0.1</stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">recording.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
