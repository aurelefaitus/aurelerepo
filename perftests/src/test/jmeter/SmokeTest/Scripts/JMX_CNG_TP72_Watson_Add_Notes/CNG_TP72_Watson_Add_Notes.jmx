<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="TF_CNG_TP72_Watson_Add_Notes" enabled="true"/>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="CookieManager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">true</boolProp>
          <boolProp name="useExpires">false</boolProp>
        </CacheManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="TP72 CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP72_Watson_Add_Notes${PATH_SEP}TP72.csv</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode.all">shareMode</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">CLAIMNUMBER,NNUMBER</stringProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <stringProp name="TestPlan.comments">CLAIMNUMBER,NNUMBER</stringProp>
        </CSVDataSet>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime" enabled="true">
          <stringProp name="ConstantTimer.delay">${CNG_TP72_Watson_Add_Notes_ThinkTime}</stringProp>
          <stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 60s x 1000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Pacing" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${CNG_TP72_Watson_Add_Notes_Pacing}</stringProp>
        </TestAction>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TP72_Watson_Add_Notes" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Watson_Add_Notes" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns=&quot;http://lmig.com/standardHeader/2008/07/01&quot; xmlns:not=&quot;http://pm.lmig.com/cl/2008/07/01/notes&quot; xmlns:ns1=&quot;http://pm.lmig.com/cl/2008/07/01&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
      &lt;ns:Transaction correlationID=&quot;123456&quot; sourceSystemID=&quot;Watson&quot; transactionTimestamp=&quot;2007-04-06T21:10:30&quot; userID=&quot;N0007040&quot;/&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;not:AddNotesRequest&gt;&#xd;
         &lt;not:OccurrenceIdentifier&gt;${PARENTEXPOSURENUM}&lt;/not:OccurrenceIdentifier&gt;&#xd;
         &lt;not:ClaimIdentifier&gt;0001&lt;/not:ClaimIdentifier&gt;&#xd;
         &#xd;
         &lt;not:Note&gt;&#xd;
            &lt;ns1:NoteSubjectCode&gt;001&lt;/ns1:NoteSubjectCode&gt;&#xd;
            &lt;ns1:NoteText&gt;TP72_ESERVICE_WATSON_ADD_NEW_NOTE&lt;/ns1:NoteText&gt;&#xd;
            &lt;ns1:NoteType&gt;Claim&lt;/ns1:NoteType&gt;&#xd;
            &#xd;
            &lt;ns1:CreationTime&gt;12:00AM&lt;/ns1:CreationTime&gt;&#xd;
            &lt;not:CreatedBy&gt;${NNUMBER}&lt;/not:CreatedBy&gt;&#xd;
         &lt;/not:Note&gt;&#xd;
      &lt;/not:AddNotesRequest&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_CLAIMSERVICE}/ClaimServicesMediationModuleWeb/sca/WatsonClaimServicesWSExport</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">https://${GV_HOSTNAME_CLAIMSERVICE}/ClaimServicesMediationModuleWeb/sca/WatsonClaimServicesWSExport</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/xml+soap</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor TP72_Watson_Add_Notes" enabled="true">
              <stringProp name="cacheKey">27dbf407-2138-4f53-b9a0-da3c6853de2e</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;PARENTEXPOSURENUM&quot;,vars.get(&quot;CLAIMNUMBER&quot;));</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="WEBSERVICEERRORMESSAGE Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">WEBSERVICEERRORMESSAGE</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;_01:ErrorText&gt;(.*?)&lt;/_01:ErrorText&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="XML_ResponseStatus Extractor" enabled="true">
              <stringProp name="TestPlan.comments">&quot;XML_ResponseStatus&quot;|&quot;LB=&lt;_xml:MsgStatusCd&gt;&quot;|&quot;RB=&lt;/_xml:MsgStatusCd&gt;&quot;|&quot;Search=Body&quot;|&quot;IgnoreRedirections=Yes&quot;|</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">XML_ResponseStatus</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;notes:Status&gt;(.*?)&lt;/notes:Status&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP72_Watson_Add_Notes - HTTP Response failed for Claim: ${PARENTEXPOSURENUM}" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP72_Watson_Add_Notes - HTTP Response 200: Error Message = ${WEBSERVICEERRORMESSAGE}  received for Claimnumber: ${PARENTEXPOSURENUM}" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1925055056">notes:Status&gt;SUCCESS&lt;/notes:Status&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-responsecode" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">code</stringProp>
              <stringProp name="RegexExtractor.refname">responsecode</stringProp>
              <stringProp name="RegexExtractor.regex">(\d+)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">0</stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">
int rescode=Integer.parseInt(vars.get(&quot;responsecode&quot;));

String Stat=vars.get(&quot;XML_ResponseStatus&quot;);

// if we get a sucessful http response from web service
if (rescode == 200)
{	//error if no results found
	if (Stat.equals(&quot;SUCCESS&quot;))
	{
		//log.info(prev.getResponseMessage());
		// HTTP 200 response and web service returned success reponse
		//log.info(&quot;Results found as expected for Claim Number:&quot;+ vars.get(&quot;Claim_Number&quot;));
		prev.setSuccessful(true);
	}
	else 
	{
		// HTTP 200 response and web service returned a non success reponse
		log.error(&quot;Transaction Name :TP72_Watson_Add_Notes##&quot;+&quot;Claimnumber:&quot;+vars.get(&quot;PARENTEXPOSURENUM&quot;)+&quot;##&quot;+&quot;Request XML:&quot;+prev.getSamplerData()+&quot;##&quot;+&quot;HTTP Response Code:&quot;+vars.get(&quot;responsecode&quot;)+&quot;##&quot;+&quot;Response From Server : &quot;+prev.getResponseDataAsString());
		//log.info(&quot;Sampel data&quot;+prev.getSamplerData());
		//log.error(&quot;HTTP Response 200: Error Message =&quot;+vars.get(&quot;WEBSERVICEERRORMESSAGE&quot;)+&quot;received for Claimnumber:   - &quot;+vars.get(&quot;PARENTEXPOSURENUM&quot;));
		prev.setSuccessful(false);
	}
	
}
else
{
	//log.error(&quot;Transaction Name :TP72_Watson_Add_Notes##&quot;+&quot;Claimnumber:&quot;+vars.get(&quot;PARENTEXPOSURENUM&quot;)+&quot;##&quot;+&quot;Response From Server : &quot;+prev.getResponseDataAsString());
	log.error(&quot;Transaction Name :TP72_Watson_Add_Notes##&quot;+&quot;Claimnumber:&quot;+vars.get(&quot;PARENTEXPOSURENUM&quot;)+&quot;##&quot;+&quot;Request XML:&quot;+prev.getSamplerData()+&quot;##&quot;+&quot;HTTP Response Code:&quot;+vars.get(&quot;responsecode&quot;)+&quot;##&quot;+&quot;Response From Server : &quot;+prev.getResponseDataAsString());
	// web service did not return http 200
	//log.error(&quot;HTTP Reponse not 200 OK&quot;);
	prev.setSuccessful(false);
	//setOnErrorStartNextLoop(true);
	//ctx.setRestartNextLoop(true);
}



</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">
PARENTEXPOSURENUM=vars.get(&quot;CLAIMNUMBER&quot;);
vars.put(&quot;PARENTEXPOSURENUM&quot;,vars.get(&quot;CLAIMNUMBER&quot;));
//log.info(&quot;Claimnumber&quot;+vars.get(&quot;CLAIMNUMBER&quot;));
//log.info(&quot;the parentexposurenumber&quot;+vars.get(&quot;PARENTEXPOSURENUM&quot;));</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
