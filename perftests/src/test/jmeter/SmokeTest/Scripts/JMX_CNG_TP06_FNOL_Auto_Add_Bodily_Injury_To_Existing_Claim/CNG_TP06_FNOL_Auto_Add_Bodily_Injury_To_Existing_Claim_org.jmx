<?xml version="1.0" encoding="UTF-8" standalone="no"?><jmeterTestPlan jmeter="2.13 r1665067" properties="2.8" version="1.2"><hashTree><TestPlan enabled="true" guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan"><stringProp name="TestPlan.comments"/><boolProp name="TestPlan.functional_mode">false</boolProp><boolProp name="TestPlan.serialize_threadgroups">false</boolProp><elementProp elementType="Arguments" enabled="true" guiclass="ArgumentsPanel" name="TestPlan.user_defined_variables" testclass="Arguments" testname="User Defined Variables"><collectionProp name="Arguments.arguments"/></elementProp><stringProp name="TestPlan.user_define_classpath"/></TestPlan><hashTree><ThreadGroup enabled="true" guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="CNG_TP06_FNOL_Auto_Add_Bodily_Injury_To_Existing_Claim"><stringProp name="ThreadGroup.on_sample_error">continue</stringProp><elementProp elementType="LoopController" enabled="true" guiclass="LoopControlPanel" name="ThreadGroup.main_controller" testclass="LoopController" testname="Loop Controller"><boolProp name="LoopController.continue_forever">false</boolProp><stringProp name="LoopController.loops">1</stringProp></elementProp><stringProp name="ThreadGroup.num_threads">1</stringProp><stringProp name="ThreadGroup.ramp_time">1</stringProp><longProp name="ThreadGroup.ramp_time">1455260938000</longProp><longProp name="ThreadGroup.start_time">1455260938000</longProp><boolProp name="ThreadGroup.scheduler">false</boolProp><stringProp name="ThreadGroup.duration"/><stringProp name="ThreadGroup.delay"/></ThreadGroup><hashTree><LoopController enabled="true" guiclass="LoopControlPanel" testclass="LoopController" testname="RUN x ( 1 )"><boolProp name="LoopController.continue_forever">false</boolProp><stringProp name="LoopController.loops">1</stringProp></LoopController><hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-LOGIN"><stringProp name="TestPlan.comments">This section contains the LOGIN part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_A_Launch_Browser"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"/></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">Get</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="5388078">Please log in using your Enterprise ID and password</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/><RegexExtractor enabled="true" guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cSMAGENTNAME"><stringProp name="TestPlan.comments">"ParamName=cSMAGENTNAME"|"RegExp=SMAGENTNAME=(.*?)&amp;TARGET"|SEARCH_FILTERS,"Scope=Headers"|"IgnoreRedirections=No"|"RequestUrl=*/ClaimCenter.do*"|</stringProp><stringProp name="RegexExtractor.useHeaders">false</stringProp><stringProp name="RegexExtractor.refname">cSMAGENTNAME</stringProp><stringProp name="RegexExtractor.regex">SMAGENTNAME=(.*?)&amp;TARGET</stringProp><stringProp name="RegexExtractor.template">$1$</stringProp><stringProp name="RegexExtractor.default">null</stringProp><stringProp name="RegexExtractor.match_number">1</stringProp></RegexExtractor><hashTree/><RegexExtractor enabled="true" guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cTYPE"><stringProp name="TestPlan.comments">"ParamName=cTYPE"|"RegExp=TYPE=(.*?)&amp;REALMOID"|SEARCH_FILTERS,"Scope=Headers"|"IgnoreRedirections=No"|"RequestUrl=*/ClaimCenter.do*"|</stringProp><stringProp name="RegexExtractor.useHeaders">false</stringProp><stringProp name="RegexExtractor.refname">cTYPE</stringProp><stringProp name="RegexExtractor.regex">TYPE=(.*?)&amp;REALMOID</stringProp><stringProp name="RegexExtractor.template">$1$</stringProp><stringProp name="RegexExtractor.default">null</stringProp><stringProp name="RegexExtractor.match_number">1</stringProp></RegexExtractor><hashTree/><RegexExtractor enabled="true" guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cREALMOID"><stringProp name="TestPlan.comments">"ParamName=cREALMOID"|"RegExp=REALMOID=(.*?)&amp;GUID"|SEARCH_FILTERS,"Scope=Headers"|"IgnoreRedirections=No"|"RequestUrl=*/ClaimCenter.do*"|</stringProp><stringProp name="RegexExtractor.useHeaders">false</stringProp><stringProp name="RegexExtractor.refname">cREALMOID</stringProp><stringProp name="RegexExtractor.regex">REALMOID=(.*?)&amp;GUID</stringProp><stringProp name="RegexExtractor.template">$1$</stringProp><stringProp name="RegexExtractor.default">null</stringProp><stringProp name="RegexExtractor.match_number">1</stringProp></RegexExtractor><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_B_Login"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PMClaimCenterLogin.fcc"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="USER"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">USER</stringProp><stringProp name="Argument.value">${USERNAME}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PASSWORD"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PASSWORD</stringProp><stringProp name="Argument.value">${PASSWORD}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="target"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">target</stringProp><stringProp name="Argument.value">http://${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="smauthreason"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">smauthreason</stringProp><stringProp name="Argument.value">0</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/LMAuth/PMClaimCenterLogin.fcc?TYPE=${cTYPE}&amp;REALMOID=${cREALMOID}&amp;GUID=&amp;SMAUTHREASON=0&amp;METHOD=GET&amp;SMAGENTNAME=${cSMAGENTNAME}&amp;TARGET=-SM-http%3a%2f%2fperf--pmclaimcenter--internal%2elibertyec%2ecom%2fcc%2fClaimCenter%2edo</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="15819347">GENERAL_MSG_CAT_SSL_ERROR</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-POLICYSEARCHPHONE"><stringProp name="TestPlan.comments">This section contains the POLICYSEARCHPHONE part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_E_Triage_Search_Policy_Phone_Number"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_81"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=""><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name"/><stringProp name="Argument.value">&amp;QuickJump=&amp;FNOLWizard%3A0_toggle=&amp;FNOLWizard%3A1_toggle=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3ApolicyTypePageModeDV%3APolicyType=auto_per&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AScreenMode1=true&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByFN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByLN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AreportedByPhone=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AClaim_ReportedByType=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ATriageAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AdateAuto=${DOL_URL2}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AClaim_lossTimeAuto=12%3A00%20AM&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossStateAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossCategoryAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AanyInjuryAuto=false&amp;PolicySearch.LM_SearchOption_Radio=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AphoneSearchAuto_Choice&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AphoneAuto=${PHONENUMBER}&amp;%3Atblinks=${cTBLINKS_1_URL2}&amp;%3Atabs=${cTABS_URL2}&amp;infoBar=${cINFOBAR_1_URL2}&amp;FNOLWizard%3AFNOLMenuActions=${cFNOLMENUACTIONS_URL2}&amp;FNOLWizard%3A0=${cFNOLWIZARD0_URL2}&amp;FNOLWizard%3A1=${cFNOLWIZARD1_URL2}&amp;csrfToken=&amp;eventSource=_refresh_&amp;eventParam=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AClaim_lossTimeAuto&amp;objFocusId=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AClaim_lossTimeAuto</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="51406611">Triage and Policy Search</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><BeanShellSampler enabled="true" guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="OutPut Message"><stringProp name="TestPlan.comments">"Combined Name is %s", combinedNameParam | </stringProp><stringProp name="BeanShellSampler.query">log.info(""+"Combined Name is combinedNameParam");</stringProp><stringProp name="BeanShellSampler.filename"/><stringProp name="BeanShellSampler.parameters"/><boolProp name="BeanShellSampler.resetInterpreter"/></BeanShellSampler><hashTree/><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_82"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=""><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name"/><stringProp name="Argument.value">&amp;QuickJump=&amp;FNOLWizard%3A0_toggle=&amp;FNOLWizard%3A1_toggle=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3ApolicyTypePageModeDV%3APolicyType=auto_per&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AScreenMode1=true&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByFN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByLN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AreportedByPhone=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AClaim_ReportedByType=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ATriageAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AdateAuto=${DOL_URL2}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AClaim_lossTimeAuto=12%3A00%20AM&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossStateAuto=${STATE}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossCategoryAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AanyInjuryAuto=false&amp;PolicySearch.LM_SearchOption_Radio=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AphoneSearchAuto_Choice&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AphoneAuto=${PHONENUMBER}&amp;%3Atblinks=${cTBLINKS_1_URL2}&amp;%3Atabs=${cTABS_URL2}&amp;infoBar=${cINFOBAR_1_URL2}&amp;FNOLWizard%3AFNOLMenuActions=${cFNOLMENUACTIONS_URL2}&amp;FNOLWizard%3A0=${cFNOLWIZARD0_URL2}&amp;FNOLWizard%3A1=${cFNOLWIZARD1_URL2}&amp;csrfToken=&amp;eventSource=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ASearch2_act&amp;objFocusId=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ASearch2</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_H_Triage_Select_Policy"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_6"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=""><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name"/><stringProp name="Argument.value">&amp;QuickJump=&amp;FNOLWizard%3A0_toggle=&amp;FNOLWizard%3A1_toggle=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3ApolicyTypePageModeDV%3APolicyType=auto_per&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3ApolicyTypePageModeDV%3APolicyProviderType=liberty&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AScreenMode1=true&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByFN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByLN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AreportedByPhone=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AreportedByPhoneExtn=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AClaim_ReportedByType=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ATriageAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AClaim_lossTimeAuto=12%3A00%20AM&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossStateAuto=${STATE}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossCategoryAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AanyInjuryAuto=false&amp;PolicySearch.LM_SearchOption_Radio=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ApolNumSearchAuto_Choice&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ApolicyNumberAuto=${POLICYNUMBER}&amp;%3Atblinks=${cTBLINKS_1_URL2}&amp;%3Atabs=${cTABS_URL2}&amp;infoBar=${cINFOBAR_1_URL2}&amp;FNOLWizard%3AFNOLMenuActions=${cFNOLMENUACTIONS_URL2}&amp;FNOLWizard%3A0=${cFNOLWIZARD0_URL2}&amp;FNOLWizard%3A1=${cFNOLWIZARD1_URL2}&amp;csrfToken=&amp;eventSource=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3APolicyResultLV%3A0%3AselectButton_act&amp;objFocusId=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3APolicyResultLV%3A0%3AselectButton</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_I_Triage_Next_To_Basic_Information"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_83"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByLN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByLN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhone"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhone</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLWizard:Next_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyType</stringProp><stringProp name="Argument.value">auto_per</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ScreenMode1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ScreenMode1</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByFN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByFN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLWizard:Next</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_2}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:anyInjuryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:anyInjuryAuto</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossCategoryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossCategoryAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossStateAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossStateAuto</stringProp><stringProp name="Argument.value">${STATE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:TriageAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:TriageAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:ClaimMode"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:ClaimMode</stringProp><stringProp name="Argument.value">Auto</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:phoneAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:phoneAuto</stringProp><stringProp name="Argument.value">${PHONENUMBER}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PolicySearch.LM_SearchOption_Radio"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PolicySearch.LM_SearchOption_Radio</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:phoneSearchAuto_Choice</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:Claim_ReportedByType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:Claim_ReportedByType</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="90449027">Loss Location State may disqualify this claim for creation in Navigator</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_L_Triage_Close_Duplicate_Claims"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_84"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByLN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByLN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhone"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhone</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">NewClaimDuplicatesWorksheet:NewClaimDuplicatesScreen:NewClaimDuplicatesWorksheet_CloseButton_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyType</stringProp><stringProp name="Argument.value">auto_per</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ScreenMode1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ScreenMode1</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByFN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByFN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">NewClaimDuplicatesWorksheet:NewClaimDuplicatesScreen:NewClaimDuplicatesWorksheet_CloseButton</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_3}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:anyInjuryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:anyInjuryAuto</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossCategoryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossCategoryAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossStateAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossStateAuto</stringProp><stringProp name="Argument.value">${STATE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:TriageAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:TriageAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:ClaimMode"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:ClaimMode</stringProp><stringProp name="Argument.value">Auto</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:phoneAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:phoneAuto</stringProp><stringProp name="Argument.value">${PHONENUMBER}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PolicySearch.LM_SearchOption_Radio"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PolicySearch.LM_SearchOption_Radio</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:phoneSearchAuto_Choice</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:Claim_ReportedByType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:Claim_ReportedByType</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_M_Triage_Next_To_Basic_Information"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_85"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByLN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByLN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhone"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhone</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLWizard:Next_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyType</stringProp><stringProp name="Argument.value">auto_per</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ScreenMode1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ScreenMode1</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByFN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByFN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLWizard:Next</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_3}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:anyInjuryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:anyInjuryAuto</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossCategoryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossCategoryAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossStateAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossStateAuto</stringProp><stringProp name="Argument.value">${STATE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:TriageAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:TriageAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:ClaimMode"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:ClaimMode</stringProp><stringProp name="Argument.value">Auto</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:phoneAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:phoneAuto</stringProp><stringProp name="Argument.value">${PHONENUMBER}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PolicySearch.LM_SearchOption_Radio"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PolicySearch.LM_SearchOption_Radio</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:phoneSearchAuto_Choice</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:Claim_ReportedByType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:Claim_ReportedByType</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-POLICYSEARCHNAMEANDSTATE"><stringProp name="TestPlan.comments">This section contains the POLICYSEARCHNAMEANDSTATE part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_F_Triage_Search_Name_And_State"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_3"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=""><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name"/><stringProp name="Argument.value">&amp;QuickJump=&amp;FNOLWizard%3A0_toggle=&amp;FNOLWizard%3A1_toggle=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3ApolicyTypePageModeDV%3APolicyType=auto_per&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AScreenMode1=true&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByFN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByLN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AreportedByPhone=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AreportedByPhoneExtn=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AClaim_ReportedByType=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ATriageAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AdateAuto=${DOL_URL2}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AClaim_lossTimeAuto=12%3A00%20AM&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossStateAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossCategoryAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AanyInjuryAuto=false&amp;PolicySearch.LM_SearchOption_Radio=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AphoneSearchAuto_Choice&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AphoneAuto=&amp;%3Atblinks=${cTBLINKS_1_URL2}&amp;%3Atabs=${cTABS_URL2}&amp;infoBar=${cINFOBAR_1_URL2}&amp;FNOLWizard%3AFNOLMenuActions=${cFNOLMENUACTIONS_URL2}&amp;FNOLWizard%3A0=${cFNOLWIZARD0_URL2}&amp;FNOLWizard%3A1=${cFNOLWIZARD1_URL2}&amp;csrfToken=&amp;eventSource=_refresh_&amp;eventParam=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AClaim_lossTimeAuto&amp;objFocusId=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AClaim_lossTimeAuto</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="44832292">Triage and Policy Search</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_4"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=""><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name"/><stringProp name="Argument.value">&amp;QuickJump=&amp;FNOLWizard%3A0_toggle=&amp;FNOLWizard%3A1_toggle=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3ApolicyTypePageModeDV%3APolicyType=auto_per&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AScreenMode1=true&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByFN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByLN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AreportedByPhone=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AreportedByPhoneExtn=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AClaim_ReportedByType=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ATriageAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AdateAuto=${DOL_URL2}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AClaim_lossTimeAuto=12%3A00%20AM&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossStateAuto=${STATE}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossCategoryAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AanyInjuryAuto=false&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AphoneAuto=&amp;PolicySearch.LM_SearchOption_Radio=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AnameSearchAuto_Choice&amp;%3Atblinks=${cTBLINKS_1_URL2}&amp;%3Atabs=${cTABS_URL2}&amp;infoBar=${cINFOBAR_1_URL2}&amp;FNOLWizard%3AFNOLMenuActions=${cFNOLMENUACTIONS_URL2}&amp;FNOLWizard%3A0=${cFNOLWIZARD0_URL2}&amp;FNOLWizard%3A1=${cFNOLWIZARD1_URL2}&amp;csrfToken=&amp;eventSource=_refresh_&amp;eventParam=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AnameSearchAuto_Choice&amp;objFocusId=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AnameSearchAuto_Choice</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_5"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=""><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name"/><stringProp name="Argument.value">&amp;QuickJump=&amp;FNOLWizard%3A0_toggle=&amp;FNOLWizard%3A1_toggle=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3ApolicyTypePageModeDV%3APolicyType=auto_per&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AScreenMode1=true&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByFN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByLN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AreportedByPhone=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AreportedByPhoneExtn=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AClaim_ReportedByType=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ATriageAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AdateAuto=${DOL_URL2}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AClaim_lossTimeAuto=12%3A00%20AM&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossStateAuto=${STATE}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossCategoryAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AanyInjuryAuto=false&amp;PolicySearch.LM_SearchOption_Radio=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AnameSearchAuto_Choice&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AfirstnameAuto=${FIRSTNAME}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlastnameAuto=${LASTNAME}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AcityAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AstateAuto=${AGREEMENTSOURCE}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ApostalCodeAuto=&amp;%3Atblinks=${cTBLINKS_1_URL2}&amp;%3Atabs=${cTABS_URL2}&amp;infoBar=${cINFOBAR_1_URL2}&amp;FNOLWizard%3AFNOLMenuActions=${cFNOLMENUACTIONS_URL2}&amp;FNOLWizard%3A0=${cFNOLWIZARD0_URL2}&amp;FNOLWizard%3A1=${cFNOLWIZARD1_URL2}&amp;csrfToken=&amp;eventSource=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ASearch2_act&amp;objFocusId=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ASearch2</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_H_Triage_Select_Policy"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_6"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=""><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name"/><stringProp name="Argument.value">&amp;QuickJump=&amp;FNOLWizard%3A0_toggle=&amp;FNOLWizard%3A1_toggle=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3ApolicyTypePageModeDV%3APolicyType=auto_per&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AScreenMode1=true&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByFN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByLN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AreportedByPhone=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AreportedByPhoneExtn=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AClaim_ReportedByType=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ATriageAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AClaim_lossTimeAuto=12%3A00%20AM&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossStateAuto=${STATE}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossCategoryAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AanyInjuryAuto=false&amp;PolicySearch.LM_SearchOption_Radio=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AnameSearchAuto_Choice&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AfirstnameAuto=${FIRSTNAME}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlastnameAuto=${LASTNAME}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AcityAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AstateAuto=${AGREEMENTSOURCE}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ApostalCodeAuto=&amp;%3Atblinks=${cTBLINKS_1_URL2}&amp;%3Atabs=${cTABS_URL2}&amp;infoBar=${cINFOBAR_1_URL2}&amp;FNOLWizard%3AFNOLMenuActions=${cFNOLMENUACTIONS_URL2}&amp;FNOLWizard%3A0=${cFNOLWIZARD0_URL2}&amp;FNOLWizard%3A1=${cFNOLWIZARD1_URL2}&amp;csrfToken=&amp;eventSource=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3APolicyResultLV%3A0%3AselectButton_act&amp;objFocusId=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3APolicyResultLV%3A0%3AselectButton</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_I_Triage_Next_To_Basic_Information"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_7"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByLN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByLN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhone"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhone</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_2}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:ClaimMode"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:ClaimMode</stringProp><stringProp name="Argument.value">Auto</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyType</stringProp><stringProp name="Argument.value">auto_per</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ScreenMode1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ScreenMode1</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByFN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByFN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:postalCodeAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:postalCodeAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:stateAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:stateAuto</stringProp><stringProp name="Argument.value">${AGREEMENTSOURCE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:cityAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:cityAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossCategoryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossCategoryAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossStateAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossStateAuto</stringProp><stringProp name="Argument.value">${STATE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:TriageAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:TriageAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:Claim_ReportedByType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:Claim_ReportedByType</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lastnameAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lastnameAuto</stringProp><stringProp name="Argument.value">${LASTNAME}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:firstnameAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:firstnameAuto</stringProp><stringProp name="Argument.value">${FIRSTNAME}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PolicySearch.LM_SearchOption_Radio"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PolicySearch.LM_SearchOption_Radio</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:nameSearchAuto_Choice</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:anyInjuryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:anyInjuryAuto</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhoneExtn"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhoneExtn</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLWizard:Next</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLWizard:Next_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="96221955">Possible Duplicate Claims</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_L_Triage_Close_Duplicate_Claims"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_8"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByLN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByLN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhone"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhone</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_3}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:ClaimMode"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:ClaimMode</stringProp><stringProp name="Argument.value">Auto</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyType</stringProp><stringProp name="Argument.value">auto_per</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ScreenMode1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ScreenMode1</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByFN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByFN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:postalCodeAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:postalCodeAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:stateAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:stateAuto</stringProp><stringProp name="Argument.value">${AGREEMENTSOURCE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:cityAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:cityAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossCategoryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossCategoryAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossStateAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossStateAuto</stringProp><stringProp name="Argument.value">${STATE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:TriageAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:TriageAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:Claim_ReportedByType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:Claim_ReportedByType</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lastnameAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lastnameAuto</stringProp><stringProp name="Argument.value">${LASTNAME}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:firstnameAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:firstnameAuto</stringProp><stringProp name="Argument.value">${FIRSTNAME}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PolicySearch.LM_SearchOption_Radio"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PolicySearch.LM_SearchOption_Radio</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:nameSearchAuto_Choice</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:anyInjuryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:anyInjuryAuto</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhoneExtn"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhoneExtn</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">NewClaimDuplicatesWorksheet:NewClaimDuplicatesScreen:NewClaimDuplicatesWorksheet_CloseButton</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">NewClaimDuplicatesWorksheet:NewClaimDuplicatesScreen:NewClaimDuplicatesWorksheet_CloseButton_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_M_Triage_Next_to_Basic_Information"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_9"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByLN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByLN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhone"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhone</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_3}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:ClaimMode"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:ClaimMode</stringProp><stringProp name="Argument.value">Auto</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyType</stringProp><stringProp name="Argument.value">auto_per</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ScreenMode1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ScreenMode1</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByFN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByFN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:postalCodeAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:postalCodeAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:stateAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:stateAuto</stringProp><stringProp name="Argument.value">${AGREEMENTSOURCE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:cityAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:cityAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossCategoryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossCategoryAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossStateAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossStateAuto</stringProp><stringProp name="Argument.value">${STATE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:TriageAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:TriageAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:Claim_ReportedByType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:Claim_ReportedByType</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lastnameAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lastnameAuto</stringProp><stringProp name="Argument.value">${LASTNAME}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:firstnameAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:firstnameAuto</stringProp><stringProp name="Argument.value">${FIRSTNAME}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PolicySearch.LM_SearchOption_Radio"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PolicySearch.LM_SearchOption_Radio</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:nameSearchAuto_Choice</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:anyInjuryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:anyInjuryAuto</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhoneExtn"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhoneExtn</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLWizard:Next</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLWizard:Next_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-POLICYSEARCHPOLICYNUMBER"><stringProp name="TestPlan.comments">This section contains the POLICYSEARCHPOLICYNUMBER part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_G_Triage_Search_Policy_Number"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_3"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=""><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name"/><stringProp name="Argument.value">&amp;QuickJump=&amp;FNOLWizard%3A0_toggle=&amp;FNOLWizard%3A1_toggle=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3ApolicyTypePageModeDV%3APolicyType=auto_per&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3ApolicyTypePageModeDV%3APolicyProviderType=liberty&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AScreenMode1=true&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByFN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByLN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AreportedByPhone=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AreportedByPhoneExtn=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AClaim_ReportedByType=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ATriageAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AdateAuto=${DOL_URL2}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AClaim_lossTimeAuto=12%3A00%20AM&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossStateAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossCategoryAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AanyInjuryAuto=false&amp;PolicySearch.LM_SearchOption_Radio=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AphoneSearchAuto_Choice&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AphoneAuto=&amp;%3Atblinks=${cTBLINKS_1_URL2}&amp;%3Atabs=${cTABS_URL2}&amp;infoBar=${cINFOBAR_1_URL2}&amp;FNOLWizard%3AFNOLMenuActions=${cFNOLMENUACTIONS_URL2}&amp;FNOLWizard%3A0=${cFNOLWIZARD0_URL2}&amp;FNOLWizard%3A1=${cFNOLWIZARD1_URL2}&amp;csrfToken=&amp;eventSource=_refresh_&amp;eventParam=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AClaim_lossTimeAuto&amp;objFocusId=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AClaim_lossTimeAuto</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="70446140">Triage and Policy Search</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_4"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=""><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name"/><stringProp name="Argument.value">&amp;QuickJump=&amp;FNOLWizard%3A0_toggle=&amp;FNOLWizard%3A1_toggle=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3ApolicyTypePageModeDV%3APolicyType=auto_per&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3ApolicyTypePageModeDV%3APolicyProviderType=liberty&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AScreenMode1=true&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByFN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByLN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AreportedByPhone=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AreportedByPhoneExtn=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AClaim_ReportedByType=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ATriageAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AdateAuto=${DOL_URL2}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AClaim_lossTimeAuto=12%3A00%20AM&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossStateAuto=${STATE}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossCategoryAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AanyInjuryAuto=false&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AphoneAuto=&amp;PolicySearch.LM_SearchOption_Radio=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ApolNumSearchAuto_Choice&amp;%3Atblinks=${cTBLINKS_1_URL2}&amp;%3Atabs=${cTABS_URL2}&amp;infoBar=${cINFOBAR_1_URL2}&amp;FNOLWizard%3AFNOLMenuActions=${cFNOLMENUACTIONS_URL2}&amp;FNOLWizard%3A0=${cFNOLWIZARD0_URL2}&amp;FNOLWizard%3A1=${cFNOLWIZARD1_URL2}&amp;csrfToken=&amp;eventSource=_refresh_&amp;eventParam=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ApolNumSearchAuto_Choice&amp;objFocusId=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ApolNumSearchAuto_Choice</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_5"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=""><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name"/><stringProp name="Argument.value">&amp;QuickJump=&amp;FNOLWizard%3A0_toggle=&amp;FNOLWizard%3A1_toggle=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3ApolicyTypePageModeDV%3APolicyType=auto_per&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3ApolicyTypePageModeDV%3APolicyProviderType=liberty&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AScreenMode1=true&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByFN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByLN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AreportedByPhone=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AreportedByPhoneExtn=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AClaim_ReportedByType=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ATriageAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AdateAuto=${DOL_URL2}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AClaim_lossTimeAuto=12%3A00%20AM&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossStateAuto=${STATE}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossCategoryAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AanyInjuryAuto=false&amp;PolicySearch.LM_SearchOption_Radio=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ApolNumSearchAuto_Choice&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ApolicyNumberAuto=${POLICYNUMBER}&amp;%3Atblinks=${cTBLINKS_1_URL2}&amp;%3Atabs=${cTABS_URL2}&amp;infoBar=${cINFOBAR_1_URL2}&amp;FNOLWizard%3AFNOLMenuActions=${cFNOLMENUACTIONS_URL2}&amp;FNOLWizard%3A0=${cFNOLWIZARD0_URL2}&amp;FNOLWizard%3A1=${cFNOLWIZARD1_URL2}&amp;csrfToken=&amp;eventSource=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ASearch2_act&amp;objFocusId=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ASearch2</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP01_H_Triage_Select_Policy"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_6"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=""><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name"/><stringProp name="Argument.value">&amp;QuickJump=&amp;FNOLWizard%3A0_toggle=&amp;FNOLWizard%3A1_toggle=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3ApolicyTypePageModeDV%3APolicyType=auto_per&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3ApolicyTypePageModeDV%3APolicyProviderType=liberty&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AScreenMode1=true&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByFN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AReportedByLN=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AreportedByPhone=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AreportedByPhoneExtn=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AClaim_ReportedByType=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ATriageAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AClaim_lossTimeAuto=12%3A00%20AM&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossStateAuto=${STATE}&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AlossCategoryAuto=&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3AanyInjuryAuto=false&amp;PolicySearch.LM_SearchOption_Radio=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ApolNumSearchAuto_Choice&amp;FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3ApolicyNumberAuto=${POLICYNUMBER}&amp;%3Atblinks=${cTBLINKS_1_URL2}&amp;%3Atabs=${cTABS_URL2}&amp;infoBar=${cINFOBAR_1_URL2}&amp;FNOLWizard%3AFNOLMenuActions=${cFNOLMENUACTIONS_URL2}&amp;FNOLWizard%3A0=${cFNOLWIZARD0_URL2}&amp;FNOLWizard%3A1=${cFNOLWIZARD1_URL2}&amp;csrfToken=&amp;eventSource=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3APolicyResultLV%3A0%3AselectButton_act&amp;objFocusId=FNOLWizard%3AFNOLWizard_FindPolicyScreen%3AFNOLWizardFindPolicyPanelSet%3APolicySearchSP%3APolicyResultLV%3A0%3AselectButton</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_I_Triage_Next_To_Basic_Information"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_7"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByFN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByFN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByLN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByLN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_2}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyType</stringProp><stringProp name="Argument.value">auto_per</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLWizard:Next</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyProviderType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyProviderType</stringProp><stringProp name="Argument.value">liberty</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLWizard:Next_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ScreenMode1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ScreenMode1</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:ClaimMode"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:ClaimMode</stringProp><stringProp name="Argument.value">Auto</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossStateAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossStateAuto</stringProp><stringProp name="Argument.value">${STATE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:TriageAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:TriageAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:Claim_ReportedByType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:Claim_ReportedByType</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhoneExtn"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhoneExtn</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:policyNumberAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:policyNumberAuto</stringProp><stringProp name="Argument.value">${POLICYNUMBER}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PolicySearch.LM_SearchOption_Radio"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PolicySearch.LM_SearchOption_Radio</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:polNumSearchAuto_Choice</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:anyInjuryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:anyInjuryAuto</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossCategoryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossCategoryAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhone"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhone</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="26010524">Loss Location State may disqualify this claim for creation in Navigator</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_L_Triage_Close_Duplicate_Claims"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_8"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByFN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByFN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByLN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByLN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_3}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyType</stringProp><stringProp name="Argument.value">auto_per</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">NewClaimDuplicatesWorksheet:NewClaimDuplicatesScreen:NewClaimDuplicatesWorksheet_CloseButton</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyProviderType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyProviderType</stringProp><stringProp name="Argument.value">liberty</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">NewClaimDuplicatesWorksheet:NewClaimDuplicatesScreen:NewClaimDuplicatesWorksheet_CloseButton_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ScreenMode1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ScreenMode1</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:ClaimMode"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:ClaimMode</stringProp><stringProp name="Argument.value">Auto</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossStateAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossStateAuto</stringProp><stringProp name="Argument.value">${STATE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:TriageAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:TriageAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:Claim_ReportedByType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:Claim_ReportedByType</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhoneExtn"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhoneExtn</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:policyNumberAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:policyNumberAuto</stringProp><stringProp name="Argument.value">${POLICYNUMBER}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PolicySearch.LM_SearchOption_Radio"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PolicySearch.LM_SearchOption_Radio</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:polNumSearchAuto_Choice</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:anyInjuryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:anyInjuryAuto</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossCategoryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossCategoryAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhone"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhone</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_M_Triage_Next_To_Basic_Information"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_9"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByFN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByFN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByLN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ReportedByLN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_3}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyType</stringProp><stringProp name="Argument.value">auto_per</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLWizard:Next</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyProviderType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:policyTypePageModeDV:PolicyProviderType</stringProp><stringProp name="Argument.value">liberty</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLWizard:Next_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:ScreenMode1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:ScreenMode1</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:ClaimMode"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:ClaimMode</stringProp><stringProp name="Argument.value">Auto</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossStateAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossStateAuto</stringProp><stringProp name="Argument.value">${STATE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:TriageAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:TriageAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:Claim_ReportedByType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:Claim_ReportedByType</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhoneExtn"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhoneExtn</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:policyNumberAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:policyNumberAuto</stringProp><stringProp name="Argument.value">${POLICYNUMBER}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PolicySearch.LM_SearchOption_Radio"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PolicySearch.LM_SearchOption_Radio</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:polNumSearchAuto_Choice</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:anyInjuryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:anyInjuryAuto</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossCategoryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:FNOLWizardFindPolicyPanelSet:PolicySearchSP:lossCategoryAuto</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhone"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizard_FindPolicyScreen:reportedByPhone</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-BASICINFORMATION"><stringProp name="TestPlan.comments">This section contains the BASICINFORMATION part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_N_Basic_Information_Select_Person"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_10"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:Claim_ReportedByType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:Claim_ReportedByType</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:Notification_ReportedDate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:Notification_ReportedDate</stringProp><stringProp name="Argument.value">${DATE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:HowReported"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:HowReported</stringProp><stringProp name="Argument.value">phone</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:ReportRecorded"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:ReportRecorded</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:ReportedBy_NameNew"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:ReportedBy_NameNew</stringProp><stringProp name="Argument.value">Person:${cPERSON}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:ReportedBy_NameNew</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:ReportedBy_NameNew</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_2}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:HiddenInsured"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:HiddenInsured</stringProp><stringProp name="Argument.value">Person:${cPERSON}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_O_Basic_Information_Next_To_Add_Claim_Information"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_11"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:Claim_ReportedByType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:Claim_ReportedByType</stringProp><stringProp name="Argument.value">self</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:Notification_ReportedDate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:Notification_ReportedDate</stringProp><stringProp name="Argument.value">${DATE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:HowReported"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:HowReported</stringProp><stringProp name="Argument.value">phone</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:ReportRecorded"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:ReportRecorded</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:ReportedBy_NameNew"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:ReportedBy_NameNew</stringProp><stringProp name="Argument.value">Person:${cPERSON}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLWizard:Next</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLWizard:Next_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:HiddenInsured"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:HiddenInsured</stringProp><stringProp name="Argument.value">Person:${cPERSON}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_2}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:EmailAllowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:EmailAllowed</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="17492420">Add claim information</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-ADDCLAIMINFORMATION"><stringProp name="TestPlan.comments">This section contains the ADDCLAIMINFORMATION part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_P_Add_Claim_Information_Loss_Category"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_12"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:anyInjuryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:anyInjuryAuto</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Address_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Address_Picker</stringProp><stringProp name="Argument.value">__new</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_3}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCategory"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCategory</stringProp><stringProp name="Argument.value">multiVehicleAccidentAuto</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Description</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCategory</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Fault"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Fault</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCategory</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:County"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:County</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:City"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:City</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:AddressLine2"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:AddressLine2</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:Claim_PermissionRequired"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:Claim_PermissionRequired</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Country"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Country</stringProp><stringProp name="Argument.value">US</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:PostalCode"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:PostalCode</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:AddressLine1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:AddressLine1</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_Q_Add_Claim_Information_Loss_Cause"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_13"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Fault"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Fault</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:anyInjuryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:anyInjuryAuto</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_3}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCategory"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCategory</stringProp><stringProp name="Argument.value">multiVehicleAccidentAuto</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCause</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCause"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCause</stringProp><stringProp name="Argument.value">headoncollision</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCause</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Description</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:County"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:County</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:City"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:City</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:AddressLine2"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:AddressLine2</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:AddressLine1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:AddressLine1</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:Claim_PermissionRequired"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:Claim_PermissionRequired</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Country"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Country</stringProp><stringProp name="Argument.value">US</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:PostalCode"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:PostalCode</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Address_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Address_Picker</stringProp><stringProp name="Argument.value">__new</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_R_Add_Claim_Information_Fault_Rating"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_14"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Fault"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Fault</stringProp><stringProp name="Argument.value">1</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:anyInjuryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:anyInjuryAuto</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:familiarArea"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:familiarArea</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:anyObstructions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:anyObstructions</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:insuredSpeed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:insuredSpeed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:numberOfLanes"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:numberOfLanes</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCategory"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCategory</stringProp><stringProp name="Argument.value">multiVehicleAccidentAuto</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:Claim_PermissionRequired"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:Claim_PermissionRequired</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCause"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCause</stringProp><stringProp name="Argument.value">headoncollision</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:otherVehicleDirection"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:otherVehicleDirection</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Description</stringProp><stringProp name="Argument.value">TP06</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:ctionAvoidAccident"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:ctionAvoidAccident</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:trafficControlsPresent"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:trafficControlsPresent</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:weatherConditions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:weatherConditions</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_3}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Fault</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Fault</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoDamageQuestions:DamageQuestionsAutoInputSet:vehicleDamageOtherProperty"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoDamageQuestions:DamageQuestionsAutoInputSet:vehicleDamageOtherProperty</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:County"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:County</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:City"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:City</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:AddressLine2"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:AddressLine2</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:AddressLine1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:AddressLine1</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoDamageQuestions:DamageQuestionsAutoInputSet:numberVehiclesInvolved"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoDamageQuestions:DamageQuestionsAutoInputSet:numberVehiclesInvolved</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Country"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Country</stringProp><stringProp name="Argument.value">US</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:PostalCode"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:PostalCode</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Address_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Address_Picker</stringProp><stringProp name="Argument.value">__new</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_S_Add_Claim_Information_Loss_Location"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_16"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"/></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_T_Add_Claim_Information_Click_Add_Vehicle"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_16"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Fault"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Fault</stringProp><stringProp name="Argument.value">1</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:FaultPercent"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:FaultPercent</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:Claim_PermissionRequired"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:Claim_PermissionRequired</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCategory"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCategory</stringProp><stringProp name="Argument.value">multiVehicleAccidentAuto</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCause"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCause</stringProp><stringProp name="Argument.value">headoncollision</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_3}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Description</stringProp><stringProp name="Argument.value">TP06</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:otherVehicleDirection"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:otherVehicleDirection</stringProp><stringProp name="Argument.value">straightahead</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:ctionAvoidAccident"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:ctionAvoidAccident</stringProp><stringProp name="Argument.value">appliedbrakes</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:familiarArea"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:familiarArea</stringProp><stringProp name="Argument.value">Yes</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:weatherConditions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:weatherConditions</stringProp><stringProp name="Argument.value">clear</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoDamageQuestions:DamageQuestionsAutoInputSet:vehicleDamageOtherProperty"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoDamageQuestions:DamageQuestionsAutoInputSet:vehicleDamageOtherProperty</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoDamageQuestions:DamageQuestionsAutoInputSet:numberVehiclesInvolved"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoDamageQuestions:DamageQuestionsAutoInputSet:numberVehiclesInvolved</stringProp><stringProp name="Argument.value">2</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Address_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Address_Picker</stringProp><stringProp name="Argument.value">Address:${cADDRESS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:anyObstructions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:anyObstructions</stringProp><stringProp name="Argument.value">blindspot</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:insuredSpeed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:insuredSpeed</stringProp><stringProp name="Argument.value">50</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:numberOfLanes"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:numberOfLanes</stringProp><stringProp name="Argument.value">two</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:trafficControlsPresent"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:trafficControlsPresent</stringProp><stringProp name="Argument.value">unknown</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AddVehicleButton</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:anyInjuryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:anyInjuryAuto</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AddVehicleButton_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="94207010">Vehicle Details</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-ADDVEHICLE"><stringProp name="TestPlan.comments">This section contains the ADDVEHICLE part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_W_Vehicle_Details_Select_Vehicle"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_17"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VehicleType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VehicleType</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style</stringProp><stringProp name="Argument.value">passengercar</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker</stringProp><stringProp name="Argument.value">Vehicle:${cVEHICLE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value">Person:${cPERSON}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_18"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:NoDriver_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker</stringProp><stringProp name="Argument.value">Vehicle:${cVEHICLE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value">Person:${cPERSON}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_19"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker</stringProp><stringProp name="Argument.value">Vehicle:${cVEHICLE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value">Person:${cPERSON}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_X_Vehicle_Details_Collision_Point"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_20"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value">10000</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker</stringProp><stringProp name="Argument.value">Vehicle:${cVEHICLE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value">Person:${cPERSON}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_21"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value">10000</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker</stringProp><stringProp name="Argument.value">Vehicle:${cVEHICLE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value">Person:${cPERSON}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value">AL</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value">12</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_Y_Vehicle_Details_Severity"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_22"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value">10000</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker</stringProp><stringProp name="Argument.value">Vehicle:${cVEHICLE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value">unknown</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value">Address:${cADDRESS2}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value">Person:${cPERSON}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value">12</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_Z_Vehicle_Details_Airbags_Deployed"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_23"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value">10000</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value">TP06</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker</stringProp><stringProp name="Argument.value">Vehicle:${cVEHICLE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value">TP06</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value">unknown</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value">Address:${cADDRESS2}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value">Person:${cPERSON}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value">12</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZA_Vehicle_Details_Vehicle_Operable"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_24"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value">10000</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value">TP06</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Operable"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Operable</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker</stringProp><stringProp name="Argument.value">Vehicle:${cVEHICLE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value">TP06</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value">unknown</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value">Address:${cADDRESS2}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value">Person:${cPERSON}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Operable_true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value">12</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Operable</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZB_Vehicle_Details_Add_Driver"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_25"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value">10000</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value">TP06</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Operable"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Operable</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker</stringProp><stringProp name="Argument.value">Vehicle:${cVEHICLE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value">TP06</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value">unknown</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value">Address:${cADDRESS2}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value">Person:${cPERSON}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value">12</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:OccupantLV_tb:AddDriverButton</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:OccupantLV_tb:AddDriverButton_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="23235480">Driver Details</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-ADDDRIVER"><stringProp name="TestPlan.comments">This section contains the ADDDRIVER part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZC_Driver_Details_Select_Person"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_26"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:Person"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:Person</stringProp><stringProp name="Argument.value">Person:${cPERSON}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:DriverRelationToOwner"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:DriverRelationToOwner</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:reason"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:reason</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLContactPopup:FNOLContactScreen:Person</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLContactPopup:FNOLContactScreen:Person</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZD_Driver_Details_Injured"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_27"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:reason"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:reason</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:InitialInjured"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:InitialInjured</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:Person"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:Person</stringProp><stringProp name="Argument.value">Person:${cPERSON}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:MedicareEligible"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:MedicareEligible</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:DriverRelationToOwner"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:DriverRelationToOwner</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLContactPopup:FNOLContactScreen:InitialInjured_option2</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLContactPopup:FNOLContactScreen:InitialInjured</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:SeekTreatment"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:SeekTreatment</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:ReceivedTreatment"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:ReceivedTreatment</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZE_Driver_Details_OK_To_Return_To_Vehicle_Details"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_28"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:reason"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:reason</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:InitialInjured"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:InitialInjured</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:Person"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:Person</stringProp><stringProp name="Argument.value">Person:${cPERSON}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:MedicareEligible"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:MedicareEligible</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:DriverRelationToOwner"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:DriverRelationToOwner</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLContactPopup:FNOLContactScreen:Update</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLContactPopup:FNOLContactScreen:Update_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:SeekTreatment"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:SeekTreatment</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:ReceivedTreatment"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:ReceivedTreatment</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="49833380">Involved Vehicle Information</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-THIRDPARTYVEHICLE"><stringProp name="TestPlan.comments">This section contains the THIRDPARTYVEHICLE part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZF_Vehicle_Details_OK_To_Return_To_Add_Claim_Information"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_29"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value">10000</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value">tp06</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Operable"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Operable</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker</stringProp><stringProp name="Argument.value">Vehicle:${cVEHICLE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value">TP06</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value">unknown</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value">Address:${cADDRESS2}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value">Person:${cPERSON}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value">12</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Update</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Update_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="99487452">Step 3 of 5: Add claim information</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZG_Add_Third_Party_Vehicle"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_30"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Fault"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Fault</stringProp><stringProp name="Argument.value">1</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:FaultPercent"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:FaultPercent</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:Claim_PermissionRequired"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:Claim_PermissionRequired</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCategory"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCategory</stringProp><stringProp name="Argument.value">multiVehicleAccidentAuto</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCause"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCause</stringProp><stringProp name="Argument.value">headoncollision</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_3}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Description</stringProp><stringProp name="Argument.value">TP06</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:otherVehicleDirection"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:otherVehicleDirection</stringProp><stringProp name="Argument.value">straightahead</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:ctionAvoidAccident"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:ctionAvoidAccident</stringProp><stringProp name="Argument.value">appliedbrakes</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:familiarArea"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:familiarArea</stringProp><stringProp name="Argument.value">Yes</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:weatherConditions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:weatherConditions</stringProp><stringProp name="Argument.value">clear</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoDamageQuestions:DamageQuestionsAutoInputSet:vehicleDamageOtherProperty"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoDamageQuestions:DamageQuestionsAutoInputSet:vehicleDamageOtherProperty</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoDamageQuestions:DamageQuestionsAutoInputSet:numberVehiclesInvolved"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoDamageQuestions:DamageQuestionsAutoInputSet:numberVehiclesInvolved</stringProp><stringProp name="Argument.value">2</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Address_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Address_Picker</stringProp><stringProp name="Argument.value">Address:${cADDRESS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:anyObstructions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:anyObstructions</stringProp><stringProp name="Argument.value">blindspot</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:insuredSpeed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:insuredSpeed</stringProp><stringProp name="Argument.value">50</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:numberOfLanes"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:numberOfLanes</stringProp><stringProp name="Argument.value">two</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:trafficControlsPresent"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:trafficControlsPresent</stringProp><stringProp name="Argument.value">unknown</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AddVehicleButton</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:anyInjuryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:anyInjuryAuto</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AddVehicleButton_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="3945067">Vehicle Details</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZI_Vehicle_Year"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_31"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year</stringProp><stringProp name="Argument.value">${YEAR}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style</stringProp><stringProp name="Argument.value">passengercar</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZJ_Vehicle_Make"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_32"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year</stringProp><stringProp name="Argument.value">${YEAR}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown</stringProp><stringProp name="Argument.value">${MAKE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style</stringProp><stringProp name="Argument.value">passengercar</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZK_Vehicle_Model"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_33"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year</stringProp><stringProp name="Argument.value">${YEAR}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown</stringProp><stringProp name="Argument.value">${MAKE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style</stringProp><stringProp name="Argument.value">passengercar</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown</stringProp><stringProp name="Argument.value">${MODEL}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-THIRDPARTYDRIVER"><stringProp name="TestPlan.comments">This section contains the THIRDPARTYDRIVER part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZL_Add_Third_Party_Driver"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_34"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year</stringProp><stringProp name="Argument.value">${YEAR}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown</stringProp><stringProp name="Argument.value">${MAKE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style</stringProp><stringProp name="Argument.value">passengercar</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker:ClaimNewCompanyContactPickerMenuItemSet:NewPersonOnlyPickerMenuItemSet_NewPersonMenuItem</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker:ClaimNewCompanyContactPickerMenuItemSet:NewPersonOnlyPickerMenuItemSet_NewPersonMenuItem_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown</stringProp><stringProp name="Argument.value">${MODEL}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZM_Enter_Third_Party_Driver_Details"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_35"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="renderViewRootOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">renderViewRootOnly</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_36"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=""><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name"/><stringProp name="Argument.value">true&amp;ajaxRequestInfo=%5B%7B%22viewRootId%22%3A%22NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3ACity%22%2C%22paramMap%22%3A%7B%22viewRootId%22%3A%22NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3ACity%22%2C%22argIds%22%3A%22%2CNewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3ACounty%2CNewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3AState%2CNewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3APostalCode%2CNewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3ACountry%22%2C%22query%22%3A%22${NEWCITY}%22%2C%22page%22%3A1%2C%22start%22%3A0%2C%22limit%22%3A25%2C%22additionalArgs%22%3A%5B%22%22%2C%22%22%2C%22%22%2C%22%22%2C%22US%22%5D%7D%7D%5D&amp;csrfToken=&amp;scrollPositions=%7B%22centerPanel%22%3A%7B%22left%22%3A0%2C%22top%22%3A109%7D%7D</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_37"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=""><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name"/><stringProp name="Argument.value">%5B%7B%22viewRootId%22%3A%22NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3ACity%22%2C%22paramMap%22%3A%7B%22postOnChangeTarget%22%3A%22NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%22%2C%22skipFocusOnPOC%22%3Atrue%7D%7D%5D&amp;TabBar%3AClaimTab%3AClaimTab_FindClaim=&amp;QuickJump=&amp;FNOLWizard%3A0_toggle=&amp;FNOLWizard%3A1_toggle=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APersonNameInputSet%3AFirstName=${RANDOMLETTERSFN}&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APersonNameInputSet%3AMiddleName=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APersonNameInputSet%3ALastName=${RANDOMLETTERSLN}&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APersonNameInputSet%3APrefix=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APersonNameInputSet%3ASuffix=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APersonNameInputSet%3AFormerName=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APersonNameInputSet%3ADeceasedIndEdit=false&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APersonContactInfoInputSet%3AEmailAllowed=false&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3AAddressLine1=${NEWSTREET}&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3AAddressLine2=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3ACity=${NEWCITY}&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3ACounty=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3AState=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3APostalCode=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3ACountry=US&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3AAddress_AddressType=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AuseInsuredAddressID=false&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AAdditionalInfoInputSet%3ATaxId1=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AAdditionalInfoInputSet%3ATaxFilingStatus=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AAdditionalInfoInputSet%3ADateOfBirth=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AAdditionalInfoInputSet%3AGender=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AAdditionalInfoInputSet%3AOccupation=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AAdditionalInfoInputSet%3AMaritalStatus=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AAdditionalInfoInputSet%3Adependants=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AAdditionalInfoInputSet%3AMedicareEligible=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AAdditionalInfoInputSet%3ADriversLicenseInfoInputSet%3ALicenseNumber=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AAdditionalInfoInputSet%3ADriversLicenseInfoInputSet%3ALicenseState=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3ANotes=&amp;%3Atblinks=${cTBLINKS_1_URL2}&amp;%3Atabs=${cTABS_URL2}&amp;infoBar=${cINFOBAR_4_URL2}&amp;FNOLWizard%3A0=${cFNOLWIZARD0_4_URL2}&amp;FNOLWizard%3A1=${cFNOLWIZARD1_URL2}&amp;csrfToken=&amp;scrollPositions=%7B%22centerPanel%22%3A%7B%22left%22%3A0%2C%22top%22%3A109%7D%7D</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_38"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=""><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name"/><stringProp name="Argument.value">&amp;QuickJump=&amp;FNOLWizard%3A0_toggle=&amp;FNOLWizard%3A1_toggle=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APersonNameInputSet%3AFirstName=${RANDOMLETTERSFN}&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APersonNameInputSet%3AMiddleName=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APersonNameInputSet%3ALastName=${RANDOMLETTERSLN}&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APersonNameInputSet%3APrefix=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APersonNameInputSet%3ASuffix=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APersonNameInputSet%3AFormerName=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APersonNameInputSet%3ADeceasedIndEdit=false&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APersonContactInfoInputSet%3AEmailAllowed=false&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3AAddressLine1=${NEWSTREET}&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3AAddressLine2=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3ACity=${NEWCITY}&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3ACounty=${NEWCOUNTY}&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3AState=${NEWADDRESSSTATE}&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3APostalCode=${cPOSTALCODE}&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3ACountry=US&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3APrimaryAddressInputSet%3ACCAddressInputSet%3AglobalAddressContainer%3AglobalAddress%3AGlobalAddressInputSet%3AAddress_AddressType=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AuseInsuredAddressID=false&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AAdditionalInfoInputSet%3ATaxId1=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AAdditionalInfoInputSet%3ATaxFilingStatus=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AAdditionalInfoInputSet%3ADateOfBirth=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AAdditionalInfoInputSet%3AGender=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AAdditionalInfoInputSet%3AOccupation=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AAdditionalInfoInputSet%3AMaritalStatus=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AAdditionalInfoInputSet%3Adependants=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AAdditionalInfoInputSet%3AMedicareEligible=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AAdditionalInfoInputSet%3ADriversLicenseInfoInputSet%3ALicenseNumber=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3AAdditionalInfoInputSet%3ADriversLicenseInfoInputSet%3ALicenseState=&amp;NewContactPopup%3AContactDetailScreen%3AContactBasicsDV%3ANotes=&amp;%3Atblinks=${cTBLINKS_1_URL2}&amp;%3Atabs=${cTABS_URL2}&amp;infoBar=${cINFOBAR_4_URL2}&amp;FNOLWizard%3A0=${cFNOLWIZARD0_4_URL2}&amp;FNOLWizard%3A1=${cFNOLWIZARD1_URL2}&amp;csrfToken=&amp;eventSource=NewContactPopup%3AContactDetailScreen%3AContactBasicsDV_tb%3AContactDetailToolbarButtonSet%3AToolbarButton_act&amp;objFocusId=NewContactPopup%3AContactDetailScreen%3AContactBasicsDV_tb%3AContactDetailToolbarButtonSet%3AToolbarButton</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZN_Address_Cleansing_Click_User_Defined"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_40"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="AddressCleansingPopup:AddressCleansingScreen:AddressCleansingDV:overridereasinid"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">AddressCleansingPopup:AddressCleansingScreen:AddressCleansingDV:overridereasinid</stringProp><stringProp name="Argument.value">TP06</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">AddressCleansingPopup:AddressCleansingScreen:ToolbarButtonid</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">AddressCleansingPopup:AddressCleansingScreen:ToolbarButtonid_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZO_Impact_Point"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_41"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year</stringProp><stringProp name="Argument.value">2004</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown</stringProp><stringProp name="Argument.value">HOND</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style</stringProp><stringProp name="Argument.value">passengercar</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value">12</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value">Person:-${cPERSON_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown</stringProp><stringProp name="Argument.value">ACCORD</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZP_Severity"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_42"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year</stringProp><stringProp name="Argument.value">2004</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown</stringProp><stringProp name="Argument.value">HOND</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value">unknown</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style</stringProp><stringProp name="Argument.value">passengercar</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value">12</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value">Person:-${cPERSON_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown</stringProp><stringProp name="Argument.value">ACCORD</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZQ_Airbags"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_43"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year</stringProp><stringProp name="Argument.value">2004</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown</stringProp><stringProp name="Argument.value">HOND</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value">TP06</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value">unknown</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style</stringProp><stringProp name="Argument.value">passengercar</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value">12</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value">Person:-${cPERSON_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown</stringProp><stringProp name="Argument.value">ACCORD</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZR_Vehicle_Operable"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_44"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year</stringProp><stringProp name="Argument.value">2004</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown</stringProp><stringProp name="Argument.value">HOND</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Operable"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Operable</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value">TP06</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value">unknown</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style</stringProp><stringProp name="Argument.value">passengercar</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value">12</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Operable_true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Operable</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value">Person:-${cPERSON_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown</stringProp><stringProp name="Argument.value">ACCORD</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZS_Add_Third_Party_Driver"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_45"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year</stringProp><stringProp name="Argument.value">2004</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown</stringProp><stringProp name="Argument.value">HOND</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Operable"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Operable</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value">TP06</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value">unknown</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style</stringProp><stringProp name="Argument.value">passengercar</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value">12</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:OccupantLV_tb:AddDriverButton</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:OccupantLV_tb:AddDriverButton_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value">Person:-${cPERSON_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown</stringProp><stringProp name="Argument.value">ACCORD</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZT_Select_Driver"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_46"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:Person"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:Person</stringProp><stringProp name="Argument.value">Person:-${cPERSON_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:DriverRelationToOwner"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:DriverRelationToOwner</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:reason"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:reason</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLContactPopup:FNOLContactScreen:Person</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLContactPopup:FNOLContactScreen:Person</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZU_Relation_To_Insured"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_47"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:MedicareEligible"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:MedicareEligible</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:DriverRelationToOwner"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:DriverRelationToOwner</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLContactPopup:FNOLContactScreen:Claim_ReportedByType</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:Person"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:Person</stringProp><stringProp name="Argument.value">Person:-${cPERSON_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:relationToInsured"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:relationToInsured</stringProp><stringProp name="Argument.value">other</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:Claim_ReportedByType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:Claim_ReportedByType</stringProp><stringProp name="Argument.value">other</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLContactPopup:FNOLContactScreen:Claim_ReportedByType</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:SeekTreatment"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:SeekTreatment</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:ReceivedTreatment"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:ReceivedTreatment</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:reason"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:reason</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZV_Injured_No"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_48"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:MedicareEligible"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:MedicareEligible</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:DriverRelationToOwner"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:DriverRelationToOwner</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:Person"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:Person</stringProp><stringProp name="Argument.value">Person:-${cPERSON_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:relationToInsured"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:relationToInsured</stringProp><stringProp name="Argument.value">other</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:Claim_ReportedByType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:Claim_ReportedByType</stringProp><stringProp name="Argument.value">other</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLContactPopup:FNOLContactScreen:InitialInjured_option2</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLContactPopup:FNOLContactScreen:InitialInjured</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:InitialInjured"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:InitialInjured</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:reason"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:reason</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZW_OK_Return_To_Vehicle_Details"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_49"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:MedicareEligible"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:MedicareEligible</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:DriverRelationToOwner"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:DriverRelationToOwner</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:Person"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:Person</stringProp><stringProp name="Argument.value">Person:-${cPERSON_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:relationToInsured"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:relationToInsured</stringProp><stringProp name="Argument.value">other</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:Claim_ReportedByType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:Claim_ReportedByType</stringProp><stringProp name="Argument.value">other</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLContactPopup:FNOLContactScreen:Update</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLContactPopup:FNOLContactScreen:Update_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:InitialInjured"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:InitialInjured</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="scrollPositions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">scrollPositions</stringProp><stringProp name="Argument.value">${\"centerPanel\":${\"left\":</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:reason"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:reason</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZX_Ok_Vehicle"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_50"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year</stringProp><stringProp name="Argument.value">${YEAR}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown</stringProp><stringProp name="Argument.value">${MAKE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Operable"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Operable</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value">TP06</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value">unknown</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style</stringProp><stringProp name="Argument.value">passengercar</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value">12</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Update</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Update_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value">Person:-${cPERSON_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown</stringProp><stringProp name="Argument.value">${MODEL}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_51"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year</stringProp><stringProp name="Argument.value">${YEAR}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown</stringProp><stringProp name="Argument.value">${MAKE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value">TP06</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value">unknown</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value">12</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style</stringProp><stringProp name="Argument.value">passengercar</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Operable"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Operable</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:TotalLoss"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:TotalLoss</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value">10000</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value">Person:-${cPERSON_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown</stringProp><stringProp name="Argument.value">${MODEL}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_52"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year</stringProp><stringProp name="Argument.value">${YEAR}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown</stringProp><stringProp name="Argument.value">${MAKE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Operable"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Operable</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value">TP06</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value">unknown</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style</stringProp><stringProp name="Argument.value">passengercar</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value">12</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:childSafetySeatQuestionsInputSet:ChildSafetySeatQuestionsInputSet:safetySeatInVehicle</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Update</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value">10000</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Update_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value">Person:-${cPERSON_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown</stringProp><stringProp name="Argument.value">${MODEL}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-SERVICES"><stringProp name="TestPlan.comments">This section contains the SERVICES part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZY_Next_To_Sevices"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_53"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Fault"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Fault</stringProp><stringProp name="Argument.value">1</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:FaultPercent"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:FaultPercent</stringProp><stringProp name="Argument.value">100</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:Claim_PermissionRequired"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:Claim_PermissionRequired</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCategory"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCategory</stringProp><stringProp name="Argument.value">multiVehicleAccidentAuto</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCause"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCause</stringProp><stringProp name="Argument.value">headoncollision</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_3}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Description</stringProp><stringProp name="Argument.value">TP06</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:otherVehicleDirection"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:otherVehicleDirection</stringProp><stringProp name="Argument.value">straightahead</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:ctionAvoidAccident"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:ctionAvoidAccident</stringProp><stringProp name="Argument.value">appliedbrakes</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:familiarArea"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:familiarArea</stringProp><stringProp name="Argument.value">Yes</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:weatherConditions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:weatherConditions</stringProp><stringProp name="Argument.value">clear</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoDamageQuestions:DamageQuestionsAutoInputSet:vehicleDamageOtherProperty"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoDamageQuestions:DamageQuestionsAutoInputSet:vehicleDamageOtherProperty</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoDamageQuestions:DamageQuestionsAutoInputSet:numberVehiclesInvolved"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoDamageQuestions:DamageQuestionsAutoInputSet:numberVehiclesInvolved</stringProp><stringProp name="Argument.value">2</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Address_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Address_Picker</stringProp><stringProp name="Argument.value">Address:${cADDRESS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:anyObstructions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:anyObstructions</stringProp><stringProp name="Argument.value">blindspot</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:insuredSpeed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:insuredSpeed</stringProp><stringProp name="Argument.value">50</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:numberOfLanes"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:numberOfLanes</stringProp><stringProp name="Argument.value">two</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:trafficControlsPresent"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:AutoAdditionalDamageQuestions:DamageQuestionsAutoAdditionalInputSet:trafficControlsPresent</stringProp><stringProp name="Argument.value">unknown</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:anyInjuryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:anyInjuryAuto</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLWizard:Next</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLWizard:Next_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZZB_Services_Next_To_Assign_Claim"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_54"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_5}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLWizard:Next</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLWizard:Next_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="24393819">Save and Assign Claim</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-ASSIGNCLAIM"><stringProp name="TestPlan.comments">This section contains the ASSIGNCLAIM part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZZC_Finish"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_55"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_AssignSaveScreen:Note"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_AssignSaveScreen:Note</stringProp><stringProp name="Argument.value">TP06</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLWizard:Finish</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLWizard:Finish_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_6}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="16060895">Set Expectations</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-VIEWNEWCLAIM"><stringProp name="TestPlan.comments">This section contains the VIEWNEWCLAIM part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZZD_View_Claim_Summary_Information"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_56"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">NewClaimSaved:NewClaimSavedScreen:NewClaimSavedDV:GoToTheClaim_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ClaimMessageNew:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ClaimMessageNew:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_5}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="ClaimMessageNew:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">ClaimMessageNew:MenuLinks</stringProp><stringProp name="Argument.value">${cCLAIMMESSAGENEWMENULINKS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">NewClaimSaved:NewClaimSavedScreen:NewClaimSavedDV:GoToTheClaim</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="60824496">Summary</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-LOSSDETAILS"><stringProp name="TestPlan.comments">This section contains the LOSSDETAILS part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZZE_Summary_Loss_Details"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_57"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${cCLAIMMENULINKS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_6}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">Claim:MenuLinks:Claim_ClaimLossDetailsGroup:ClaimLossDetailsGroup_ClaimLossDetails_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="81237464">Loss Details</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZZF_Loss_Details_Click_Vehicle_Make"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_58"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${cCLAIMMENULINKS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_6}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">ClaimLossDetails:ClaimLossDetailsScreen:LossDetailsPanelSet:LossDetailsCardCV:LossDetailsDV:EditableVehicleIncidentsLV:0:Make</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">ClaimLossDetails:ClaimLossDetailsScreen:LossDetailsPanelSet:LossDetailsCardCV:LossDetailsDV:EditableVehicleIncidentsLV:0:Make_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="64075065">Vehicle Incident</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZZG_Vehicle_Incident_Click_Driver_Name"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_59"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">VehicleIncidentPopup:EditVehicleIncidentScreen:VehicleIncidentDetailsPanelSet:InvolvedVehiclePanelSet:OccupantLV:0:name_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_6}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${cCLAIMMENULINKS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">VehicleIncidentPopup:EditVehicleIncidentScreen:VehicleIncidentDetailsPanelSet:InvolvedVehiclePanelSet:OccupantLV:0:name</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="75512269">Driver Details</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-DRIVERDETAILS"><stringProp name="TestPlan.comments">This section contains the DRIVERDETAILS part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZZH_Driver_Details_Click_Edit"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_60"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">PostFNOLContactPopup:FNOLContactScreen:Edit_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_6}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${cCLAIMMENULINKS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">PostFNOLContactPopup:FNOLContactScreen:Edit</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZZI_Driver_Details_Injured"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_61"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="PostFNOLContactPopup:FNOLContactScreen:ContactDV:DriverRelationToOwner"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PostFNOLContactPopup:FNOLContactScreen:ContactDV:DriverRelationToOwner</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PostFNOLContactPopup:FNOLContactScreen:ContactDV:reason"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PostFNOLContactPopup:FNOLContactScreen:ContactDV:reason</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PostFNOLContactPopup:FNOLContactScreen:ContactDV:DriverPickUp"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PostFNOLContactPopup:FNOLContactScreen:ContactDV:DriverPickUp</stringProp><stringProp name="Argument.value">Person:${cPERSON}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PostFNOLContactPopup:FNOLContactScreen:ContactDV:InsuredRelation"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PostFNOLContactPopup:FNOLContactScreen:ContactDV:InsuredRelation</stringProp><stringProp name="Argument.value">self</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PostFNOLContactPopup:FNOLContactScreen:ContactDV:ReporterRelation"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PostFNOLContactPopup:FNOLContactScreen:ContactDV:ReporterRelation</stringProp><stringProp name="Argument.value">self</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PostFNOLContactPopup:FNOLContactScreen:ContactDV:MedicareEligible"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PostFNOLContactPopup:FNOLContactScreen:ContactDV:MedicareEligible</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">PostFNOLContactPopup:FNOLContactScreen:ContactDV:InjuredBoolean_true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventParam"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventParam</stringProp><stringProp name="Argument.value">PostFNOLContactPopup:FNOLContactScreen:ContactDV:InjuredBoolean</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PostFNOLContactPopup:FNOLContactScreen:ContactDV:ReceivedTreatment"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PostFNOLContactPopup:FNOLContactScreen:ContactDV:ReceivedTreatment</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PostFNOLContactPopup:FNOLContactScreen:ContactDV:SoughtTreatment"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PostFNOLContactPopup:FNOLContactScreen:ContactDV:SoughtTreatment</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">_refresh_</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${cCLAIMMENULINKS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_6}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PostFNOLContactPopup:FNOLContactScreen:ContactDV:InjuredBoolean"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PostFNOLContactPopup:FNOLContactScreen:ContactDV:InjuredBoolean</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZZJ_Driver_Details_Click_Update"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_62"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=""><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name"/><stringProp name="Argument.value">&amp;QuickJump=&amp;Claim%3AMenuLinks_toggle=&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3ADriverPickUp=Person%3A${cPERSON}&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3AInsuredRelation=self&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3AReporterRelation=self&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3AMedicareEligible=Unknown&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3ADriverRelationToOwner=&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3Areason=&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3AInjuredBoolean=true&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3ADetailedInjuryType=97&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3AInjuryDescription=Cut%20Hand&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3ASoughtTreatment=No&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3AReceivedTreatment=No&amp;%3Atblinks=${cTBLINKS_1_URL2}&amp;%3Atabs=${cTABS_1_URL2}&amp;infoBar=${cINFOBAR_6_URL2}&amp;Claim%3AMenuLinks=${cCLAIMMENULINKS_URL2}&amp;csrfToken=&amp;eventSource=_refresh_&amp;eventParam=PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3AMedicareEligible&amp;objFocusId=PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3AMedicareEligible</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="64161518">Vehicle Incident</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_63"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=""><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name"/><stringProp name="Argument.value">&amp;QuickJump=&amp;Claim%3AMenuLinks_toggle=&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3ADriverPickUp=Person%3A${cPERSON}&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3AInsuredRelation=self&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3AReporterRelation=self&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3AMedicareEligible=Unknown&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3ADriverRelationToOwner=&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3Areason=&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3AInjuredBoolean=true&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3ADetailedInjuryType=97&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3AInjuryDescription=Cut%20Hand&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3ASoughtTreatment=No&amp;PostFNOLContactPopup%3AFNOLContactScreen%3AContactDV%3AReceivedTreatment=No&amp;%3Atblinks=${cTBLINKS_1_URL2}&amp;%3Atabs=${cTABS_1_URL2}&amp;infoBar=${cINFOBAR_6_URL2}&amp;Claim%3AMenuLinks=${cCLAIMMENULINKS_URL2}&amp;csrfToken=&amp;eventSource=PostFNOLContactPopup%3AFNOLContactScreen%3AUpdate_act&amp;objFocusId=PostFNOLContactPopup%3AFNOLContactScreen%3AUpdate</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZZK_Vehicle_Incident_OK_To_Loss_Details"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_64"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">VehicleIncidentPopup:__crumb___act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_6}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${cCLAIMMENULINKS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">VehicleIncidentPopup:__crumb__</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="89972919">Loss Details</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZZL_Loss_Details_Return_To_Summary"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_65"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${cCLAIMMENULINKS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_6}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">Claim:MenuLinks:Claim_ClaimSummaryGroup:ClaimSummaryGroup_ClaimSummary_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="8530963">Summary</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-CANCELCLAIMBASICINFORMATION"><stringProp name="TestPlan.comments">This section contains the CANCELCLAIMBASICINFORMATION part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_Cancel_Claim_Basic_Information"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_10"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:Claim_ReportedByType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:Claim_ReportedByType</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:Notification_ReportedDate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:Notification_ReportedDate</stringProp><stringProp name="Argument.value">${DATE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:HowReported"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:HowReported</stringProp><stringProp name="Argument.value">phone</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:ReportRecorded"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:ReportRecorded</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:ReportedBy_NameNew"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:ReportedBy_NameNew</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLWizard:Cancel</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLWizard:Cancel_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">cFNOLWIZARD1_1</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_2}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:HiddenInsured"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_BasicInfoScreen:PanelRow:NewClaimPeopleDV:HiddenInsured</stringProp><stringProp name="Argument.value">Person:${PERSON}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="20189365">Activities</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-CANCELCLAIMADDCLAIMINFORMATION"><stringProp name="TestPlan.comments">This section contains the CANCELCLAIMADDCLAIMINFORMATION part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_Cancel_Claim_Add_Claim_Information"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_13"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:anyInjuryAuto"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:anyInjuryAuto</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Address_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Address_Picker</stringProp><stringProp name="Argument.value">__new</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLWizard:Cancel_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_3}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCategory"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Claim_LossCategory</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Description</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Fault"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:Fault</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLWizard:Cancel</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:County"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:County</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:City"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:City</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:AddressLine2"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:AddressLine2</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:Claim_PermissionRequired"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:Claim_PermissionRequired</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Country"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:Country</stringProp><stringProp name="Argument.value">US</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:PostalCode"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:PostalCode</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:AddressLine1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_NewLossDetailScreen:LossDetailsPanel:FNOLWizard_NewLossDetailsPanelSet:LossDetailsAddressDV:AddressDetailInputSetRef:CCAddressInputSet:globalAddressContainer:globalAddress:GlobalAddressInputSet:AddressLine1</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="69060669">Activities</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-CANCELCLAIMSERVICES"><stringProp name="TestPlan.comments">This section contains the CANCELCLAIMSERVICES part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_Cancel_Claim_Services"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_31"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_5}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${CTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLWizard:Cancel</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLWizard:Cancel_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="81004176">Activities</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-CANCELCLAIMSAVEANDASSIGN"><stringProp name="TestPlan.comments">This section contains the CANCELCLAIMSAVEANDASSIGN part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_Cancel_Claim_Save_And_Assign"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_64"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLMenuActions</stringProp><stringProp name="Argument.value">${cFNOLMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:FNOLWizardStepSet:FNOLWizard_AssignSaveScreen:Note"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:FNOLWizardStepSet:FNOLWizard_AssignSaveScreen:Note</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLWizard:Cancel</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLWizard:Cancel_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_6}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="142182">Activities</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 0"><stringProp name="TestPlan.comments">This transaction will wait for 0 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">0</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 0s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-DRIVERDETAILSCANCEL"><stringProp name="TestPlan.comments">This section contains the DRIVERDETAILSCANCEL part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_Driver_Details_Click_Cancel"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_74"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="PostFNOLContactPopup:FNOLContactScreen:ContactDV:DriverRelationToOwner"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PostFNOLContactPopup:FNOLContactScreen:ContactDV:DriverRelationToOwner</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PostFNOLContactPopup:FNOLContactScreen:ContactDV:reason"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PostFNOLContactPopup:FNOLContactScreen:ContactDV:reason</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PostFNOLContactPopup:FNOLContactScreen:ContactDV:DriverPickUp"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PostFNOLContactPopup:FNOLContactScreen:ContactDV:DriverPickUp</stringProp><stringProp name="Argument.value">Person:${cPERSON}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PostFNOLContactPopup:FNOLContactScreen:ContactDV:InsuredRelation"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PostFNOLContactPopup:FNOLContactScreen:ContactDV:InsuredRelation</stringProp><stringProp name="Argument.value">self</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PostFNOLContactPopup:FNOLContactScreen:ContactDV:ReporterRelation"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PostFNOLContactPopup:FNOLContactScreen:ContactDV:ReporterRelation</stringProp><stringProp name="Argument.value">self</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PostFNOLContactPopup:FNOLContactScreen:ContactDV:MedicareEligible"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PostFNOLContactPopup:FNOLContactScreen:ContactDV:MedicareEligible</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">PostFNOLContactPopup:FNOLContactScreen:Cancel</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PostFNOLContactPopup:FNOLContactScreen:ContactDV:ReceivedTreatment"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PostFNOLContactPopup:FNOLContactScreen:ContactDV:ReceivedTreatment</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PostFNOLContactPopup:FNOLContactScreen:ContactDV:SoughtTreatment"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PostFNOLContactPopup:FNOLContactScreen:ContactDV:SoughtTreatment</stringProp><stringProp name="Argument.value">No</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">PostFNOLContactPopup:FNOLContactScreen:Cancel_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${cCLAIMMENULINKS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_6}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="PostFNOLContactPopup:FNOLContactScreen:ContactDV:InjuredBoolean"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">PostFNOLContactPopup:FNOLContactScreen:ContactDV:InjuredBoolean</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-RETURNTOADDCLAIMINFO"><stringProp name="TestPlan.comments">This section contains the RETURNTOADDCLAIMINFO part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_Vehicle_Details_Return_To_Add_Claim_Info"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_23"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VehicleType"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VehicleType</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Style</stringProp><stringProp name="Argument.value">passengercar</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Description</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:SeverityOfDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:collPoint</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:existingEstimate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:LossParty</stringProp><stringProp name="Argument.value">true</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:incidentOnly</stringProp><stringProp name="Argument.value">false</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:PreExistingDamage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Picker</stringProp><stringProp name="Argument.value">Vehicle:${cVEHICLE}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Exposure_AirbagsDeployed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:storageFeesCharged</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:VehicleLocDuringBusHrs_RangeInput</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:__crumb__</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLVehicleIncidentPopup:__crumb___act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:vehicleTowed</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Color</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Model_Dropdown</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Make_Dropdown</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Year</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Owner_Picker</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_State</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_LicensePlate</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_Mileage</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLVehicleIncidentPopup:FNOLVehicleIncidentScreen:Vehicle_VIN</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="9857145">Add claim information</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-RETURNTODESKTOP"><stringProp name="TestPlan.comments">This section contains the RETURNTODESKTOP part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_Return_To_Desktop"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_66"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name="Claim:MenuLinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks</stringProp><stringProp name="Argument.value">${cCLAIMMENULINKS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:MenuLinks_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:MenuLinks_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_6}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="Claim:ClaimMenuActions"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">Claim:ClaimMenuActions</stringProp><stringProp name="Argument.value">${cCLAIMMENUACTIONS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">TabBar:DesktopTab</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">TabBar:DesktopTab_act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="62621487">My activities today</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-RETURNTOVEHICLEDETAILS"><stringProp name="TestPlan.comments">This section contains the RETURNTOVEHICLEDETAILS part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_Driver_Details_Return_To_Vehicle_Details"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_29"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=":tblinks"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tblinks</stringProp><stringProp name="Argument.value">${cTBLINKS_1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name=":tabs"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">:tabs</stringProp><stringProp name="Argument.value">${cTABS}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="TabBar:ClaimTab:ClaimTab_FindClaim"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">TabBar:ClaimTab:ClaimTab_FindClaim</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="QuickJump"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">QuickJump</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1_toggle"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1_toggle</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:Person"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:Person</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:DriverRelationToOwner"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:DriverRelationToOwner</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLContactPopup:FNOLContactScreen:reason"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLContactPopup:FNOLContactScreen:reason</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="eventSource"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">eventSource</stringProp><stringProp name="Argument.value">FNOLContactPopup:__crumb___act</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="csrfToken"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">csrfToken</stringProp><stringProp name="Argument.value"/><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:1"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:1</stringProp><stringProp name="Argument.value">${cFNOLWIZARD1}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="FNOLWizard:0"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">FNOLWizard:0</stringProp><stringProp name="Argument.value">${cFNOLWIZARD0_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="objFocusId"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">objFocusId</stringProp><stringProp name="Argument.value">FNOLContactPopup:__crumb__</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp><elementProp elementType="HTTPArgument" name="infoBar"><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name">infoBar</stringProp><stringProp name="Argument.value">${cINFOBAR_4}</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="73381856">Vehicle Details</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="ThinkTime - 10"><stringProp name="TestPlan.comments">This transaction will wait for 10 seconds</stringProp></GenericController><hashTree><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime"><stringProp name="ConstantTimer.delay">10000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 10s x 1000</stringProp></ConstantTimer><hashTree/></hashTree></hashTree></hashTree><GenericController enabled="true" guiclass="LogicControllerGui" testclass="GenericController" testname="-LOGOUT"><stringProp name="TestPlan.comments">This section contains the LOGOUT part of Loadrunner</stringProp></GenericController><hashTree><TransactionController enabled="true" guiclass="TransactionControllerGui" testclass="TransactionController" testname="CNG_TP06_ZZL_Logout"><boolProp name="TransactionController.includeTimers">false</boolProp><boolProp name="TransactionController.parent">true</boolProp></TransactionController><hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimCenter.do_132"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"><elementProp elementType="HTTPArgument" name=""><boolProp name="HTTPArgument.always_encode">false</boolProp><stringProp name="Argument.name"/><stringProp name="Argument.value">&amp;QuickJump=&amp;Desktop%3AMenuLinks_toggle=&amp;DesktopActivities%3ADesktopActivitiesScreen%3ADesktopActivitiesLV%3ADesktopActivitiesFilter=AndFilter%2FMy%20activities%20today&amp;%3Atblinks=${cTBLINKS_URL2}&amp;%3Atabs=${cTABS_URL2}&amp;Desktop%3ADesktopMenuActions=${cDESKTOPMENUACTIONS_URL2}&amp;Desktop%3AMenuLinks=${cDESKTOPMENULINKS_URL2}&amp;csrfToken=&amp;eventSource=TabBar%3ALogoutTabBarLink_act&amp;objFocusId=TabBar%3ALogoutTabBarLink</stringProp><stringProp name="Argument.metadata">=</stringProp><boolProp name="HTTPArgument.use_equals">true</boolProp></elementProp></collectionProp></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/cc/ClaimCenter.do</stringProp><stringProp name="HTTPSampler.method">POST</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/><ResponseAssertion enabled="true" guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion"><collectionProp name="Asserion.test_strings"><stringProp name="39378894">GENERAL_MSG_CAT_SSL_ERROR</stringProp></collectionProp><stringProp name="Assertion.test_field">Assertion.response_data</stringProp><boolProp name="Assertion.assume_success">false</boolProp><intProp name="Assertion.test_type">16</intProp></ResponseAssertion><hashTree/></hashTree><HTTPSamplerProxy enabled="true" guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PMClaimCenterLogout.fcc"><elementProp elementType="Arguments" enabled="true" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments"><collectionProp name="Arguments.arguments"/></elementProp><stringProp name="HTTPSampler.domain"/><stringProp name="HTTPSampler.port"/><stringProp name="HTTPSampler.connect_timeout"/><stringProp name="HTTPSampler.response_timeout"/><stringProp name="HTTPSampler.protocol">https</stringProp><stringProp name="HTTPSampler.contentEncoding"/><stringProp name="HTTPSampler.path">${SERVER}/LMAuth/PMClaimCenterLogout.fcc</stringProp><stringProp name="HTTPSampler.method">Get</stringProp><boolProp name="HTTPSampler.follow_redirects">true</boolProp><boolProp name="HTTPSampler.auto_redirects">false</boolProp><boolProp name="HTTPSampler.use_keepalive">true</boolProp><boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp><stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp><boolProp name="HTTPSampler.image_parser">true</boolProp><boolProp name="HTTPSampler.monitor">false</boolProp><stringProp name="HTTPSampler.embedded_url_re"/></HTTPSamplerProxy><hashTree><HeaderManager enabled="true" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager"><collectionProp name="HeaderManager.headers"><elementProp elementType="Header" name="Accept-Language"/><elementProp elementType="Header" name="Accept-Language"><stringProp name="Header.name">DNT</stringProp><stringProp name="Header.value">1</stringProp></elementProp></collectionProp></HeaderManager><hashTree/></hashTree></hashTree></hashTree></hashTree><UserParameters enabled="true" guiclass="UserParametersGui" testclass="UserParameters" testname="User Defined Parameters"><boolProp name="UserParameters.per_iteration">false</boolProp><collectionProp name="UserParameters.names"/><collectionProp name="UserParameters.thread_values"><collectionProp name="4.072283471732536E7"/></collectionProp><stringProp name="TestPlan.comments"/></UserParameters><hashTree/><ConstantTimer enabled="true" guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Pacing"><stringProp name="ConstantTimer.delay">20000</stringProp><stringProp name="TestPlan.comments">   Converting seconds to milliseconds - 20s x 1000</stringProp></ConstantTimer><hashTree/><CookieManager enabled="true" guiclass="CookiePanel" testclass="CookieManager" testname="CookieManager"><collectionProp name="CookieManager.cookies"/><boolProp name="CookieManager.clearEachIteration">false</boolProp></CookieManager><hashTree/><CacheManager enabled="true" guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager"><boolProp name="clearEachIteration">false</boolProp><boolProp name="useExpires">false</boolProp></CacheManager><hashTree/><CSVDataSet enabled="true" guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config"><stringProp name="delimiter">,</stringProp><stringProp name="fileEncoding"/><stringProp name="filename">TP06a.csv</stringProp><boolProp name="quotedData">false</boolProp><boolProp name="recycle">false</boolProp><stringProp name="shareMode.all">shareMode</stringProp><boolProp name="stopThread">false</boolProp><stringProp name="variableNames"/></CSVDataSet><hashTree/><CSVDataSet enabled="true" guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config"><stringProp name="delimiter">,</stringProp><stringProp name="fileEncoding"/><stringProp name="filename">nNumbers.csv</stringProp><boolProp name="quotedData">false</boolProp><boolProp name="recycle">false</boolProp><stringProp name="shareMode.all">shareMode</stringProp><boolProp name="stopThread">false</boolProp><stringProp name="variableNames"/></CSVDataSet><hashTree/><ResultCollector enabled="true" guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report"><boolProp name="ResultCollector.error_logging">false</boolProp><objProp><name>saveConfig</name><value class="SampleSaveConfiguration"><time>true</time><latency>true</latency><timestamp>true</timestamp><success>true</success><label>true</label><code>true</code><message>true</message><threadName>true</threadName><dataType>true</dataType><assertions>true</assertions><subresults>true</subresults><bytes>true</bytes><threadCounts>true</threadCounts><encoding>false</encoding><responseData>false</responseData><samplerData>false</samplerData><xml>false</xml><fieldNames>false</fieldNames><responseHeaders>false</responseHeaders><requestHeaders>false</requestHeaders><responseDataOnError>false</responseDataOnError><saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage><assertionsResultsToSave>0</assertionsResultsToSave></value></objProp><stringProp name="filename">SummReport_CNG_TP06_FNOL_Auto_Add_Bodily_Injury_To_Existing_Claim.csv</stringProp></ResultCollector><hashTree/></hashTree></hashTree></hashTree></jmeterTestPlan>