<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="TF_CNG_TP113_eService_FNOL_Hit_Stationary_Object" enabled="true"/>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">true</boolProp>
          <boolProp name="useExpires">false</boolProp>
        </CacheManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="TP113 - CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP113_eService_FNOL_Hit_Stationary_Object${PATH_SEP}TP113.csv</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode.all">shareMode</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">POLICY_NUMBER,POL_EFF_DATE,POL_EXP_DATE</stringProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <stringProp name="TestPlan.comments">POLICY_NUMBER,POL_EFF_DATE,POL_EXP_DATE</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="VEHICLE.csv - CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">${test_path}..${PATH_SEP}Scripts${PATH_SEP}JMX_CNG_TP113_eService_FNOL_Hit_Stationary_Object${PATH_SEP}VEHICLE.csv</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode.all">shareMode</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">MAKE,MODEL,YEAR,LICENSE_PLATE,VEHICLE_STATE</stringProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <stringProp name="TestPlan.comments">MAKE,MODEL,YEAR,LICENSE_PLATE,VEHICLE_STATE</stringProp>
        </CSVDataSet>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="ThinkTime" enabled="true">
          <stringProp name="ConstantTimer.delay">${CNG_TP113_eService_FNOL_Hit_Stationary_Object_ThinkTime}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="PacingTime" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${CNG_TP113_eService_FNOL_Hit_Stationary_Object_Pacing}</stringProp>
        </TestAction>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP113_010_eService_Create_Claim" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ifn=&quot;http://pm.lmig.com/cl/FNOLMediationLibrary/iFNOLServiceExport&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:domain=&quot;http://pm.lmig.com/cl/fnol/model/domain&quot;&gt;   &lt;soap:Header/&gt;   &lt;soap:Body&gt;      &lt;ifn:createClaim&gt;         &lt;CreateClaimRequest&gt;            &lt;RequestId xsi:nil=&quot;true&quot;/&gt;            &lt;Requestor&gt;eService&lt;/Requestor&gt;            &lt;UserID xsi:nil=&quot;true&quot;/&gt;            &lt;Claim&gt;               &lt;HowReported&gt;eService&lt;/HowReported&gt;               &lt;Policy&gt;                  &lt;PolicyNumber&gt;${POLICY_NUMBER}&lt;/PolicyNumber&gt;                  &lt;PolicyType&gt;auto_per&lt;/PolicyType&gt;               &lt;/Policy&gt;               &lt;LossDate&gt;${DateOfLoss}T09:45:00Z&lt;/LossDate&gt;               &lt;LossType&gt;auto&lt;/LossType&gt;               &lt;ReportedDate&gt;${DateOfLoss}&lt;/ReportedDate&gt;               &lt;ReportedType&gt;self&lt;/ReportedType&gt;               &lt;ClaimSource/&gt;            &lt;/Claim&gt;         &lt;/CreateClaimRequest&gt;      &lt;/ifn:createClaim&gt;   &lt;/soap:Body&gt;&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_FNOL}/FNOLMediationModuleWeb/sca/FNOLServiceExport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${GV_HOSTNAME_FNOL}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/soap+xml; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="RandDate" enabled="true">
            <stringProp name="maximumValue">30</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat"></stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">RandDate</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="DateOfLoss - TP113_010_eService_Create_Claim" enabled="true">
            <stringProp name="scriptLanguage">beanshell</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">27dbf407-2138-4f53-b9a0-da3c6853de2e</stringProp>
            <stringProp name="script">	import java.text.SimpleDateFormat;
		
	SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
	SimpleDateFormat sdf1 = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
	Calendar DOfL = Calendar.getInstance(); 
	Calendar C_peffdate = Calendar.getInstance();
	Calendar C_pexpdate = Calendar.getInstance();
	Calendar C_currenttime= Calendar.getInstance();
	
	Date peffdate = new Date(vars.get(&quot;POL_EFF_DATE&quot;));
	Date pexpdate = new Date(vars.get(&quot;POL_EXP_DATE&quot;));
	
	C_currenttime.setTime(new Date());
	C_peffdate.setTime(peffdate);
	C_pexpdate.setTime(pexpdate);
	DOfL.setTime(peffdate);
	DOfL.add(Calendar.DATE, Integer.parseInt(vars.get(&quot;RandDate&quot;)));
		
	vars.put(&quot;DateOfLoss&quot;,&quot;0&quot;);
	
//	while (Integer.parseInt(vars.get(&quot;DateOfLoss&quot;)) &lt;= 0)
	if (Integer.parseInt(vars.get(&quot;DateOfLoss&quot;)) &lt;= 0)
		{
			if((DOfL.after(C_peffdate) &amp;&amp; DOfL.before(C_pexpdate) &amp;&amp; (DOfL.before(C_currenttime) || DOfL.before(C_currenttime))))
			{
				DOfL.add(Calendar.DATE, Integer.parseInt(vars.get(&quot;RandDate&quot;)));
				vars.put(&quot;DateOfLoss&quot;,sdf1.format(DOfL.getTime()).toString());
				
			}
			//log.info(&quot;While Loop The valuse of of Date of Loss :&quot;+vars.get(&quot;DateOfLoss&quot;));	
		}
</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_010_eService_Create_Claim failed - HTTP Reponse not 200 exiting iteration" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Error_Description" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Error_Description</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Description&gt;(.*?)&lt;/Description&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Claim_Number" enabled="true">
            <stringProp name="TestPlan.comments">&quot;Claim_Number&quot;|&quot;LB=&lt;ClaimNumber&gt;&quot;|&quot;RB=&lt;/ClaimNumber&gt;&quot;|&quot;Search=Body&quot;|&quot;IgnoreRedirections=Yes&quot;|&quot;NotFound=WARNING&quot;|</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Claim_Number</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;ClaimNumber&gt;(.*?)&lt;/ClaimNumber&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Policy_ID" enabled="true">
            <stringProp name="TestPlan.comments">&quot;Policy_ID&quot;|&quot;LB=&lt;Policy&gt;&lt;Id&gt;&quot;|&quot;RB=&lt;/Id&gt;&quot;|&quot;Search=Body&quot;|&quot;IgnoreRedirections=Yes&quot;|&quot;NotFound=WARNING&quot;|</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Policy_ID</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Policy&gt;&lt;Id&gt;(.*?)&lt;/Id&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Claim_ID" enabled="true">
            <stringProp name="TestPlan.comments">&quot;Claim_ID&quot;|&quot;LB=&lt;Claim&gt;&lt;Id&gt;&quot;|&quot;RB=&lt;/Id&gt;&quot;|&quot;Search=Body&quot;|&quot;IgnoreRedirections=Yes&quot;|&quot;NotFound=WARNING&quot;|</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Claim_ID</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Claim&gt;&lt;Id&gt;(.*?)&lt;/Id&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_010_eService_Create_Claim failed - HTTP Reponse 200 but unsucessful response. Status Description = ${Error_Description} for Policy Number ${POLICY_NUMBER} with DOL ${DateOfLoss}" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="208995750">&lt;Status&gt;success&lt;/Status&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP113_020_eService_Get_Vehicles_By_Policy_Id" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ifn=&quot;http://pm.lmig.com/cl/FNOLMediationLibrary/iFNOLServiceExport&quot;&gt;   &lt;soap:Header/&gt;   &lt;soap:Body&gt;      &lt;ifn:getVehiclesByPolicyId&gt;         &lt;GetVehiclesByPolicyIdRequest&gt;            &lt;RequestId&gt;?&lt;/RequestId&gt;            &lt;Requestor&gt;eService&lt;/Requestor&gt;            &lt;UserID&gt;?&lt;/UserID&gt;            &lt;PolicyId&gt;${Policy_ID}&lt;/PolicyId&gt;         &lt;/GetVehiclesByPolicyIdRequest&gt;      &lt;/ifn:getVehiclesByPolicyId&gt;   &lt;/soap:Body&gt;&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_FNOL}/FNOLMediationModuleWeb/sca/FNOLServiceExport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${GV_HOSTNAME_FNOL}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/soap+xml; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_020_eService_Get_Vehicles_By_Policy_Id failed - HTTP Reponse not 200 exiting iteration" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Vehicle_ID" enabled="true">
            <stringProp name="TestPlan.comments">&quot;Vehicle_ID&quot;|&quot;LB=&lt;Vehicle&gt;&lt;Id&gt;&quot;|&quot;RB=&lt;/Id&gt;&quot;|&quot;Search=Body&quot;|&quot;IgnoreRedirections=Yes&quot;|&quot;NotFound=WARNING&quot;|</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Vehicle_ID</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Vehicle&gt;&lt;Id&gt;(.*?)&lt;/Id&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Error_Description" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Error_Description</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Description&gt;(.*?)&lt;/Description&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_020_eService_Get_Vehicles_By_Policy_Id failed - HTTP Reponse 200 but unsucessful response. Status Description = ${Error_Description}" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="208995750">&lt;Status&gt;success&lt;/Status&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP113_030_eService_Create_Incident" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:iin=&quot;http://pm.lmig.com/cl/IncidentMediationLibrary/iIncidentServiceImport&quot; xmlns:ser=&quot;http://pm.lmig.com/cl/incident/model/service&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:do=&quot;http://pm.lmig.com/cl/incident/model/domain&quot;&gt;   &lt;soap:Header/&gt;   &lt;soap:Body&gt;      &lt;iin:createIncident&gt;         &lt;ser:CreateIncidentRequest&gt;            &lt;RequestId&gt;?&lt;/RequestId&gt;            &lt;Requestor&gt;eService&lt;/Requestor&gt;            &lt;UserID&gt;?&lt;/UserID&gt;            &lt;Incident xsi:type=&quot;do:VehicleIncident&quot;&gt;               &lt;RecordOnlyInd&gt;false&lt;/RecordOnlyInd&gt;               &lt;Vehicle&gt;                  &lt;Id&gt;${Vehicle_ID}&lt;/Id&gt;               &lt;/Vehicle&gt;               &lt;UnknownMileageInd&gt;false&lt;/UnknownMileageInd&gt;               &lt;OdomRead&gt;${__Random(1000,20000)}&lt;/OdomRead&gt;               &lt;LossPartyType&gt;insured&lt;/LossPartyType&gt;               &lt;VehicleInsdRelation&gt;listed&lt;/VehicleInsdRelation&gt;            &lt;/Incident&gt;            &lt;ClaimNumber&gt;${Claim_Number}&lt;/ClaimNumber&gt;         &lt;/ser:CreateIncidentRequest&gt;      &lt;/iin:createIncident&gt;   &lt;/soap:Body&gt;&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_INCIDENT}/IncidentMediationModuleWeb/sca/IncidentServiceExport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${GV_HOSTNAME_INCIDENT}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/soap+xml; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_030_eService_Create_Incident failed - HTTP Reponse not 200 exiting iteration" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Incident_ID" enabled="true">
            <stringProp name="TestPlan.comments">&quot;Incident_ID&quot;|&quot;LB=&lt;Incident xsi:type=\&quot;do:VehicleIncident\&quot;&gt;&lt;Id&gt;&quot;|&quot;RB=&lt;/Id&gt;&quot;|&quot;Search=Body&quot;|&quot;IgnoreRedirections=Yes&quot;|&quot;NotFound=WARNING&quot;|</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Incident_ID</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Incident xsi:type=&quot;do:VehicleIncident&quot;&gt;&lt;Id&gt;(.*?)&lt;/Id&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Error_Description" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Error_Description</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Description&gt;(.*?)&lt;/Description&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_030_eService_Create_Incident failed - HTTP Reponse 200 but unsucessful response. Status Description = ${Error_Description}" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-277899802">&lt;status&gt;success&lt;/status&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP113_040_eService_Get_Contacts_By_Claim_And_Roles" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:icon=&quot;http://pm.lmig.com/cl/ContactMediationLibrary/iContactServiceImport&quot;&gt;   &lt;soap:Header/&gt;   &lt;soap:Body&gt;      &lt;icon:getContactsByClaimAndRoles&gt;         &lt;GetContactsByClaimAndRolesRequest&gt;            &lt;RequestId&gt;?&lt;/RequestId&gt;            &lt;Requestor&gt;eService&lt;/Requestor&gt;            &lt;UserID&gt;?&lt;/UserID&gt;            &lt;ClaimNumber&gt;${Claim_Number}&lt;/ClaimNumber&gt;            &lt;RoleName&gt;insured&lt;/RoleName&gt;            &lt;RoleName&gt;secondinsured&lt;/RoleName&gt;         &lt;/GetContactsByClaimAndRolesRequest&gt;      &lt;/icon:getContactsByClaimAndRoles&gt;   &lt;/soap:Body&gt;&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_CONTACT}/ContactMediationModuleWeb/sca/ContactServiceExport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${GV_HOSTNAME_CONTACT}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/soap+xml; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_040_eService_Get_Contacts_By_Claim_And_Roles failed - HTTP Reponse not 200 exiting iteration" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Drivers_License_State" enabled="true">
            <stringProp name="TestPlan.comments">&quot;Drivers_License_State&quot;|&quot;LB=&lt;DriversLicenseState&gt;&quot;|&quot;RB=&lt;/DriversLicenseState&gt;&quot;|&quot;Search=Body&quot;|&quot;IgnoreRedirections=Yes&quot;|&quot;NotFound=WARNING&quot;|</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Drivers_License_State</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;DriversLicenseState&gt;(.*?)&lt;/DriversLicenseState&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Phone_Number" enabled="true">
            <stringProp name="TestPlan.comments">&quot;Phone_Number&quot;|&quot;LB=&lt;PhoneNumber&gt;&quot;|&quot;RB=&lt;/PhoneNumber&gt;&quot;|&quot;Search=Body&quot;|&quot;IgnoreRedirections=Yes&quot;|&quot;NotFound=WARNING&quot;|</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Phone_Number</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;PhoneNumber&gt;(.*?)&lt;/PhoneNumber&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="First_Name" enabled="true">
            <stringProp name="TestPlan.comments">&quot;First_Name&quot;|&quot;LB=&lt;FirstName&gt;&quot;|&quot;RB=&lt;/FirstName&gt;&quot;|&quot;Search=Body&quot;|&quot;IgnoreRedirections=Yes&quot;|&quot;NotFound=WARNING&quot;|</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">First_Name</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;FirstName&gt;(.*?)&lt;/FirstName&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Last_Name" enabled="true">
            <stringProp name="TestPlan.comments">&quot;Last_Name&quot;|&quot;LB=&lt;LastName&gt;&quot;|&quot;RB=&lt;/LastName&gt;&quot;|&quot;Search=Body&quot;|&quot;IgnoreRedirections=Yes&quot;|&quot;NotFound=WARNING&quot;|</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Last_Name</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;LastName&gt;(.*?)&lt;/LastName&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Contact_ID" enabled="true">
            <stringProp name="TestPlan.comments">&quot;Contact_ID&quot;|&quot;LB=&lt;Contact xsi:type=\&quot;do:Person\&quot;&gt;&lt;Id&gt;&quot;|&quot;RB=&lt;/Id&gt;&quot;|&quot;Search=Body&quot;|&quot;IgnoreRedirections=Yes&quot;|&quot;NotFound=WARNING&quot;|</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Contact_ID</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Contact xsi:type=\&quot;do:Person\&quot;&gt;&lt;Id&gt;(.*?)&lt;/Id&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Error_Description" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Error_Description</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Description&gt;(.*?)&lt;/Description&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_040_eService_Get_Contacts_By_Claim_And_Roles failed - HTTP Reponse 200 but unsucessful response. Status Description = ${Error_Description}" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="208995750">&lt;Status&gt;success&lt;/Status&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP113_050_eService_Create_Role_Reporter" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:icon=&quot;http://pm.lmig.com/cl/ContactMediationLibrary/iContactServiceImport&quot;&gt;   &lt;soap:Header/&gt;   &lt;soap:Body&gt;      &lt;icon:createRole&gt;         &lt;CreateRoleRequest&gt;            &lt;RequestId&gt;?&lt;/RequestId&gt;            &lt;Requestor&gt;eService&lt;/Requestor&gt;            &lt;UserID&gt;?&lt;/UserID&gt;            &lt;ContactId&gt;${Contact_ID}&lt;/ContactId&gt;            &lt;Role&gt;               &lt;RoleName&gt;reporter&lt;/RoleName&gt;               &lt;Active&gt;true&lt;/Active&gt;            &lt;/Role&gt;         &lt;/CreateRoleRequest&gt;      &lt;/icon:createRole&gt;   &lt;/soap:Body&gt;&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_CONTACT}/ContactMediationModuleWeb/sca/ContactServiceExport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${GV_HOSTNAME_CONTACT}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/soap+xml; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_050_eService_Create_Role_Reporter failed - HTTP Reponse not 200 exiting iteration" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Error_Description" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Error_Description</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Description&gt;(.*?)&lt;/Description&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_050_eService_Create_Role_Reporter failed - HTTP Reponse 200 but unsucessful response. Status Description = ${Error_Description}" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="208995750">&lt;Status&gt;success&lt;/Status&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP113_060_eService_Create_Role_Incident_Owner" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:icon=&quot;http://pm.lmig.com/cl/ContactMediationLibrary/iContactServiceImport&quot;&gt;   &lt;soap:Header/&gt;   &lt;soap:Body&gt;      &lt;icon:createRole&gt;         &lt;CreateRoleRequest&gt;            &lt;RequestId&gt;?&lt;/RequestId&gt;            &lt;Requestor&gt;eService&lt;/Requestor&gt;            &lt;UserID&gt;?&lt;/UserID&gt;            &lt;ContactId&gt;${Contact_ID}&lt;/ContactId&gt;            &lt;Role&gt;               &lt;IncidentId&gt;${Incident_ID}&lt;/IncidentId&gt;               &lt;RoleName&gt;incidentowner&lt;/RoleName&gt;               &lt;Active&gt;true&lt;/Active&gt;            &lt;/Role&gt;         &lt;/CreateRoleRequest&gt;      &lt;/icon:createRole&gt;   &lt;/soap:Body&gt;&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_CONTACT}/ContactMediationModuleWeb/sca/ContactServiceExport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${GV_HOSTNAME_CONTACT}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/soap+xml; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_060_eService_Create_Role_Incident_Owner failed - HTTP Reponse not 200 exiting iteration" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Error_Description" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Error_Description</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Description&gt;(.*?)&lt;/Description&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_060_eService_Create_Role_Incident_Owner failed - HTTP Reponse 200 but unsucessful response. Status Description = ${Error_Description}" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="208995750">&lt;Status&gt;success&lt;/Status&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP113_070_eService_Update_Contact" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:icon=&quot;http://pm.lmig.com/cl/ContactMediationLibrary/iContactServiceImport&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:do=&quot;http://pm.lmig.com/cl/contact/model/service/operation/updatecontact&quot;&gt;   &lt;soap:Header/&gt;   &lt;soap:Body&gt;      &lt;icon:updateContact&gt;         &lt;UpdateContactRequest&gt;            &lt;RequestId&gt;?&lt;/RequestId&gt;            &lt;Requestor&gt;eService&lt;/Requestor&gt;            &lt;UserID&gt;?&lt;/UserID&gt;            &lt;Contact xsi:type=&quot;do:Person&quot;&gt;               &lt;Id&gt;${Contact_ID}&lt;/Id&gt;               &lt;ReceiveEmailInd&gt;false&lt;/ReceiveEmailInd&gt;               &lt;PrimaryContactId&gt;${Contact_ID}&lt;/PrimaryContactId&gt;               &lt;PreferredInd&gt;false&lt;/PreferredInd&gt;               &lt;FirstName&gt;${First_Name}&lt;/FirstName&gt;               &lt;LastName&gt;${Last_Name}&lt;/LastName&gt;               &lt;DriversLicenseState&gt;${Drivers_License_State}&lt;/DriversLicenseState&gt;            &lt;/Contact&gt;         &lt;/UpdateContactRequest&gt;      &lt;/icon:updateContact&gt;   &lt;/soap:Body&gt;&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_CONTACT}/ContactMediationModuleWeb/sca/ContactServiceExport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${GV_HOSTNAME_CONTACT}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/soap+xml; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_070_eService_Update_Contact failed - HTTP Reponse not 200 exiting iteration" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Error_Description" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Error_Description</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Description&gt;(.*?)&lt;/Description&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_070_eService_Update_Contact failed - HTTP Reponse 200 but unsucessful response. Status Description = ${Error_Description}" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="208995750">&lt;Status&gt;success&lt;/Status&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP113_080_eService_Get_Phone_Type" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ity=&quot;http://pm.lmig.com/cl/TypelistServiceMediationLibrary/iTypelistServiceExport&quot;&gt;   &lt;soap:Header/&gt;   &lt;soap:Body&gt;      &lt;ity:getTypelistByNameAndFilter&gt;         &lt;GetTypelistByNameAndFilterRequest&gt;            &lt;RequestId&gt;?&lt;/RequestId&gt;            &lt;Requestor&gt;eService&lt;/Requestor&gt;            &lt;UserID&gt;?&lt;/UserID&gt;            &lt;TypelistName&gt;PrimaryPhoneType&lt;/TypelistName&gt;         &lt;/GetTypelistByNameAndFilterRequest&gt;      &lt;/ity:getTypelistByNameAndFilter&gt;   &lt;/soap:Body&gt;&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_TYPELIST}/TypelistServiceMediationModuleWeb/sca/TypelistServiceExport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${GV_HOSTNAME_TYPELIST}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/soap+xml; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_080_eService_Get_Phone_Type failed - HTTP Reponse not 200 exiting iteration" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Error_Description" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Error_Description</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Description&gt;(.*?)&lt;/Description&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_080_eService_Get_Phone_Type failed - HTTP Reponse 200 but unsucessful response. Status Description = ${Error_Description}" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="208995750">&lt;Status&gt;success&lt;/Status&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP113_090_eService_Create_Reporter_Phone" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:icon=&quot;http://pm.lmig.com/cl/ContactMediationLibrary/iContactServiceImport&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:do=&quot;http://pm.lmig.com/cl/contact/model/domain&quot;&gt;   &lt;soap:Header/&gt;   &lt;soap:Body&gt;      &lt;icon:createContactMethod&gt;         &lt;CreateContactMethodRequest&gt;            &lt;RequestId&gt;?&lt;/RequestId&gt;            &lt;Requestor&gt;eService&lt;/Requestor&gt;            &lt;UserID&gt;?&lt;/UserID&gt;            &lt;ContactId&gt;${Contact_ID}&lt;/ContactId&gt;            &lt;ContactMethod xsi:type=&quot;do:Phone&quot; type=&quot;home&quot;&gt;               &lt;PrimaryInd&gt;true&lt;/PrimaryInd&gt;               &lt;PhoneNumber&gt;${Phone_Number}&lt;/PhoneNumber&gt;            &lt;/ContactMethod&gt;         &lt;/CreateContactMethodRequest&gt;      &lt;/icon:createContactMethod&gt;   &lt;/soap:Body&gt;&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_CONTACT}/ContactMediationModuleWeb/sca/ContactServiceExport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${GV_HOSTNAME_CONTACT}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/soap+xml; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_090_eService_Create_Reporter_Phone failed - HTTP Reponse not 200 exiting iteration" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Error_Description" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Error_Description</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Description&gt;(.*?)&lt;/Description&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_090_eService_Create_Reporter_Phone failed - HTTP Reponse 200 but unsucessful response. Status Description = ${Error_Description}" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="208995750">&lt;Status&gt;success&lt;/Status&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP113_100_eService_Create_Reporter_Email" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:icon=&quot;http://pm.lmig.com/cl/ContactMediationLibrary/iContactServiceImport&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:do=&quot;http://pm.lmig.com/cl/contact/model/domain&quot;&gt;   &lt;soap:Header/&gt;   &lt;soap:Body&gt;      &lt;icon:createContactMethod&gt;         &lt;CreateContactMethodRequest&gt;            &lt;RequestId&gt;?&lt;/RequestId&gt;            &lt;Requestor&gt;eService&lt;/Requestor&gt;            &lt;UserID&gt;?&lt;/UserID&gt;            &lt;ContactId&gt;${Contact_ID}&lt;/ContactId&gt;            &lt;ContactMethod xsi:type=&quot;do:Email&quot;&gt;               &lt;PrimaryInd&gt;true&lt;/PrimaryInd&gt;               &lt;EmailAddress&gt;nobody@libertymutual.com&lt;/EmailAddress&gt;            &lt;/ContactMethod&gt;         &lt;/CreateContactMethodRequest&gt;      &lt;/icon:createContactMethod&gt;   &lt;/soap:Body&gt;&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_CONTACT}/ContactMediationModuleWeb/sca/ContactServiceExport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${GV_HOSTNAME_CONTACT}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/soap+xml; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_100_eService_Create_Reporter_Email failed - HTTP Reponse not 200 exiting iteration" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Error_Description" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Error_Description</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Description&gt;(.*?)&lt;/Description&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_100_eService_Create_Reporter_Email failed - HTTP Reponse 200 but unsucessful response. Status Description = ${Error_Description}" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="208995750">&lt;Status&gt;success&lt;/Status&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP113_110_eService_Update_Claim" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ifn=&quot;http://pm.lmig.com/cl/FNOLMediationLibrary/iFNOLServiceExport&quot;&gt;   &lt;soap:Header/&gt;   &lt;soap:Body&gt;      &lt;ifn:updateClaim&gt;         &lt;UpdateClaimRequest&gt;            &lt;RequestId&gt;?&lt;/RequestId&gt;            &lt;Requestor&gt;eService&lt;/Requestor&gt;            &lt;UserID&gt;?&lt;/UserID&gt;            &lt;Claim&gt;               &lt;Id&gt;${Claim_ID}&lt;/Id&gt;               &lt;ClaimNumber&gt;${Claim_Number}&lt;/ClaimNumber&gt;               &lt;Fault&gt;0&lt;/Fault&gt;               &lt;FaultRating&gt;1&lt;/FaultRating&gt;               &lt;HowReported&gt;eService&lt;/HowReported&gt;               &lt;LossDate&gt;${DateOfLoss}T09:45:00Z&lt;/LossDate&gt;               &lt;LossCategory&gt;singleVehicleAccidentAuto&lt;/LossCategory&gt;               &lt;LossCause&gt;hitstationary&lt;/LossCause&gt;               &lt;LossDescription&gt;TP113 eService Hit Stationary Object Claim Registration&lt;/LossDescription&gt;               &lt;LossLocation type=&quot;&quot;&gt;                  &lt;Id&gt;&lt;/Id&gt;                  &lt;AddressLine1&gt;34 Boylston Street&lt;/AddressLine1&gt;                  &lt;City&gt;Boston&lt;/City&gt;                  &lt;State&gt;MA&lt;/State&gt;                  &lt;PostalCode&gt;01515&lt;/PostalCode&gt;                  &lt;Country&gt;US&lt;/Country&gt;               &lt;/LossLocation&gt;               &lt;LossType&gt;auto&lt;/LossType&gt;               &lt;ReportedDate&gt;${DateOfLoss}&lt;/ReportedDate&gt;               &lt;ClaimSource/&gt;            &lt;/Claim&gt;         &lt;/UpdateClaimRequest&gt;      &lt;/ifn:updateClaim&gt;   &lt;/soap:Body&gt;&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_FNOL}/FNOLMediationModuleWeb/sca/FNOLServiceExport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${GV_HOSTNAME_FNOL}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/soap+xml; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_110_eService_Update_Claim failed - HTTP Reponse not 200 exiting iteration" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Error_Description" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Error_Description</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Description&gt;(.*?)&lt;/Description&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_110_eService_Update_Claim failed - HTTP Reponse 200 but unsucessful response. Status Description = ${Error_Description}" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="208995750">&lt;Status&gt;success&lt;/Status&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP113_120_eService_Get_LM_Object_Struck_Type" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ity=&quot;http://pm.lmig.com/cl/TypelistServiceMediationLibrary/iTypelistServiceExport&quot;&gt;	&lt;soap:Header/&gt;	&lt;soap:Body&gt;		&lt;ity:getTypelistByNameAndFilter&gt;		&lt;GetTypelistByNameAndFilterRequest&gt;		&lt;RequestId&gt;?&lt;/RequestId&gt;		&lt;Requestor&gt;eService&lt;/Requestor&gt;		&lt;UserID&gt;?&lt;/UserID&gt;		&lt;TypelistName&gt;LM_ObjectStruckType&lt;/TypelistName&gt;		&lt;/GetTypelistByNameAndFilterRequest&gt;		&lt;/ity:getTypelistByNameAndFilter&gt;	&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_TYPELIST}/TypelistServiceMediationModuleWeb/sca/TypelistServiceExport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${GV_HOSTNAME_TYPELIST}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/soap+xml; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_120_eService_Get_LM_Object_Struck_Type failed - HTTP Reponse not 200 exiting iteration" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Error_Description" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Error_Description</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Description&gt;(.*?)&lt;/Description&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_120_eService_Get_LM_Object_Struck_Type failed - HTTP Reponse 200 but unsucessful response. Status Description = ${Error_Description}" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="208995750">&lt;Status&gt;success&lt;/Status&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP113_130_eService_Create_Claim_Damage" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ifn=&quot;http://pm.lmig.com/cl/FNOLMediationLibrary/iFNOLServiceExport&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:domain=&quot;http://pm.lmig.com/cl/fnol/model/domain&quot;&gt;   &lt;soap:Header/&gt;   &lt;soap:Body&gt;      &lt;ifn:createClaimDamage&gt;         &lt;CreateClaimDamageRequest&gt;            &lt;RequestId&gt;?&lt;/RequestId&gt;            &lt;Requestor&gt;eService&lt;/Requestor&gt;            &lt;UserID&gt;?&lt;/UserID&gt;            &lt;ClaimNumber&gt;${Claim_Number}&lt;/ClaimNumber&gt;            &lt;ClaimDamage xsi:type=&quot;domain:SingleVehicleAutoClaimDamage&quot;&gt;               &lt;ObjectStruckType&gt;other&lt;/ObjectStruckType&gt;            &lt;/ClaimDamage&gt;         &lt;/CreateClaimDamageRequest&gt;      &lt;/ifn:createClaimDamage&gt;   &lt;/soap:Body&gt;&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_FNOL}/FNOLMediationModuleWeb/sca/FNOLServiceExport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${GV_HOSTNAME_FNOL}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/soap+xml; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_130_eService_Create_Claim_Damage failed - HTTP Reponse not 200 exiting iteration" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Error_Description" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Error_Description</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Description&gt;(.*?)&lt;/Description&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_130_eService_Create_Claim_Damage failed - HTTP Reponse 200 but unsucessful response. Status Description = ${Error_Description}" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="208995750">&lt;Status&gt;success&lt;/Status&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP113_140_eService_Get_Severity_Type" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ity=&quot;http://pm.lmig.com/cl/TypelistServiceMediationLibrary/iTypelistServiceExport&quot;&gt;   &lt;soap:Header/&gt;   &lt;soap:Body&gt;      &lt;ity:getTypelistByNameAndFilter&gt;         &lt;GetTypelistByNameAndFilterRequest&gt;            &lt;RequestId&gt;?&lt;/RequestId&gt;            &lt;Requestor&gt;eService&lt;/Requestor&gt;            &lt;UserID&gt;?&lt;/UserID&gt;            &lt;TypelistName&gt;SeverityType&lt;/TypelistName&gt;         &lt;/GetTypelistByNameAndFilterRequest&gt;      &lt;/ity:getTypelistByNameAndFilter&gt;   &lt;/soap:Body&gt;&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_TYPELIST}/TypelistServiceMediationModuleWeb/sca/TypelistServiceExport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${GV_HOSTNAME_TYPELIST}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/soap+xml; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_140_eService_Get_Severity_Type failed - HTTP Reponse not 200 exiting iteration" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Error_Description" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Error_Description</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Description&gt;(.*?)&lt;/Description&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_140_eService_Get_Severity_Type failed - HTTP Reponse 200 but unsucessful response. Status Description = ${Error_Description}" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="208995750">&lt;Status&gt;success&lt;/Status&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP113_150_eService_Get_Collision_Point_Type" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ity=&quot;http://pm.lmig.com/cl/TypelistServiceMediationLibrary/iTypelistServiceExport&quot;&gt;   &lt;soap:Header/&gt;   &lt;soap:Body&gt;      &lt;ity:getTypelistByNameAndFilter&gt;         &lt;GetTypelistByNameAndFilterRequest&gt;            &lt;RequestId&gt;?&lt;/RequestId&gt;            &lt;Requestor&gt;eService&lt;/Requestor&gt;            &lt;UserID&gt;?&lt;/UserID&gt;            &lt;TypelistName&gt;CollisionPoint&lt;/TypelistName&gt;         &lt;/GetTypelistByNameAndFilterRequest&gt;      &lt;/ity:getTypelistByNameAndFilter&gt;   &lt;/soap:Body&gt;&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_TYPELIST}/TypelistServiceMediationModuleWeb/sca/TypelistServiceExport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${GV_HOSTNAME_TYPELIST}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/soap+xml; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_150_eService_Get_Collision_Point_Type failed - HTTP Reponse not 200 exiting iteration" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Error_Description" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Error_Description</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Description&gt;(.*?)&lt;/Description&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_150_eService_Get_Collision_Point_Type failed - HTTP Reponse 200 but unsucessful response. Status Description = ${Error_Description}" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="208995750">&lt;Status&gt;success&lt;/Status&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP113_160_eService_Update_Incident" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:iin=&quot;http://pm.lmig.com/cl/IncidentMediationLibrary/iIncidentServiceImport&quot; xmlns:ser=&quot;http://pm.lmig.com/cl/incident/model/service&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:do=&quot;http://pm.lmig.com/cl/incident/model/domain&quot;&gt;   &lt;soap:Header/&gt;   &lt;soap:Body&gt;      &lt;iin:updateIncident&gt;         &lt;ser:UpdateIncidentRequest&gt;            &lt;RequestId&gt;?&lt;/RequestId&gt;            &lt;Requestor&gt;eService&lt;/Requestor&gt;            &lt;UserID&gt;?&lt;/UserID&gt;            &lt;Incident xsi:type=&quot;do:VehicleIncident&quot;&gt;               &lt;Id&gt;${Incident_ID}&lt;/Id&gt;               &lt;RecordOnlyInd&gt;false&lt;/RecordOnlyInd&gt;               &lt;Description&gt;TP113 eService claim registration&lt;/Description&gt;               &lt;Severity&gt;minor&lt;/Severity&gt;               &lt;PointOfFirstImpact&gt;14&lt;/PointOfFirstImpact&gt;               &lt;Vehicle&gt;                                    &lt;Id&gt;${Vehicle_ID}&lt;/Id&gt;               &lt;/Vehicle&gt;               &lt;NoOperatorInd&gt;true&lt;/NoOperatorInd&gt;               &lt;UnknownMileageInd&gt;false&lt;/UnknownMileageInd&gt;               &lt;OdomRead&gt;${__Random(1000,20000)}&lt;/OdomRead&gt;               &lt;LossPartyType&gt;insured&lt;/LossPartyType&gt;               &lt;VehicleInsdRelation&gt;listed&lt;/VehicleInsdRelation&gt;            &lt;/Incident&gt;         &lt;/ser:UpdateIncidentRequest&gt;      &lt;/iin:updateIncident&gt;   &lt;/soap:Body&gt;&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_INCIDENT}/IncidentMediationModuleWeb/sca/IncidentServiceExport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${GV_HOSTNAME_INCIDENT}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/soap+xml; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_160_eService_Update_Incident failed - HTTP Reponse not 200 exiting iteration" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Error_Description" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Error_Description</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Description&gt;(.*?)&lt;/Description&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_160_eService_Update_Incident failed - HTTP Reponse 200 but unsucessful response. Status Description = ${Error_Description}" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-277899802">&lt;status&gt;success&lt;/status&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP113_170_eService_Create_Incident_Non_Ven_PD" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:iin=&quot;http://pm.lmig.com/cl/IncidentMediationLibrary/iIncidentServiceImport&quot; xmlns:ser=&quot;http://pm.lmig.com/cl/incident/model/service&quot; xmlns:do=&quot;http://pm.lmig.com/cl/incident/model/domain&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;   &lt;soap:Header/&gt;   &lt;soap:Body&gt;		&lt;iin:createIncident&gt;		&lt;ser:CreateIncidentRequest&gt;		&lt;RequestId&gt;?&lt;/RequestId&gt;		&lt;Requestor&gt;eService&lt;/Requestor&gt;		&lt;UserID&gt;?&lt;/UserID&gt;		&lt;Incident xsi:type=&quot;do:FixedPropertyIncident&quot;&gt;		&lt;Description&gt;TP113 I hit a statue of the black fly queen&lt;/Description&gt;		&lt;AppurtenantDamageInd&gt;false&lt;/AppurtenantDamageInd&gt;		&lt;/Incident&gt;		&lt;ClaimNumber&gt;${Claim_Number}&lt;/ClaimNumber&gt;		&lt;/ser:CreateIncidentRequest&gt;		&lt;/iin:createIncident&gt;   &lt;/soap:Body&gt;	&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_INCIDENT}/IncidentMediationModuleWeb/sca/IncidentServiceExport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${GV_HOSTNAME_INCIDENT}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/soap+xml; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_170_eService_Create_Incident_Non_Ven_PD failed - HTTP Reponse not 200 exiting iteration" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Error_Description" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Error_Description</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Description&gt;(.*?)&lt;/Description&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_170_eService_Create_Incident_Non_Ven_PD failed - HTTP Reponse 200 but unsucessful response. Status Description = ${Error_Description}" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-277899802">&lt;status&gt;success&lt;/status&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Incident_ID" enabled="true">
            <stringProp name="TestPlan.comments">&quot;Incident_ID&quot;|&quot;LB=&lt;Incident xsi:type=\&quot;do:VehicleIncident\&quot;&gt;&lt;Id&gt;&quot;|&quot;RB=&lt;/Id&gt;&quot;|&quot;Search=Body&quot;|&quot;IgnoreRedirections=Yes&quot;|&quot;NotFound=WARNING&quot;|</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Incident_ID</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Incident xsi:type=\&quot;do:VehicleIncident\&quot;&gt;&lt;Id&gt;(.*?)&lt;/Id&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP113_180_eService_Register_Claim" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ifn=&quot;http://pm.lmig.com/cl/FNOLMediationLibrary/iFNOLServiceExport&quot;&gt;   &lt;soap:Header/&gt;   &lt;soap:Body&gt;      &lt;ifn:registerClaim&gt;         &lt;RegisterClaimRequest&gt;            &lt;RequestId&gt;?&lt;/RequestId&gt;            &lt;Requestor&gt;eService&lt;/Requestor&gt;            &lt;UserID&gt;?&lt;/UserID&gt;            &lt;ClaimNumber&gt;${Claim_Number}&lt;/ClaimNumber&gt;         &lt;/RegisterClaimRequest&gt;      &lt;/ifn:registerClaim&gt;   &lt;/soap:Body&gt;&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_FNOL}/FNOLMediationModuleWeb/sca/FNOLServiceExport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${GV_HOSTNAME_FNOL}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/soap+xml; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_180_eService_Register_Claim failed - HTTP Reponse not 200 exiting iteration" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Error_Description" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Error_Description</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Description&gt;(.*?)&lt;/Description&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="TP113_180_eService_Register_Claim failed - HTTP Reponse 200 but unsucessful response. Status Description = ${Error_Description}" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="208995750">&lt;Status&gt;success&lt;/Status&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Registered_Claim_Number" enabled="true">
            <stringProp name="TestPlan.comments">&quot;Registered_Claim_Number&quot;|&quot;LB=&lt;ClaimNumber&gt;&quot;|&quot;RB=&lt;/ClaimNumber&gt;&quot;|&quot;Search=Body&quot;|&quot;IgnoreRedirections=Yes&quot;|&quot;NotFound=WARNING&quot;|</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Registered_Claim_Number</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;ClaimNumber&gt;(.*?)&lt;/ClaimNumber&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TP113_190_eService_Cancel_Claim" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ifn=&quot;http://pm.lmig.com/cl/FNOLMediationLibrary/iFNOLServiceExport&quot;&gt;   &lt;soap:Header/&gt;   &lt;soap:Body&gt;      &lt;ifn:cancelClaim&gt;         &lt;CancelClaimRequest&gt;            &lt;RequestId&gt;?&lt;/RequestId&gt;            &lt;Requestor&gt;eService&lt;/Requestor&gt;            &lt;UserID&gt;?&lt;/UserID&gt;            &lt;ClaimNumber&gt;${Claim_Number}&lt;/ClaimNumber&gt;         &lt;/CancelClaimRequest&gt;      &lt;/ifn:cancelClaim&gt;   &lt;/soap:Body&gt;&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://${GV_HOSTNAME_FNOL}/FNOLMediationModuleWeb/sca/FNOLServiceExport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${GV_HOSTNAME_FNOL}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/soap+xml; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="208995750">&lt;Status&gt;success&lt;/Status&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Status" enabled="false">
            <stringProp name="TestPlan.comments">&quot;Status&quot;|&quot;LB=&lt;Status&gt;&quot;|&quot;RB=&lt;/Status&gt;&quot;|&quot;Search=Body&quot;|&quot;IgnoreRedirections=Yes&quot;|&quot;NotFound=WARNING&quot;|</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Status</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Status&gt;(.*?)&lt;/Status&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Error_Code" enabled="false">
            <stringProp name="TestPlan.comments">&quot;Error_Code&quot;|&quot;LB=&lt;Code&gt;&quot;|&quot;RB=&lt;/Code&gt;&quot;|&quot;Search=Body&quot;|&quot;IgnoreRedirections=Yes&quot;|&quot;NotFound=WARNING&quot;|</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Error_Code</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Code&gt;(.*?)&lt;/Code&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Error_Description" enabled="false">
            <stringProp name="TestPlan.comments">&quot;Error_Description&quot;|&quot;LB=&lt;Description&gt;&quot;|&quot;RB=&lt;/Description&gt;&quot;|&quot;Search=Body&quot;|&quot;IgnoreRedirections=Yes&quot;|&quot;NotFound=WARNING&quot;|</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Error_Description</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;Description&gt;(.*?)&lt;/Description&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">null</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
